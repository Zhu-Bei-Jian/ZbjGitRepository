// Code generated by protoc-gen-go. DO NOT EDIT.
// source: def/def.proto

/*
Package gamedef is a generated protocol buffer package.

It is generated from these files:
	def/def.proto

It has these top-level messages:
	AuthInfo
	UserBrief
	UserSummary
	UserBase
	HeadInfo
	GameInfo
	LoginSource
	Room
	RoomSetting
	GameSeat
	ServerConfig
	Int32KV
	Position
	GameBoard
	Cell
	Card
	Buff
	Change
	PosChange
	BuffChange
	ActSelectParam
	CardGroup
	PoolCard
*/
package gamedef

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import gameconf "sanguosha.com/sgs_herox/proto/gameconf"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GamePhase int32

const (
	GamePhase_Invalid    GamePhase = 0
	GamePhase_Ready      GamePhase = 1
	GamePhase_Start      GamePhase = 2
	GamePhase_InitCard   GamePhase = 3
	GamePhase_PhaseBegin GamePhase = 4
	GamePhase_PhaseDraw  GamePhase = 5
	GamePhase_PhaseMain  GamePhase = 6
	GamePhase_PhaseEnd   GamePhase = 7
	GamePhase_End        GamePhase = 8
)

var GamePhase_name = map[int32]string{
	0: "Invalid",
	1: "Ready",
	2: "Start",
	3: "InitCard",
	4: "PhaseBegin",
	5: "PhaseDraw",
	6: "PhaseMain",
	7: "PhaseEnd",
	8: "End",
}
var GamePhase_value = map[string]int32{
	"Invalid":    0,
	"Ready":      1,
	"Start":      2,
	"InitCard":   3,
	"PhaseBegin": 4,
	"PhaseDraw":  5,
	"PhaseMain":  6,
	"PhaseEnd":   7,
	"End":        8,
}

func (x GamePhase) String() string {
	return proto.EnumName(GamePhase_name, int32(x))
}
func (GamePhase) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type ActType int32

const (
	ActType_None       ActType = 0
	ActType_PlaceCard  ActType = 1
	ActType_TurnUpCard ActType = 2
	ActType_MoveCard   ActType = 3
	ActType_AttackCard ActType = 4
	ActType_AttackCamp ActType = 5
)

var ActType_name = map[int32]string{
	0: "None",
	1: "PlaceCard",
	2: "TurnUpCard",
	3: "MoveCard",
	4: "AttackCard",
	5: "AttackCamp",
}
var ActType_value = map[string]int32{
	"None":       0,
	"PlaceCard":  1,
	"TurnUpCard": 2,
	"MoveCard":   3,
	"AttackCard": 4,
	"AttackCamp": 5,
}

func (x ActType) String() string {
	return proto.EnumName(ActType_name, int32(x))
}
func (ActType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type SelectCardType int32

const (
	SelectCardType_Any         SelectCardType = 0
	SelectCardType_MyOwn       SelectCardType = 1
	SelectCardType_Enemy       SelectCardType = 2
	SelectCardType_MyOwnFaceUp SelectCardType = 3
	SelectCardType_MyOwnBack   SelectCardType = 4
	SelectCardType_EnemyFaceUp SelectCardType = 5
	SelectCardType_EnemyBack   SelectCardType = 6
	// 其他卡牌 （不能选择技能发动者自己）
	SelectCardType_OtherMyOwn               SelectCardType = 7
	SelectCardType_OtherMyOwnFaceUp         SelectCardType = 8
	SelectCardType_OtherMyOwnBack           SelectCardType = 9
	SelectCardType_OtherEnemyFaceUp         SelectCardType = 10
	SelectCardType_OtherEnemyBack           SelectCardType = 11
	SelectCardType_other                    SelectCardType = 12
	SelectCardType_NotHeavy                 SelectCardType = 13
	SelectCardType_OneOtherMyOwnAndOneEnemy SelectCardType = 14
)

var SelectCardType_name = map[int32]string{
	0:  "Any",
	1:  "MyOwn",
	2:  "Enemy",
	3:  "MyOwnFaceUp",
	4:  "MyOwnBack",
	5:  "EnemyFaceUp",
	6:  "EnemyBack",
	7:  "OtherMyOwn",
	8:  "OtherMyOwnFaceUp",
	9:  "OtherMyOwnBack",
	10: "OtherEnemyFaceUp",
	11: "OtherEnemyBack",
	12: "other",
	13: "NotHeavy",
	14: "OneOtherMyOwnAndOneEnemy",
}
var SelectCardType_value = map[string]int32{
	"Any":                      0,
	"MyOwn":                    1,
	"Enemy":                    2,
	"MyOwnFaceUp":              3,
	"MyOwnBack":                4,
	"EnemyFaceUp":              5,
	"EnemyBack":                6,
	"OtherMyOwn":               7,
	"OtherMyOwnFaceUp":         8,
	"OtherMyOwnBack":           9,
	"OtherEnemyFaceUp":         10,
	"OtherEnemyBack":           11,
	"other":                    12,
	"NotHeavy":                 13,
	"OneOtherMyOwnAndOneEnemy": 14,
}

func (x SelectCardType) String() string {
	return proto.EnumName(SelectCardType_name, int32(x))
}
func (SelectCardType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type UserSummary_Version int32

const (
	UserSummary_VerInit UserSummary_Version = 0
)

var UserSummary_Version_name = map[int32]string{
	0: "VerInit",
}
var UserSummary_Version_value = map[string]int32{
	"VerInit": 0,
}

func (x UserSummary_Version) String() string {
	return proto.EnumName(UserSummary_Version_name, int32(x))
}
func (UserSummary_Version) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 0} }

// -----------用户信息----------
type AuthInfo struct {
	UserId          uint64 `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	Nickname        string `protobuf:"bytes,2,opt,name=nickname" json:"nickname,omitempty"`
	Sex             int32  `protobuf:"varint,3,opt,name=sex" json:"sex,omitempty"`
	HeadImgUrl      string `protobuf:"bytes,4,opt,name=headImgUrl" json:"headImgUrl,omitempty"`
	HeadFrameImgUrl string `protobuf:"bytes,5,opt,name=headFrameImgUrl" json:"headFrameImgUrl,omitempty"`
	Birthday        string `protobuf:"bytes,6,opt,name=birthday" json:"birthday,omitempty"`
	RegisterTime    int64  `protobuf:"varint,7,opt,name=registerTime" json:"registerTime,omitempty"`
	ThirdAccountId  string `protobuf:"bytes,8,opt,name=thirdAccountId" json:"thirdAccountId,omitempty"`
}

func (m *AuthInfo) Reset()                    { *m = AuthInfo{} }
func (m *AuthInfo) String() string            { return proto.CompactTextString(m) }
func (*AuthInfo) ProtoMessage()               {}
func (*AuthInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *AuthInfo) GetUserId() uint64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *AuthInfo) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

func (m *AuthInfo) GetSex() int32 {
	if m != nil {
		return m.Sex
	}
	return 0
}

func (m *AuthInfo) GetHeadImgUrl() string {
	if m != nil {
		return m.HeadImgUrl
	}
	return ""
}

func (m *AuthInfo) GetHeadFrameImgUrl() string {
	if m != nil {
		return m.HeadFrameImgUrl
	}
	return ""
}

func (m *AuthInfo) GetBirthday() string {
	if m != nil {
		return m.Birthday
	}
	return ""
}

func (m *AuthInfo) GetRegisterTime() int64 {
	if m != nil {
		return m.RegisterTime
	}
	return 0
}

func (m *AuthInfo) GetThirdAccountId() string {
	if m != nil {
		return m.ThirdAccountId
	}
	return ""
}

// 简略信息
type UserBrief struct {
	UserID          uint64                   `protobuf:"varint,1,opt,name=userID" json:"userID,omitempty"`
	CreateTime      int64                    `protobuf:"varint,2,opt,name=createTime" json:"createTime,omitempty"`
	LoginIP         string                   `protobuf:"bytes,3,opt,name=loginIP" json:"loginIP,omitempty"`
	Nickname        string                   `protobuf:"bytes,4,opt,name=nickname" json:"nickname,omitempty"`
	Level           int32                    `protobuf:"varint,5,opt,name=level" json:"level,omitempty"`
	Account         string                   `protobuf:"bytes,6,opt,name=account" json:"account,omitempty"`
	ThirdAccountId  string                   `protobuf:"bytes,7,opt,name=thirdAccountId" json:"thirdAccountId,omitempty"`
	Icon            int32                    `protobuf:"varint,8,opt,name=icon" json:"icon,omitempty"`
	IconEdge        int32                    `protobuf:"varint,9,opt,name=iconEdge" json:"iconEdge,omitempty"`
	AccountType     gameconf.AccountLoginTyp `protobuf:"varint,10,opt,name=accountType,enum=gameconf.AccountLoginTyp" json:"accountType,omitempty"`
	Exp             int32                    `protobuf:"varint,12,opt,name=exp" json:"exp,omitempty"`
	Sex             int32                    `protobuf:"varint,20,opt,name=sex" json:"sex,omitempty"`
	HeadImgUrl      string                   `protobuf:"bytes,30,opt,name=headImgUrl" json:"headImgUrl,omitempty"`
	HeadFrameImgUrl string                   `protobuf:"bytes,31,opt,name=headFrameImgUrl" json:"headFrameImgUrl,omitempty"`
	WinCount        int32                    `protobuf:"varint,40,opt,name=winCount" json:"winCount,omitempty"`
	LoseCount       int32                    `protobuf:"varint,41,opt,name=loseCount" json:"loseCount,omitempty"`
}

func (m *UserBrief) Reset()                    { *m = UserBrief{} }
func (m *UserBrief) String() string            { return proto.CompactTextString(m) }
func (*UserBrief) ProtoMessage()               {}
func (*UserBrief) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *UserBrief) GetUserID() uint64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *UserBrief) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *UserBrief) GetLoginIP() string {
	if m != nil {
		return m.LoginIP
	}
	return ""
}

func (m *UserBrief) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

func (m *UserBrief) GetLevel() int32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *UserBrief) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *UserBrief) GetThirdAccountId() string {
	if m != nil {
		return m.ThirdAccountId
	}
	return ""
}

func (m *UserBrief) GetIcon() int32 {
	if m != nil {
		return m.Icon
	}
	return 0
}

func (m *UserBrief) GetIconEdge() int32 {
	if m != nil {
		return m.IconEdge
	}
	return 0
}

func (m *UserBrief) GetAccountType() gameconf.AccountLoginTyp {
	if m != nil {
		return m.AccountType
	}
	return gameconf.AccountLoginTyp_ALTInvalid
}

func (m *UserBrief) GetExp() int32 {
	if m != nil {
		return m.Exp
	}
	return 0
}

func (m *UserBrief) GetSex() int32 {
	if m != nil {
		return m.Sex
	}
	return 0
}

func (m *UserBrief) GetHeadImgUrl() string {
	if m != nil {
		return m.HeadImgUrl
	}
	return ""
}

func (m *UserBrief) GetHeadFrameImgUrl() string {
	if m != nil {
		return m.HeadFrameImgUrl
	}
	return ""
}

func (m *UserBrief) GetWinCount() int32 {
	if m != nil {
		return m.WinCount
	}
	return 0
}

func (m *UserBrief) GetLoseCount() int32 {
	if m != nil {
		return m.LoseCount
	}
	return 0
}

// 玩家展示信息，比UserBrief要丰富
type UserSummary struct {
	Version   UserSummary_Version `protobuf:"varint,1,opt,name=version,enum=gamedef.UserSummary_Version" json:"version,omitempty"`
	UserId    uint64              `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	UserBrief *UserBrief          `protobuf:"bytes,3,opt,name=userBrief" json:"userBrief,omitempty"`
}

func (m *UserSummary) Reset()                    { *m = UserSummary{} }
func (m *UserSummary) String() string            { return proto.CompactTextString(m) }
func (*UserSummary) ProtoMessage()               {}
func (*UserSummary) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *UserSummary) GetVersion() UserSummary_Version {
	if m != nil {
		return m.Version
	}
	return UserSummary_VerInit
}

func (m *UserSummary) GetUserId() uint64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *UserSummary) GetUserBrief() *UserBrief {
	if m != nil {
		return m.UserBrief
	}
	return nil
}

// 玩家登录时基础信息
type UserBase struct {
	UserID          uint64 `protobuf:"varint,1,opt,name=userID" json:"userID,omitempty"`
	CreateTime      int64  `protobuf:"varint,2,opt,name=createTime" json:"createTime,omitempty"`
	LoginIP         string `protobuf:"bytes,3,opt,name=loginIP" json:"loginIP,omitempty"`
	Nickname        string `protobuf:"bytes,4,opt,name=nickname" json:"nickname,omitempty"`
	Level           int32  `protobuf:"varint,5,opt,name=level" json:"level,omitempty"`
	Account         string `protobuf:"bytes,6,opt,name=account" json:"account,omitempty"`
	Icon            string `protobuf:"bytes,8,opt,name=icon" json:"icon,omitempty"`
	IconEdge        int32  `protobuf:"varint,9,opt,name=iconEdge" json:"iconEdge,omitempty"`
	Exp             int32  `protobuf:"varint,12,opt,name=exp" json:"exp,omitempty"`
	Sex             int32  `protobuf:"varint,20,opt,name=sex" json:"sex,omitempty"`
	IsAdult         bool   `protobuf:"varint,26,opt,name=isAdult" json:"isAdult,omitempty"`
	UserAge         int32  `protobuf:"varint,27,opt,name=userAge" json:"userAge,omitempty"`
	Showid          uint64 `protobuf:"varint,29,opt,name=showid" json:"showid,omitempty"`
	HeadImgUrl      string `protobuf:"bytes,30,opt,name=headImgUrl" json:"headImgUrl,omitempty"`
	HeadFrameImgUrl string `protobuf:"bytes,31,opt,name=headFrameImgUrl" json:"headFrameImgUrl,omitempty"`
}

func (m *UserBase) Reset()                    { *m = UserBase{} }
func (m *UserBase) String() string            { return proto.CompactTextString(m) }
func (*UserBase) ProtoMessage()               {}
func (*UserBase) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *UserBase) GetUserID() uint64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *UserBase) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *UserBase) GetLoginIP() string {
	if m != nil {
		return m.LoginIP
	}
	return ""
}

func (m *UserBase) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

func (m *UserBase) GetLevel() int32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *UserBase) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *UserBase) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

func (m *UserBase) GetIconEdge() int32 {
	if m != nil {
		return m.IconEdge
	}
	return 0
}

func (m *UserBase) GetExp() int32 {
	if m != nil {
		return m.Exp
	}
	return 0
}

func (m *UserBase) GetSex() int32 {
	if m != nil {
		return m.Sex
	}
	return 0
}

func (m *UserBase) GetIsAdult() bool {
	if m != nil {
		return m.IsAdult
	}
	return false
}

func (m *UserBase) GetUserAge() int32 {
	if m != nil {
		return m.UserAge
	}
	return 0
}

func (m *UserBase) GetShowid() uint64 {
	if m != nil {
		return m.Showid
	}
	return 0
}

func (m *UserBase) GetHeadImgUrl() string {
	if m != nil {
		return m.HeadImgUrl
	}
	return ""
}

func (m *UserBase) GetHeadFrameImgUrl() string {
	if m != nil {
		return m.HeadFrameImgUrl
	}
	return ""
}

// 头像信息
type HeadInfo struct {
	UserID     uint64 `protobuf:"varint,1,opt,name=userID" json:"userID,omitempty"`
	ShowID     uint64 `protobuf:"varint,2,opt,name=showID" json:"showID,omitempty"`
	Name       string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Level      int32  `protobuf:"varint,4,opt,name=level" json:"level,omitempty"`
	Icon       int32  `protobuf:"varint,5,opt,name=icon" json:"icon,omitempty"`
	IconEdge   int32  `protobuf:"varint,6,opt,name=iconEdge" json:"iconEdge,omitempty"`
	Star       int32  `protobuf:"varint,8,opt,name=star" json:"star,omitempty"`
	Sex        int32  `protobuf:"varint,12,opt,name=sex" json:"sex,omitempty"`
	HeadImgUrl string `protobuf:"bytes,13,opt,name=headImgUrl" json:"headImgUrl,omitempty"`
}

func (m *HeadInfo) Reset()                    { *m = HeadInfo{} }
func (m *HeadInfo) String() string            { return proto.CompactTextString(m) }
func (*HeadInfo) ProtoMessage()               {}
func (*HeadInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *HeadInfo) GetUserID() uint64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *HeadInfo) GetShowID() uint64 {
	if m != nil {
		return m.ShowID
	}
	return 0
}

func (m *HeadInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *HeadInfo) GetLevel() int32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *HeadInfo) GetIcon() int32 {
	if m != nil {
		return m.Icon
	}
	return 0
}

func (m *HeadInfo) GetIconEdge() int32 {
	if m != nil {
		return m.IconEdge
	}
	return 0
}

func (m *HeadInfo) GetStar() int32 {
	if m != nil {
		return m.Star
	}
	return 0
}

func (m *HeadInfo) GetSex() int32 {
	if m != nil {
		return m.Sex
	}
	return 0
}

func (m *HeadInfo) GetHeadImgUrl() string {
	if m != nil {
		return m.HeadImgUrl
	}
	return ""
}

type GameInfo struct {
	GameMode gameconf.GameModeTyp `protobuf:"varint,1,opt,name=gameMode,enum=gameconf.GameModeTyp" json:"gameMode,omitempty"`
	GameUUID string               `protobuf:"bytes,2,opt,name=gameUUID" json:"gameUUID,omitempty"`
}

func (m *GameInfo) Reset()                    { *m = GameInfo{} }
func (m *GameInfo) String() string            { return proto.CompactTextString(m) }
func (*GameInfo) ProtoMessage()               {}
func (*GameInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *GameInfo) GetGameMode() gameconf.GameModeTyp {
	if m != nil {
		return m.GameMode
	}
	return gameconf.GameModeTyp_MGTInvalid
}

func (m *GameInfo) GetGameUUID() string {
	if m != nil {
		return m.GameUUID
	}
	return ""
}

type LoginSource struct {
	SrcSceneId  int32  `protobuf:"varint,1,opt,name=srcSceneId" json:"srcSceneId,omitempty"`
	SrcShowId   uint64 `protobuf:"varint,2,opt,name=srcShowId" json:"srcShowId,omitempty"`
	SubType     string `protobuf:"bytes,3,opt,name=subType" json:"subType,omitempty"`
	Data        string `protobuf:"bytes,4,opt,name=data" json:"data,omitempty"`
	AdChannelId string `protobuf:"bytes,5,opt,name=adChannelId" json:"adChannelId,omitempty"`
}

func (m *LoginSource) Reset()                    { *m = LoginSource{} }
func (m *LoginSource) String() string            { return proto.CompactTextString(m) }
func (*LoginSource) ProtoMessage()               {}
func (*LoginSource) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *LoginSource) GetSrcSceneId() int32 {
	if m != nil {
		return m.SrcSceneId
	}
	return 0
}

func (m *LoginSource) GetSrcShowId() uint64 {
	if m != nil {
		return m.SrcShowId
	}
	return 0
}

func (m *LoginSource) GetSubType() string {
	if m != nil {
		return m.SubType
	}
	return ""
}

func (m *LoginSource) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func (m *LoginSource) GetAdChannelId() string {
	if m != nil {
		return m.AdChannelId
	}
	return ""
}

type Room struct {
	Setting     *RoomSetting `protobuf:"bytes,1,opt,name=setting" json:"setting,omitempty"`
	OwnerUserId uint64       `protobuf:"varint,2,opt,name=ownerUserId" json:"ownerUserId,omitempty"`
	RoomId      uint32       `protobuf:"varint,3,opt,name=roomId" json:"roomId,omitempty"`
	RoomNO      uint32       `protobuf:"varint,4,opt,name=roomNO" json:"roomNO,omitempty"`
	VoiceId     string       `protobuf:"bytes,5,opt,name=voiceId" json:"voiceId,omitempty"`
	Seats       []*Room_Seat `protobuf:"bytes,10,rep,name=seats" json:"seats,omitempty"`
	LookerCount int32        `protobuf:"varint,11,opt,name=lookerCount" json:"lookerCount,omitempty"`
}

func (m *Room) Reset()                    { *m = Room{} }
func (m *Room) String() string            { return proto.CompactTextString(m) }
func (*Room) ProtoMessage()               {}
func (*Room) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *Room) GetSetting() *RoomSetting {
	if m != nil {
		return m.Setting
	}
	return nil
}

func (m *Room) GetOwnerUserId() uint64 {
	if m != nil {
		return m.OwnerUserId
	}
	return 0
}

func (m *Room) GetRoomId() uint32 {
	if m != nil {
		return m.RoomId
	}
	return 0
}

func (m *Room) GetRoomNO() uint32 {
	if m != nil {
		return m.RoomNO
	}
	return 0
}

func (m *Room) GetVoiceId() string {
	if m != nil {
		return m.VoiceId
	}
	return ""
}

func (m *Room) GetSeats() []*Room_Seat {
	if m != nil {
		return m.Seats
	}
	return nil
}

func (m *Room) GetLookerCount() int32 {
	if m != nil {
		return m.LookerCount
	}
	return 0
}

type Room_Seat struct {
	SeatId    int32      `protobuf:"varint,1,opt,name=seatId" json:"seatId,omitempty"`
	UserBrief *UserBrief `protobuf:"bytes,2,opt,name=userBrief" json:"userBrief,omitempty"`
	Ready     bool       `protobuf:"varint,3,opt,name=ready" json:"ready,omitempty"`
}

func (m *Room_Seat) Reset()                    { *m = Room_Seat{} }
func (m *Room_Seat) String() string            { return proto.CompactTextString(m) }
func (*Room_Seat) ProtoMessage()               {}
func (*Room_Seat) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7, 0} }

func (m *Room_Seat) GetSeatId() int32 {
	if m != nil {
		return m.SeatId
	}
	return 0
}

func (m *Room_Seat) GetUserBrief() *UserBrief {
	if m != nil {
		return m.UserBrief
	}
	return nil
}

func (m *Room_Seat) GetReady() bool {
	if m != nil {
		return m.Ready
	}
	return false
}

type RoomSetting struct {
	GameMode   gameconf.GameModeTyp `protobuf:"varint,1,opt,name=gameMode,enum=gameconf.GameModeTyp" json:"gameMode,omitempty"`
	RoomName   string               `protobuf:"bytes,2,opt,name=roomName" json:"roomName,omitempty"`
	MaxPlayer  uint32               `protobuf:"varint,3,opt,name=maxPlayer" json:"maxPlayer,omitempty"`
	AllowEnter bool                 `protobuf:"varint,4,opt,name=allowEnter" json:"allowEnter,omitempty"`
}

func (m *RoomSetting) Reset()                    { *m = RoomSetting{} }
func (m *RoomSetting) String() string            { return proto.CompactTextString(m) }
func (*RoomSetting) ProtoMessage()               {}
func (*RoomSetting) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *RoomSetting) GetGameMode() gameconf.GameModeTyp {
	if m != nil {
		return m.GameMode
	}
	return gameconf.GameModeTyp_MGTInvalid
}

func (m *RoomSetting) GetRoomName() string {
	if m != nil {
		return m.RoomName
	}
	return ""
}

func (m *RoomSetting) GetMaxPlayer() uint32 {
	if m != nil {
		return m.MaxPlayer
	}
	return 0
}

func (m *RoomSetting) GetAllowEnter() bool {
	if m != nil {
		return m.AllowEnter
	}
	return false
}

type GameSeat struct {
	SeatId        int32            `protobuf:"varint,1,opt,name=seatId" json:"seatId,omitempty"`
	Dead          bool             `protobuf:"varint,3,opt,name=dead" json:"dead,omitempty"`
	RoleType      gameconf.RoleTyp `protobuf:"varint,4,opt,name=roleType,enum=gameconf.RoleTyp" json:"roleType,omitempty"`
	Hp            int32            `protobuf:"varint,5,opt,name=hp" json:"hp,omitempty"`
	Ap            int32            `protobuf:"varint,6,opt,name=ap" json:"ap,omitempty"`
	CardPoolCount int32            `protobuf:"varint,7,opt,name=cardPoolCount" json:"cardPoolCount,omitempty"`
}

func (m *GameSeat) Reset()                    { *m = GameSeat{} }
func (m *GameSeat) String() string            { return proto.CompactTextString(m) }
func (*GameSeat) ProtoMessage()               {}
func (*GameSeat) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *GameSeat) GetSeatId() int32 {
	if m != nil {
		return m.SeatId
	}
	return 0
}

func (m *GameSeat) GetDead() bool {
	if m != nil {
		return m.Dead
	}
	return false
}

func (m *GameSeat) GetRoleType() gameconf.RoleTyp {
	if m != nil {
		return m.RoleType
	}
	return gameconf.RoleTyp_RTInvalid
}

func (m *GameSeat) GetHp() int32 {
	if m != nil {
		return m.Hp
	}
	return 0
}

func (m *GameSeat) GetAp() int32 {
	if m != nil {
		return m.Ap
	}
	return 0
}

func (m *GameSeat) GetCardPoolCount() int32 {
	if m != nil {
		return m.CardPoolCount
	}
	return 0
}

// 房间配置
type ServerConfig struct {
	MinPlayerCount uint32 `protobuf:"varint,1,opt,name=minPlayerCount" json:"minPlayerCount,omitempty"`
	MaxPlayerCount uint32 `protobuf:"varint,2,opt,name=maxPlayerCount" json:"maxPlayerCount,omitempty"`
}

func (m *ServerConfig) Reset()                    { *m = ServerConfig{} }
func (m *ServerConfig) String() string            { return proto.CompactTextString(m) }
func (*ServerConfig) ProtoMessage()               {}
func (*ServerConfig) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *ServerConfig) GetMinPlayerCount() uint32 {
	if m != nil {
		return m.MinPlayerCount
	}
	return 0
}

func (m *ServerConfig) GetMaxPlayerCount() uint32 {
	if m != nil {
		return m.MaxPlayerCount
	}
	return 0
}

type Int32KV struct {
	Key int32 `protobuf:"varint,1,opt,name=key" json:"key,omitempty"`
	V   int32 `protobuf:"varint,2,opt,name=v" json:"v,omitempty"`
}

func (m *Int32KV) Reset()                    { *m = Int32KV{} }
func (m *Int32KV) String() string            { return proto.CompactTextString(m) }
func (*Int32KV) ProtoMessage()               {}
func (*Int32KV) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *Int32KV) GetKey() int32 {
	if m != nil {
		return m.Key
	}
	return 0
}

func (m *Int32KV) GetV() int32 {
	if m != nil {
		return m.V
	}
	return 0
}

// 位置
type Position struct {
	Row int32 `protobuf:"varint,1,opt,name=row" json:"row,omitempty"`
	Col int32 `protobuf:"varint,2,opt,name=col" json:"col,omitempty"`
}

func (m *Position) Reset()                    { *m = Position{} }
func (m *Position) String() string            { return proto.CompactTextString(m) }
func (*Position) ProtoMessage()               {}
func (*Position) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *Position) GetRow() int32 {
	if m != nil {
		return m.Row
	}
	return 0
}

func (m *Position) GetCol() int32 {
	if m != nil {
		return m.Col
	}
	return 0
}

// 棋盘
type GameBoard struct {
	Cells []*Cell `protobuf:"bytes,1,rep,name=cells" json:"cells,omitempty"`
}

func (m *GameBoard) Reset()                    { *m = GameBoard{} }
func (m *GameBoard) String() string            { return proto.CompactTextString(m) }
func (*GameBoard) ProtoMessage()               {}
func (*GameBoard) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *GameBoard) GetCells() []*Cell {
	if m != nil {
		return m.Cells
	}
	return nil
}

type Cell struct {
	Pos  *Position `protobuf:"bytes,1,opt,name=pos" json:"pos,omitempty"`
	Card *Card     `protobuf:"bytes,2,opt,name=card" json:"card,omitempty"`
}

func (m *Cell) Reset()                    { *m = Cell{} }
func (m *Cell) String() string            { return proto.CompactTextString(m) }
func (*Cell) ProtoMessage()               {}
func (*Cell) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *Cell) GetPos() *Position {
	if m != nil {
		return m.Pos
	}
	return nil
}

func (m *Cell) GetCard() *Card {
	if m != nil {
		return m.Card
	}
	return nil
}

type Card struct {
	IsBack         bool      `protobuf:"varint,1,opt,name=isBack" json:"isBack,omitempty"`
	BuffHp         int32     `protobuf:"varint,2,opt,name=buffHp" json:"buffHp,omitempty"`
	BuffAttack     int32     `protobuf:"varint,3,opt,name=buffAttack" json:"buffAttack,omitempty"`
	HeroId         int32     `protobuf:"varint,4,opt,name=heroId" json:"heroId,omitempty"`
	Hp             int32     `protobuf:"varint,5,opt,name=hp" json:"hp,omitempty"`
	Attack         int32     `protobuf:"varint,6,opt,name=attack" json:"attack,omitempty"`
	Buffs          []*Buff   `protobuf:"bytes,7,rep,name=buffs" json:"buffs,omitempty"`
	Position       *Position `protobuf:"bytes,8,opt,name=position" json:"position,omitempty"`
	SkillId        int32     `protobuf:"varint,9,opt,name=skillId" json:"skillId,omitempty"`
	HpMax          int32     `protobuf:"varint,10,opt,name=hpMax" json:"hpMax,omitempty"`
	CanTurnUp      bool      `protobuf:"varint,11,opt,name=canTurnUp" json:"canTurnUp,omitempty"`
	AttackDistance int32     `protobuf:"varint,12,opt,name=attackDistance" json:"attackDistance,omitempty"`
	LeftAttackCnt  int32     `protobuf:"varint,13,opt,name=leftAttackCnt" json:"leftAttackCnt,omitempty"`
	Id             int32     `protobuf:"varint,14,opt,name=id" json:"id,omitempty"`
}

func (m *Card) Reset()                    { *m = Card{} }
func (m *Card) String() string            { return proto.CompactTextString(m) }
func (*Card) ProtoMessage()               {}
func (*Card) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *Card) GetIsBack() bool {
	if m != nil {
		return m.IsBack
	}
	return false
}

func (m *Card) GetBuffHp() int32 {
	if m != nil {
		return m.BuffHp
	}
	return 0
}

func (m *Card) GetBuffAttack() int32 {
	if m != nil {
		return m.BuffAttack
	}
	return 0
}

func (m *Card) GetHeroId() int32 {
	if m != nil {
		return m.HeroId
	}
	return 0
}

func (m *Card) GetHp() int32 {
	if m != nil {
		return m.Hp
	}
	return 0
}

func (m *Card) GetAttack() int32 {
	if m != nil {
		return m.Attack
	}
	return 0
}

func (m *Card) GetBuffs() []*Buff {
	if m != nil {
		return m.Buffs
	}
	return nil
}

func (m *Card) GetPosition() *Position {
	if m != nil {
		return m.Position
	}
	return nil
}

func (m *Card) GetSkillId() int32 {
	if m != nil {
		return m.SkillId
	}
	return 0
}

func (m *Card) GetHpMax() int32 {
	if m != nil {
		return m.HpMax
	}
	return 0
}

func (m *Card) GetCanTurnUp() bool {
	if m != nil {
		return m.CanTurnUp
	}
	return false
}

func (m *Card) GetAttackDistance() int32 {
	if m != nil {
		return m.AttackDistance
	}
	return 0
}

func (m *Card) GetLeftAttackCnt() int32 {
	if m != nil {
		return m.LeftAttackCnt
	}
	return 0
}

func (m *Card) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type Buff struct {
	BuffId      int32              `protobuf:"varint,1,opt,name=buffId" json:"buffId,omitempty"`
	ExpireType  gameconf.ExpireTyp `protobuf:"varint,2,opt,name=expireType,enum=gameconf.ExpireTyp" json:"expireType,omitempty"`
	ExpireV     int32              `protobuf:"varint,3,opt,name=expireV" json:"expireV,omitempty"`
	CreateRound int32              `protobuf:"varint,4,opt,name=createRound" json:"createRound,omitempty"`
	UseCount    int32              `protobuf:"varint,5,opt,name=useCount" json:"useCount,omitempty"`
	IsOverlap   bool               `protobuf:"varint,6,opt,name=isOverlap" json:"isOverlap,omitempty"`
	BuffCount   int32              `protobuf:"varint,7,opt,name=buffCount" json:"buffCount,omitempty"`
}

func (m *Buff) Reset()                    { *m = Buff{} }
func (m *Buff) String() string            { return proto.CompactTextString(m) }
func (*Buff) ProtoMessage()               {}
func (*Buff) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *Buff) GetBuffId() int32 {
	if m != nil {
		return m.BuffId
	}
	return 0
}

func (m *Buff) GetExpireType() gameconf.ExpireTyp {
	if m != nil {
		return m.ExpireType
	}
	return gameconf.ExpireTyp_ETInvalid
}

func (m *Buff) GetExpireV() int32 {
	if m != nil {
		return m.ExpireV
	}
	return 0
}

func (m *Buff) GetCreateRound() int32 {
	if m != nil {
		return m.CreateRound
	}
	return 0
}

func (m *Buff) GetUseCount() int32 {
	if m != nil {
		return m.UseCount
	}
	return 0
}

func (m *Buff) GetIsOverlap() bool {
	if m != nil {
		return m.IsOverlap
	}
	return false
}

func (m *Buff) GetBuffCount() int32 {
	if m != nil {
		return m.BuffCount
	}
	return 0
}

type Change struct {
	Old    int32 `protobuf:"varint,1,opt,name=old" json:"old,omitempty"`
	New    int32 `protobuf:"varint,2,opt,name=new" json:"new,omitempty"`
	Change int32 `protobuf:"varint,3,opt,name=change" json:"change,omitempty"`
}

func (m *Change) Reset()                    { *m = Change{} }
func (m *Change) String() string            { return proto.CompactTextString(m) }
func (*Change) ProtoMessage()               {}
func (*Change) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *Change) GetOld() int32 {
	if m != nil {
		return m.Old
	}
	return 0
}

func (m *Change) GetNew() int32 {
	if m != nil {
		return m.New
	}
	return 0
}

func (m *Change) GetChange() int32 {
	if m != nil {
		return m.Change
	}
	return 0
}

type PosChange struct {
	Old *Position `protobuf:"bytes,1,opt,name=old" json:"old,omitempty"`
	New *Position `protobuf:"bytes,2,opt,name=new" json:"new,omitempty"`
}

func (m *PosChange) Reset()                    { *m = PosChange{} }
func (m *PosChange) String() string            { return proto.CompactTextString(m) }
func (*PosChange) ProtoMessage()               {}
func (*PosChange) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *PosChange) GetOld() *Position {
	if m != nil {
		return m.Old
	}
	return nil
}

func (m *PosChange) GetNew() *Position {
	if m != nil {
		return m.New
	}
	return nil
}

type BuffChange struct {
	OldBuffIds []int32 `protobuf:"varint,1,rep,name=oldBuffIds" json:"oldBuffIds,omitempty"`
	NewBuffIds []int32 `protobuf:"varint,2,rep,name=newBuffIds" json:"newBuffIds,omitempty"`
	AddBuffId  int32   `protobuf:"varint,3,opt,name=addBuffId" json:"addBuffId,omitempty"`
	DelBuffId  int32   `protobuf:"varint,4,opt,name=delBuffId" json:"delBuffId,omitempty"`
}

func (m *BuffChange) Reset()                    { *m = BuffChange{} }
func (m *BuffChange) String() string            { return proto.CompactTextString(m) }
func (*BuffChange) ProtoMessage()               {}
func (*BuffChange) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *BuffChange) GetOldBuffIds() []int32 {
	if m != nil {
		return m.OldBuffIds
	}
	return nil
}

func (m *BuffChange) GetNewBuffIds() []int32 {
	if m != nil {
		return m.NewBuffIds
	}
	return nil
}

func (m *BuffChange) GetAddBuffId() int32 {
	if m != nil {
		return m.AddBuffId
	}
	return 0
}

func (m *BuffChange) GetDelBuffId() int32 {
	if m != nil {
		return m.DelBuffId
	}
	return 0
}

type ActSelectParam struct {
	Positions []*Position `protobuf:"bytes,1,rep,name=positions" json:"positions,omitempty"`
	Seat      int32       `protobuf:"varint,2,opt,name=seat" json:"seat,omitempty"`
}

func (m *ActSelectParam) Reset()                    { *m = ActSelectParam{} }
func (m *ActSelectParam) String() string            { return proto.CompactTextString(m) }
func (*ActSelectParam) ProtoMessage()               {}
func (*ActSelectParam) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *ActSelectParam) GetPositions() []*Position {
	if m != nil {
		return m.Positions
	}
	return nil
}

func (m *ActSelectParam) GetSeat() int32 {
	if m != nil {
		return m.Seat
	}
	return 0
}

type CardGroup struct {
	GroupId int32   `protobuf:"varint,1,opt,name=groupId" json:"groupId,omitempty"`
	Name    string  `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	HeroIds []int32 `protobuf:"varint,3,rep,name=heroIds" json:"heroIds,omitempty"`
}

func (m *CardGroup) Reset()                    { *m = CardGroup{} }
func (m *CardGroup) String() string            { return proto.CompactTextString(m) }
func (*CardGroup) ProtoMessage()               {}
func (*CardGroup) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *CardGroup) GetGroupId() int32 {
	if m != nil {
		return m.GroupId
	}
	return 0
}

func (m *CardGroup) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CardGroup) GetHeroIds() []int32 {
	if m != nil {
		return m.HeroIds
	}
	return nil
}

type PoolCard struct {
	CardId int32 `protobuf:"varint,1,opt,name=cardId" json:"cardId,omitempty"`
	HeroId int32 `protobuf:"varint,2,opt,name=heroId" json:"heroId,omitempty"`
}

func (m *PoolCard) Reset()                    { *m = PoolCard{} }
func (m *PoolCard) String() string            { return proto.CompactTextString(m) }
func (*PoolCard) ProtoMessage()               {}
func (*PoolCard) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *PoolCard) GetCardId() int32 {
	if m != nil {
		return m.CardId
	}
	return 0
}

func (m *PoolCard) GetHeroId() int32 {
	if m != nil {
		return m.HeroId
	}
	return 0
}

func init() {
	proto.RegisterType((*AuthInfo)(nil), "gamedef.AuthInfo")
	proto.RegisterType((*UserBrief)(nil), "gamedef.UserBrief")
	proto.RegisterType((*UserSummary)(nil), "gamedef.UserSummary")
	proto.RegisterType((*UserBase)(nil), "gamedef.UserBase")
	proto.RegisterType((*HeadInfo)(nil), "gamedef.HeadInfo")
	proto.RegisterType((*GameInfo)(nil), "gamedef.GameInfo")
	proto.RegisterType((*LoginSource)(nil), "gamedef.LoginSource")
	proto.RegisterType((*Room)(nil), "gamedef.Room")
	proto.RegisterType((*Room_Seat)(nil), "gamedef.Room.Seat")
	proto.RegisterType((*RoomSetting)(nil), "gamedef.RoomSetting")
	proto.RegisterType((*GameSeat)(nil), "gamedef.GameSeat")
	proto.RegisterType((*ServerConfig)(nil), "gamedef.ServerConfig")
	proto.RegisterType((*Int32KV)(nil), "gamedef.Int32KV")
	proto.RegisterType((*Position)(nil), "gamedef.Position")
	proto.RegisterType((*GameBoard)(nil), "gamedef.GameBoard")
	proto.RegisterType((*Cell)(nil), "gamedef.Cell")
	proto.RegisterType((*Card)(nil), "gamedef.Card")
	proto.RegisterType((*Buff)(nil), "gamedef.Buff")
	proto.RegisterType((*Change)(nil), "gamedef.Change")
	proto.RegisterType((*PosChange)(nil), "gamedef.PosChange")
	proto.RegisterType((*BuffChange)(nil), "gamedef.BuffChange")
	proto.RegisterType((*ActSelectParam)(nil), "gamedef.ActSelectParam")
	proto.RegisterType((*CardGroup)(nil), "gamedef.CardGroup")
	proto.RegisterType((*PoolCard)(nil), "gamedef.PoolCard")
	proto.RegisterEnum("gamedef.GamePhase", GamePhase_name, GamePhase_value)
	proto.RegisterEnum("gamedef.ActType", ActType_name, ActType_value)
	proto.RegisterEnum("gamedef.SelectCardType", SelectCardType_name, SelectCardType_value)
	proto.RegisterEnum("gamedef.UserSummary_Version", UserSummary_Version_name, UserSummary_Version_value)
}

func init() { proto.RegisterFile("def/def.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1820 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x58, 0x4f, 0x73, 0xe3, 0x48,
	0x15, 0x1f, 0xc9, 0x72, 0x2c, 0x3f, 0x27, 0x5e, 0x6d, 0x33, 0x4c, 0x89, 0x61, 0x58, 0x82, 0x86,
	0xa2, 0xb2, 0x53, 0x85, 0xb3, 0x64, 0xaa, 0xf6, 0x00, 0xa7, 0x64, 0x92, 0x9d, 0x71, 0x41, 0xfe,
	0x94, 0x32, 0x1e, 0x8a, 0x0b, 0x4b, 0x8f, 0xd4, 0xb6, 0x55, 0x91, 0xbb, 0x55, 0x2d, 0xd9, 0x8e,
	0x8f, 0x70, 0xe4, 0x44, 0x71, 0xe0, 0x00, 0x1f, 0x80, 0x03, 0xdf, 0x87, 0x03, 0x1f, 0x00, 0xbe,
	0x06, 0xf5, 0xfa, 0x8f, 0x24, 0x9b, 0x0c, 0x35, 0x45, 0x71, 0xd8, 0x53, 0xfa, 0xf7, 0xfa, 0x75,
	0xf7, 0x7b, 0xbf, 0xfe, 0xbd, 0xa7, 0x76, 0xe0, 0x20, 0x65, 0xd3, 0xe3, 0x94, 0x4d, 0x47, 0x85,
	0x14, 0x95, 0x20, 0xbd, 0x19, 0x5d, 0xb0, 0x94, 0x4d, 0x9f, 0x7e, 0x59, 0x52, 0x3e, 0x5b, 0x8a,
	0x72, 0x4e, 0x47, 0x89, 0x58, 0x1c, 0x97, 0xb3, 0xf2, 0xeb, 0x39, 0x93, 0xe2, 0xfe, 0x58, 0xf9,
	0x1d, 0xa3, 0x5b, 0x22, 0xf8, 0x54, 0x0d, 0xbe, 0xae, 0x36, 0x05, 0xd3, 0x1b, 0x44, 0xbf, 0x73,
	0xc1, 0x3f, 0x5d, 0x56, 0xf3, 0x31, 0x9f, 0x0a, 0xf2, 0x04, 0xf6, 0x96, 0x25, 0x93, 0xe3, 0x34,
	0x74, 0x0e, 0x9d, 0x23, 0x2f, 0x36, 0x88, 0x3c, 0x05, 0x9f, 0x67, 0xc9, 0x1d, 0xa7, 0x0b, 0x16,
	0xba, 0x87, 0xce, 0x51, 0x3f, 0xae, 0x31, 0x09, 0xa0, 0x53, 0xb2, 0xfb, 0xb0, 0x73, 0xe8, 0x1c,
	0x75, 0x63, 0x1c, 0x92, 0xcf, 0x00, 0xe6, 0x8c, 0xa6, 0xe3, 0xc5, 0x6c, 0x22, 0xf3, 0xd0, 0x53,
	0xfe, 0x2d, 0x0b, 0x39, 0x82, 0x4f, 0x10, 0x7d, 0x25, 0xe9, 0x82, 0x19, 0xa7, 0xae, 0x72, 0xda,
	0x35, 0xe3, 0xb9, 0xef, 0x33, 0x59, 0xcd, 0x53, 0xba, 0x09, 0xf7, 0xf4, 0xb9, 0x16, 0x93, 0x08,
	0xf6, 0x25, 0x9b, 0x65, 0x65, 0xc5, 0xe4, 0xdb, 0x6c, 0xc1, 0xc2, 0xde, 0xa1, 0x73, 0xd4, 0x89,
	0xb7, 0x6c, 0xe4, 0x47, 0x30, 0xac, 0xe6, 0x99, 0x4c, 0x4f, 0x93, 0x44, 0x2c, 0x79, 0x35, 0x4e,
	0x43, 0x5f, 0xed, 0xb2, 0x63, 0x8d, 0xfe, 0xd9, 0x81, 0xfe, 0xa4, 0x64, 0xf2, 0x4c, 0x66, 0x6c,
	0x5a, 0xb3, 0x70, 0xbe, 0xc5, 0xc2, 0x39, 0xe6, 0x95, 0x48, 0x46, 0x2b, 0xa6, 0xce, 0x73, 0xd5,
	0x79, 0x2d, 0x0b, 0x09, 0xa1, 0x97, 0x8b, 0x59, 0xc6, 0xc7, 0x37, 0x8a, 0x8d, 0x7e, 0x6c, 0xe1,
	0x16, 0x7f, 0xde, 0x0e, 0x7f, 0x8f, 0xa1, 0x9b, 0xb3, 0x15, 0xd3, 0x1c, 0x74, 0x63, 0x0d, 0x70,
	0x2f, 0xaa, 0xc3, 0x33, 0x89, 0x5b, 0xf8, 0x40, 0x4e, 0xbd, 0x87, 0x72, 0x22, 0x04, 0xbc, 0x2c,
	0x11, 0x5c, 0x65, 0xdc, 0x8d, 0xd5, 0x18, 0xe3, 0xc0, 0xbf, 0x17, 0xe9, 0x8c, 0x85, 0x7d, 0x65,
	0xaf, 0x31, 0xf9, 0x19, 0x0c, 0xcc, 0x11, 0x6f, 0x37, 0x05, 0x0b, 0xe1, 0xd0, 0x39, 0x1a, 0x9e,
	0x7c, 0x67, 0x64, 0x85, 0x33, 0x32, 0x3b, 0xff, 0x02, 0x53, 0x7a, 0xbb, 0x29, 0xe2, 0xb6, 0x37,
	0x8a, 0x80, 0xdd, 0x17, 0xe1, 0xbe, 0x16, 0x01, 0xbb, 0x2f, 0xac, 0x2c, 0x1e, 0x7f, 0x48, 0x16,
	0x9f, 0x7d, 0x8c, 0x2c, 0xbe, 0xff, 0x41, 0x59, 0xac, 0x33, 0xfe, 0x4a, 0xb1, 0x73, 0xa4, 0xd3,
	0xb0, 0x98, 0x3c, 0x83, 0x7e, 0x2e, 0x4a, 0xa6, 0x27, 0x3f, 0x57, 0x93, 0x8d, 0x21, 0xfa, 0xab,
	0x03, 0x03, 0xbc, 0xe8, 0xdb, 0xe5, 0x62, 0x41, 0xe5, 0x86, 0x7c, 0x09, 0xbd, 0x15, 0x93, 0x65,
	0x26, 0xb8, 0xba, 0xeb, 0xe1, 0xc9, 0xb3, 0x91, 0x29, 0xa8, 0x51, 0xcb, 0x6d, 0xf4, 0x4e, 0xfb,
	0xc4, 0xd6, 0xb9, 0x55, 0x28, 0xee, 0x56, 0xa1, 0x7c, 0x01, 0xfd, 0xa5, 0xd5, 0x91, 0x12, 0xc1,
	0xe0, 0x84, 0x6c, 0xed, 0xa8, 0x66, 0xe2, 0xc6, 0x29, 0x7a, 0x02, 0x3d, 0xb3, 0x3b, 0x19, 0xa8,
	0xe1, 0x98, 0x67, 0x55, 0xf0, 0x28, 0xfa, 0x63, 0x07, 0x7c, 0xb5, 0x80, 0x96, 0xec, 0x1b, 0xae,
	0xc8, 0xb6, 0xd2, 0xfa, 0x1f, 0xa1, 0xb4, 0x8f, 0x11, 0x4b, 0x08, 0xbd, 0xac, 0x3c, 0x4d, 0x97,
	0x79, 0x15, 0x3e, 0x3d, 0x74, 0x8e, 0xfc, 0xd8, 0x42, 0x9c, 0xc1, 0xec, 0x4f, 0x67, 0x2c, 0xfc,
	0xae, 0xf2, 0xb7, 0x10, 0x59, 0x2a, 0xe7, 0x62, 0x9d, 0xa5, 0xe1, 0xf7, 0x34, 0x4b, 0x1a, 0xfd,
	0xff, 0x84, 0x17, 0xfd, 0xc3, 0x01, 0xff, 0x0d, 0x2e, 0x6c, 0x37, 0xcb, 0xdd, 0x4b, 0x31, 0x61,
	0x8c, 0xcf, 0xad, 0x36, 0x34, 0x42, 0x9a, 0x14, 0xdd, 0xfa, 0x26, 0xbc, 0x6d, 0xaa, 0xbd, 0x36,
	0xd5, 0x96, 0xd0, 0xee, 0x07, 0x4a, 0x77, 0x6f, 0x87, 0x50, 0x02, 0x5e, 0x59, 0x51, 0x69, 0x4b,
	0x1d, 0xc7, 0x96, 0xd2, 0xfd, 0x0f, 0xd5, 0xdf, 0xc1, 0x2e, 0x0d, 0xd1, 0xaf, 0xc0, 0x7f, 0x8d,
	0xa9, 0x62, 0x6e, 0x3f, 0x01, 0x1f, 0x55, 0x7b, 0x29, 0x52, 0x66, 0x0a, 0xe3, 0xdb, 0x4d, 0x27,
	0x78, 0x6d, 0x66, 0xb0, 0x0b, 0xd4, 0x6e, 0x18, 0x20, 0x8e, 0x27, 0x13, 0x93, 0x78, 0x3f, 0xae,
	0x71, 0xf4, 0x17, 0x07, 0x06, 0xaa, 0x71, 0xdc, 0x8a, 0xa5, 0x4c, 0x18, 0x86, 0x52, 0xca, 0xe4,
	0x36, 0x61, 0x9c, 0x99, 0x6f, 0x4d, 0x37, 0x6e, 0x59, 0xb0, 0x88, 0x11, 0x21, 0x6f, 0xb6, 0xc2,
	0x1a, 0x03, 0x2a, 0xa0, 0x5c, 0xbe, 0x57, 0x5d, 0xca, 0xa8, 0xda, 0x40, 0x24, 0x22, 0xa5, 0x15,
	0x35, 0x8a, 0x56, 0x63, 0x72, 0x08, 0x03, 0x9a, 0xbe, 0x9a, 0x53, 0xce, 0x59, 0x3e, 0x4e, 0xcd,
	0x97, 0xa6, 0x6d, 0x8a, 0xfe, 0xee, 0x82, 0x17, 0x0b, 0xb1, 0x20, 0x23, 0xe8, 0x95, 0xac, 0xaa,
	0x32, 0x3e, 0x53, 0x31, 0x0d, 0x4e, 0x1e, 0xd7, 0xb5, 0x8b, 0xf3, 0xb7, 0x7a, 0x2e, 0xb6, 0x4e,
	0xb8, 0xb5, 0x58, 0x73, 0x26, 0x27, 0xed, 0x56, 0xd0, 0x36, 0xa1, 0x16, 0xa4, 0x10, 0x8b, 0x71,
	0xaa, 0x22, 0x3d, 0x88, 0x0d, 0xb2, 0xf6, 0xab, 0x6b, 0x15, 0xaa, 0xb1, 0x5f, 0x5d, 0x63, 0x6a,
	0x2b, 0x91, 0x25, 0xac, 0x0e, 0xd4, 0x42, 0x72, 0x04, 0xdd, 0x92, 0xd1, 0xaa, 0x0c, 0xe1, 0xb0,
	0xb3, 0xd5, 0x55, 0x30, 0xb2, 0xd1, 0x2d, 0xa3, 0x55, 0xac, 0x1d, 0x30, 0xaa, 0x5c, 0x88, 0x3b,
	0x26, 0x75, 0x0f, 0x1c, 0x28, 0x76, 0xdb, 0xa6, 0xa7, 0x53, 0xf0, 0x70, 0x81, 0x52, 0x2a, 0xa3,
	0x55, 0x7d, 0x05, 0x06, 0x6d, 0x77, 0x31, 0xf7, 0x23, 0xba, 0x18, 0xea, 0x58, 0x32, 0x9a, 0x6e,
	0x54, 0x9a, 0x7e, 0xac, 0x41, 0xf4, 0x67, 0x07, 0x06, 0x2d, 0xe2, 0xfe, 0x47, 0x55, 0x29, 0x6a,
	0x5a, 0x2f, 0x0f, 0x8b, 0x51, 0x25, 0x0b, 0x7a, 0x7f, 0x93, 0xd3, 0x0d, 0x93, 0x86, 0xdf, 0xc6,
	0x80, 0x1a, 0xa3, 0x79, 0x2e, 0xd6, 0x17, 0xbc, 0x62, 0x52, 0xd1, 0xec, 0xc7, 0x2d, 0x4b, 0xf4,
	0x37, 0x47, 0xeb, 0xfd, 0xbf, 0x32, 0x81, 0x82, 0x62, 0x34, 0x35, 0x69, 0xa9, 0x31, 0xf9, 0x31,
	0x86, 0x94, 0x33, 0xa5, 0x3f, 0x4f, 0x65, 0xf1, 0x69, 0x93, 0x45, 0xac, 0x67, 0xe2, 0xda, 0x85,
	0x0c, 0xc1, 0x9d, 0x17, 0xa6, 0x94, 0xdd, 0x79, 0x81, 0x98, 0x16, 0xa6, 0x84, 0x5d, 0x5a, 0x90,
	0x1f, 0xc2, 0x41, 0x42, 0x65, 0x7a, 0x23, 0x44, 0xae, 0x2f, 0xac, 0xa7, 0xa6, 0xb6, 0x8d, 0xd1,
	0xaf, 0x61, 0xff, 0x96, 0xc9, 0x15, 0xde, 0x20, 0x9f, 0x66, 0x33, 0x7c, 0x05, 0x2c, 0x32, 0xae,
	0x53, 0xd5, 0xcb, 0x1c, 0x45, 0xc0, 0x8e, 0x55, 0xf9, 0x59, 0x4a, 0xb4, 0x9f, 0x6b, 0xfc, 0xb6,
	0xac, 0xd1, 0xe7, 0xd0, 0x1b, 0xf3, 0xea, 0xe5, 0xc9, 0xcf, 0xdf, 0x61, 0xe7, 0xb8, 0x63, 0x1b,
	0x43, 0x04, 0x0e, 0xc9, 0x3e, 0x38, 0x2b, 0xb5, 0xae, 0x1b, 0x3b, 0xab, 0x68, 0x04, 0xfe, 0x8d,
	0x28, 0xb3, 0x0a, 0x3f, 0x59, 0x01, 0x74, 0xa4, 0x58, 0x5b, 0x5f, 0x29, 0xd6, 0x68, 0x49, 0x44,
	0x6e, 0xbc, 0x71, 0x18, 0x7d, 0x01, 0x7d, 0xe4, 0xf9, 0x4c, 0x50, 0x99, 0x92, 0xe7, 0xd0, 0x4d,
	0x58, 0x9e, 0x97, 0xa1, 0xa3, 0x64, 0x7c, 0x50, 0xcb, 0xea, 0x15, 0xcb, 0xf3, 0x58, 0xcf, 0x45,
	0x57, 0xe0, 0x21, 0x24, 0xcf, 0xa1, 0x53, 0x88, 0xd2, 0xd4, 0xe2, 0xa7, 0xb5, 0xab, 0x3d, 0x3d,
	0xc6, 0x59, 0xf2, 0x03, 0xf0, 0x90, 0x2a, 0xa3, 0xd3, 0xd6, 0x86, 0x54, 0xa6, 0xb1, 0x9a, 0x8a,
	0xfe, 0xd4, 0x01, 0x0f, 0x21, 0x5e, 0x73, 0x56, 0x9e, 0xd1, 0xe4, 0x4e, 0xed, 0xe9, 0xc7, 0x06,
	0xa1, 0xfd, 0xfd, 0x72, 0x3a, 0x7d, 0x53, 0x98, 0xb8, 0x0d, 0x42, 0x0d, 0xe1, 0xe8, 0xb4, 0xaa,
	0x70, 0x8d, 0x7e, 0xe2, 0xb6, 0x2c, 0xb8, 0x0e, 0x1f, 0xd9, 0xe3, 0xd4, 0xf4, 0x6f, 0x83, 0xfe,
	0xe3, 0xce, 0x9f, 0xc0, 0x1e, 0xd5, 0x7b, 0xe8, 0x7b, 0x37, 0x08, 0xd9, 0xc0, 0xdd, 0xca, 0xb0,
	0xb7, 0xc3, 0xc6, 0xd9, 0x72, 0x3a, 0x8d, 0xf5, 0x1c, 0xea, 0xad, 0x30, 0x19, 0xab, 0x0e, 0xff,
	0x20, 0x15, 0xb5, 0x8b, 0xea, 0x8e, 0x77, 0x59, 0x8e, 0xbd, 0x4e, 0x7f, 0x78, 0x2d, 0xc4, 0x22,
	0x9d, 0x17, 0x97, 0xf4, 0x5e, 0xbd, 0xed, 0xba, 0xb1, 0x06, 0x58, 0x45, 0x09, 0xe5, 0x6f, 0x97,
	0x92, 0x4f, 0x0a, 0xd5, 0x2c, 0xfc, 0xb8, 0x31, 0xa0, 0x7e, 0x74, 0xac, 0xe7, 0x59, 0x59, 0x51,
	0x9e, 0x30, 0xf3, 0x45, 0xd9, 0xb1, 0xa2, 0x8a, 0x73, 0x36, 0xad, 0x34, 0x2f, 0xaf, 0x78, 0xa5,
	0xbe, 0x2f, 0xdd, 0x78, 0xdb, 0x88, 0xbc, 0x64, 0x69, 0x38, 0xd4, 0xbc, 0x64, 0x69, 0xf4, 0x2f,
	0x07, 0x3c, 0x4c, 0xd5, 0x5e, 0x40, 0x53, 0x7f, 0x1a, 0x91, 0x97, 0x00, 0xec, 0xbe, 0xc8, 0xa4,
	0xae, 0x36, 0x57, 0x55, 0xdb, 0xb7, 0x9a, 0x6a, 0xbb, 0xb0, 0x73, 0x71, 0xcb, 0x0d, 0x19, 0xd0,
	0xe8, 0x9d, 0xb9, 0x32, 0x0b, 0xb1, 0x35, 0xea, 0xd7, 0x51, 0x2c, 0x96, 0xdc, 0x5e, 0x5a, 0xdb,
	0x84, 0xfd, 0x66, 0x69, 0x5f, 0x8f, 0xfa, 0xfe, 0x6a, 0x8c, 0x4c, 0x65, 0xe5, 0xf5, 0x8a, 0xc9,
	0xdc, 0x14, 0xb0, 0x1f, 0x37, 0x06, 0x9c, 0xc5, 0xa0, 0xdb, 0x35, 0xdc, 0x18, 0xa2, 0x73, 0xd8,
	0xc3, 0x0f, 0x8e, 0x7e, 0xfd, 0x88, 0xdc, 0xe6, 0x89, 0x43, 0xb4, 0x70, 0xb6, 0xb6, 0x25, 0xc3,
	0xd9, 0x1a, 0xe9, 0x48, 0x94, 0xb7, 0x49, 0xc0, 0xa0, 0x68, 0x02, 0xfd, 0x1b, 0x51, 0x9a, 0x8d,
	0x9e, 0x37, 0x1b, 0x3d, 0x5c, 0x1d, 0xb8, 0xf7, 0xf3, 0x66, 0xef, 0x87, 0x9d, 0x38, 0x5b, 0x47,
	0x7f, 0x70, 0x00, 0xf0, 0x1a, 0xcc, 0xc6, 0x11, 0x80, 0xc8, 0xd3, 0x33, 0x75, 0x03, 0xba, 0x50,
	0xbb, 0x67, 0x6e, 0xf0, 0x28, 0x6e, 0x59, 0xd1, 0x87, 0xb3, 0xb5, 0xf5, 0x71, 0x1b, 0x9f, 0xc6,
	0x8a, 0x8c, 0xd0, 0xd4, 0xac, 0x30, 0x89, 0x34, 0x06, 0x9c, 0x4d, 0x59, 0x6e, 0x66, 0xf5, 0x4d,
	0x34, 0x86, 0x68, 0x02, 0xc3, 0xd3, 0xa4, 0xba, 0x65, 0x39, 0x4b, 0xaa, 0x1b, 0x2a, 0xe9, 0x82,
	0x1c, 0x43, 0xdf, 0x6a, 0xdc, 0x76, 0x8f, 0x07, 0xf2, 0x69, 0x7c, 0xd4, 0xab, 0x88, 0xd1, 0xca,
	0xf0, 0xaa, 0xc6, 0xd1, 0x2f, 0xa1, 0x8f, 0x8d, 0xe0, 0xb5, 0x14, 0xcb, 0x02, 0x75, 0x32, 0xc3,
	0x41, 0xad, 0x3a, 0x0b, 0xeb, 0xa7, 0x9a, 0xdb, 0x7a, 0xaa, 0x3d, 0x83, 0x9e, 0xae, 0xee, 0x32,
	0xec, 0xd4, 0xe9, 0x5a, 0x53, 0xf4, 0x53, 0x6c, 0x8a, 0x22, 0xb7, 0x5d, 0x06, 0xdb, 0x4e, 0x23,
	0x66, 0x8d, 0x5a, 0xdd, 0xc2, 0x6d, 0x77, 0x8b, 0x17, 0xbf, 0x75, 0x74, 0x87, 0xbc, 0x99, 0xe3,
	0x5b, 0x7f, 0x80, 0x9d, 0x78, 0x45, 0xf3, 0x2c, 0x0d, 0x1e, 0x91, 0x3e, 0x74, 0x63, 0xfc, 0x94,
	0x06, 0x0e, 0x0e, 0x6f, 0x2b, 0x2a, 0xab, 0xc0, 0x25, 0xfb, 0xe0, 0xe3, 0xaf, 0x04, 0x3c, 0x2c,
	0xe8, 0x90, 0x21, 0x80, 0x5a, 0x79, 0xc6, 0x66, 0x19, 0x0f, 0x3c, 0x72, 0x00, 0x7d, 0x85, 0xcf,
	0x25, 0x5d, 0x07, 0xdd, 0x1a, 0x5e, 0xd2, 0x8c, 0x07, 0x7b, 0xb8, 0x56, 0xc1, 0x0b, 0x9e, 0x06,
	0x3d, 0xd2, 0x83, 0x0e, 0x0e, 0xfc, 0x17, 0xbf, 0x81, 0xde, 0x69, 0xa2, 0x7f, 0xcb, 0xf9, 0xe0,
	0x5d, 0x09, 0xce, 0x82, 0x47, 0x6a, 0x69, 0x4e, 0x13, 0xa6, 0x0e, 0x72, 0xf0, 0x20, 0xdd, 0x15,
	0x14, 0x56, 0x61, 0x5c, 0x8a, 0x15, 0x6b, 0xc2, 0x30, 0x85, 0x8e, 0xd8, 0x6b, 0xe3, 0x45, 0x11,
	0x74, 0x5f, 0xfc, 0xde, 0x85, 0xa1, 0xbe, 0x4f, 0x74, 0x50, 0x27, 0xf5, 0xa0, 0x73, 0xca, 0x37,
	0x3a, 0xcd, 0xcb, 0xcd, 0xf5, 0x9a, 0xeb, 0x34, 0x2f, 0x38, 0x5b, 0x6c, 0x02, 0x97, 0x7c, 0x02,
	0x03, 0x65, 0xfd, 0x8a, 0x26, 0x6c, 0x52, 0x04, 0x1d, 0x8c, 0x47, 0x19, 0xb0, 0x67, 0x07, 0x1e,
	0xce, 0x2b, 0x57, 0x33, 0xaf, 0x52, 0x55, 0x06, 0x35, 0xbf, 0x87, 0x11, 0x5c, 0x57, 0x73, 0x26,
	0xf5, 0xd6, 0x3d, 0xf2, 0x18, 0x82, 0x06, 0x9b, 0x45, 0x3e, 0x21, 0x30, 0x6c, 0xac, 0x6a, 0x65,
	0xbf, 0xf6, 0x6c, 0x6f, 0x0f, 0xb5, 0x67, 0x73, 0xc6, 0x00, 0xc3, 0x15, 0x68, 0x0b, 0xf6, 0x91,
	0x8e, 0x2b, 0x51, 0xbd, 0x61, 0x74, 0xb5, 0x09, 0x0e, 0xc8, 0x33, 0x08, 0xaf, 0x39, 0x6b, 0x76,
	0x3e, 0xe5, 0xe9, 0x35, 0x67, 0x3a, 0xb5, 0xe1, 0xfb, 0x3d, 0xf5, 0xcf, 0x97, 0x97, 0xff, 0x0e,
	0x00, 0x00, 0xff, 0xff, 0x52, 0x81, 0x69, 0x6e, 0xce, 0x11, 0x00, 0x00,
}
