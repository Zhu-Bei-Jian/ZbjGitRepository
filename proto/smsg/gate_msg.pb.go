// Code generated by protoc-gen-go. DO NOT EDIT.
// source: smsg/gate_msg.proto

package smsg

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import gamedef "sanguosha.com/sgs_herox/proto/def"
import gameconf "sanguosha.com/sgs_herox/proto/gameconf"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type RespAuth_ErrCode int32

const (
	RespAuth_ErrUnknow              RespAuth_ErrCode = 0
	RespAuth_ErrTicketInvalid       RespAuth_ErrCode = 1
	RespAuth_ErrForceRealName       RespAuth_ErrCode = 2
	RespAuth_ErrExtraInfoInvalid    RespAuth_ErrCode = 3
	RespAuth_ErrAccountBan          RespAuth_ErrCode = 4
	RespAuth_ErrCreateAccountFailed RespAuth_ErrCode = 5
	RespAuth_ErrLoadAccountFailed   RespAuth_ErrCode = 6
	RespAuth_ErrNotInWhiteList      RespAuth_ErrCode = 7
	RespAuth_ErrNotOpenTime         RespAuth_ErrCode = 8
	RespAuth_ErrVersionNotMatch     RespAuth_ErrCode = 9
)

var RespAuth_ErrCode_name = map[int32]string{
	0: "ErrUnknow",
	1: "ErrTicketInvalid",
	2: "ErrForceRealName",
	3: "ErrExtraInfoInvalid",
	4: "ErrAccountBan",
	5: "ErrCreateAccountFailed",
	6: "ErrLoadAccountFailed",
	7: "ErrNotInWhiteList",
	8: "ErrNotOpenTime",
	9: "ErrVersionNotMatch",
}
var RespAuth_ErrCode_value = map[string]int32{
	"ErrUnknow":              0,
	"ErrTicketInvalid":       1,
	"ErrForceRealName":       2,
	"ErrExtraInfoInvalid":    3,
	"ErrAccountBan":          4,
	"ErrCreateAccountFailed": 5,
	"ErrLoadAccountFailed":   6,
	"ErrNotInWhiteList":      7,
	"ErrNotOpenTime":         8,
	"ErrVersionNotMatch":     9,
}

func (x RespAuth_ErrCode) String() string {
	return proto.EnumName(RespAuth_ErrCode_name, int32(x))
}
func (RespAuth_ErrCode) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{1, 0} }

type GtLsRespLogin_ErrCode int32

const (
	GtLsRespLogin_ErrUnknow GtLsRespLogin_ErrCode = 0
	GtLsRespLogin_ErrSystem GtLsRespLogin_ErrCode = 1
)

var GtLsRespLogin_ErrCode_name = map[int32]string{
	0: "ErrUnknow",
	1: "ErrSystem",
}
var GtLsRespLogin_ErrCode_value = map[string]int32{
	"ErrUnknow": 0,
	"ErrSystem": 1,
}

func (x GtLsRespLogin_ErrCode) String() string {
	return proto.EnumName(GtLsRespLogin_ErrCode_name, int32(x))
}
func (GtLsRespLogin_ErrCode) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{5, 0} }

type LsEsRespLogin_ErrCode int32

const (
	LsEsRespLogin_None      LsEsRespLogin_ErrCode = 0
	LsEsRespLogin_ErrUnknow LsEsRespLogin_ErrCode = 1
)

var LsEsRespLogin_ErrCode_name = map[int32]string{
	0: "None",
	1: "ErrUnknow",
}
var LsEsRespLogin_ErrCode_value = map[string]int32{
	"None":      0,
	"ErrUnknow": 1,
}

func (x LsEsRespLogin_ErrCode) String() string {
	return proto.EnumName(LsEsRespLogin_ErrCode_name, int32(x))
}
func (LsEsRespLogin_ErrCode) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{8, 0} }

// gate->auth
type ReqAuth struct {
	Ticket    string                   `protobuf:"bytes,2,opt,name=ticket" json:"ticket,omitempty"`
	LoginType gameconf.AccountLoginTyp `protobuf:"varint,3,opt,name=loginType,enum=gameconf.AccountLoginTyp" json:"loginType,omitempty"`
	Ip        string                   `protobuf:"bytes,4,opt,name=ip" json:"ip,omitempty"`
	Version   string                   `protobuf:"bytes,5,opt,name=version" json:"version,omitempty"`
}

func (m *ReqAuth) Reset()                    { *m = ReqAuth{} }
func (m *ReqAuth) String() string            { return proto.CompactTextString(m) }
func (*ReqAuth) ProtoMessage()               {}
func (*ReqAuth) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *ReqAuth) GetTicket() string {
	if m != nil {
		return m.Ticket
	}
	return ""
}

func (m *ReqAuth) GetLoginType() gameconf.AccountLoginTyp {
	if m != nil {
		return m.LoginType
	}
	return gameconf.AccountLoginTyp_ALTInvalid
}

func (m *ReqAuth) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *ReqAuth) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

type RespAuth struct {
	ErrCode  RespAuth_ErrCode  `protobuf:"varint,1,opt,name=errCode,enum=smsg.RespAuth_ErrCode" json:"errCode,omitempty"`
	Userid   uint64            `protobuf:"varint,10,opt,name=userid" json:"userid,omitempty"`
	Account  string            `protobuf:"bytes,11,opt,name=account" json:"account,omitempty"`
	AuthInfo *gamedef.AuthInfo `protobuf:"bytes,12,opt,name=authInfo" json:"authInfo,omitempty"`
}

func (m *RespAuth) Reset()                    { *m = RespAuth{} }
func (m *RespAuth) String() string            { return proto.CompactTextString(m) }
func (*RespAuth) ProtoMessage()               {}
func (*RespAuth) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *RespAuth) GetErrCode() RespAuth_ErrCode {
	if m != nil {
		return m.ErrCode
	}
	return RespAuth_ErrUnknow
}

func (m *RespAuth) GetUserid() uint64 {
	if m != nil {
		return m.Userid
	}
	return 0
}

func (m *RespAuth) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *RespAuth) GetAuthInfo() *gamedef.AuthInfo {
	if m != nil {
		return m.AuthInfo
	}
	return nil
}

type BroadUserLogin struct {
	Userid uint64 `protobuf:"varint,1,opt,name=userid" json:"userid,omitempty"`
}

func (m *BroadUserLogin) Reset()                    { *m = BroadUserLogin{} }
func (m *BroadUserLogin) String() string            { return proto.CompactTextString(m) }
func (*BroadUserLogin) ProtoMessage()               {}
func (*BroadUserLogin) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

func (m *BroadUserLogin) GetUserid() uint64 {
	if m != nil {
		return m.Userid
	}
	return 0
}

type TokenData struct {
	Account              string `protobuf:"bytes,1,opt,name=Account" json:"Account,omitempty"`
	IsRealName           bool   `protobuf:"varint,2,opt,name=IsRealName" json:"IsRealName,omitempty"`
	IsBindMobile         bool   `protobuf:"varint,3,opt,name=IsBindMobile" json:"IsBindMobile,omitempty"`
	UserIDType           int32  `protobuf:"varint,4,opt,name=UserIDType" json:"UserIDType,omitempty"`
	IsGuest              bool   `protobuf:"varint,5,opt,name=IsGuest" json:"IsGuest,omitempty"`
	IsAdult              bool   `protobuf:"varint,6,opt,name=IsAdult" json:"IsAdult,omitempty"`
	Pgt                  string `protobuf:"bytes,7,opt,name=Pgt" json:"Pgt,omitempty"`
	IsRealNameSetSuccess bool   `protobuf:"varint,8,opt,name=IsRealNameSetSuccess" json:"IsRealNameSetSuccess,omitempty"`
	Version              string `protobuf:"bytes,10,opt,name=Version" json:"Version,omitempty"`
	UserAge              int32  `protobuf:"varint,11,opt,name=userAge" json:"userAge,omitempty"`
	SndaID               string `protobuf:"bytes,12,opt,name=sndaID" json:"sndaID,omitempty"`
}

func (m *TokenData) Reset()                    { *m = TokenData{} }
func (m *TokenData) String() string            { return proto.CompactTextString(m) }
func (*TokenData) ProtoMessage()               {}
func (*TokenData) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{3} }

func (m *TokenData) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *TokenData) GetIsRealName() bool {
	if m != nil {
		return m.IsRealName
	}
	return false
}

func (m *TokenData) GetIsBindMobile() bool {
	if m != nil {
		return m.IsBindMobile
	}
	return false
}

func (m *TokenData) GetUserIDType() int32 {
	if m != nil {
		return m.UserIDType
	}
	return 0
}

func (m *TokenData) GetIsGuest() bool {
	if m != nil {
		return m.IsGuest
	}
	return false
}

func (m *TokenData) GetIsAdult() bool {
	if m != nil {
		return m.IsAdult
	}
	return false
}

func (m *TokenData) GetPgt() string {
	if m != nil {
		return m.Pgt
	}
	return ""
}

func (m *TokenData) GetIsRealNameSetSuccess() bool {
	if m != nil {
		return m.IsRealNameSetSuccess
	}
	return false
}

func (m *TokenData) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *TokenData) GetUserAge() int32 {
	if m != nil {
		return m.UserAge
	}
	return 0
}

func (m *TokenData) GetSndaID() string {
	if m != nil {
		return m.SndaID
	}
	return ""
}

// gate->lobby
type GtLsReqLogin struct {
	Userid   uint64            `protobuf:"varint,2,opt,name=userid" json:"userid,omitempty"`
	Session  uint64            `protobuf:"varint,3,opt,name=session" json:"session,omitempty"`
	IP       string            `protobuf:"bytes,6,opt,name=IP" json:"IP,omitempty"`
	AuthInfo *gamedef.AuthInfo `protobuf:"bytes,10,opt,name=authInfo" json:"authInfo,omitempty"`
}

func (m *GtLsReqLogin) Reset()                    { *m = GtLsReqLogin{} }
func (m *GtLsReqLogin) String() string            { return proto.CompactTextString(m) }
func (*GtLsReqLogin) ProtoMessage()               {}
func (*GtLsReqLogin) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{4} }

func (m *GtLsReqLogin) GetUserid() uint64 {
	if m != nil {
		return m.Userid
	}
	return 0
}

func (m *GtLsReqLogin) GetSession() uint64 {
	if m != nil {
		return m.Session
	}
	return 0
}

func (m *GtLsReqLogin) GetIP() string {
	if m != nil {
		return m.IP
	}
	return ""
}

func (m *GtLsReqLogin) GetAuthInfo() *gamedef.AuthInfo {
	if m != nil {
		return m.AuthInfo
	}
	return nil
}

type GtLsRespLogin struct {
	ErrCode   GtLsRespLogin_ErrCode `protobuf:"varint,2,opt,name=errCode,enum=smsg.GtLsRespLogin_ErrCode" json:"errCode,omitempty"`
	GameInfo  *gamedef.GameInfo     `protobuf:"bytes,10,opt,name=gameInfo" json:"gameInfo,omitempty"`
	UserBrief *gamedef.UserBrief    `protobuf:"bytes,11,opt,name=userBrief" json:"userBrief,omitempty"`
	ServerCfg *gamedef.ServerConfig `protobuf:"bytes,12,opt,name=serverCfg" json:"serverCfg,omitempty"`
}

func (m *GtLsRespLogin) Reset()                    { *m = GtLsRespLogin{} }
func (m *GtLsRespLogin) String() string            { return proto.CompactTextString(m) }
func (*GtLsRespLogin) ProtoMessage()               {}
func (*GtLsRespLogin) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{5} }

func (m *GtLsRespLogin) GetErrCode() GtLsRespLogin_ErrCode {
	if m != nil {
		return m.ErrCode
	}
	return GtLsRespLogin_ErrUnknow
}

func (m *GtLsRespLogin) GetGameInfo() *gamedef.GameInfo {
	if m != nil {
		return m.GameInfo
	}
	return nil
}

func (m *GtLsRespLogin) GetUserBrief() *gamedef.UserBrief {
	if m != nil {
		return m.UserBrief
	}
	return nil
}

func (m *GtLsRespLogin) GetServerCfg() *gamedef.ServerConfig {
	if m != nil {
		return m.ServerCfg
	}
	return nil
}

// lobby->entity
type EsReLogin struct {
	Userid  uint64 `protobuf:"varint,2,opt,name=userid" json:"userid,omitempty"`
	Time    int64  `protobuf:"varint,3,opt,name=time" json:"time,omitempty"`
	IsAdult bool   `protobuf:"varint,4,opt,name=isAdult" json:"isAdult,omitempty"`
	IP      string `protobuf:"bytes,5,opt,name=IP" json:"IP,omitempty"`
	Gateid  uint32 `protobuf:"varint,7,opt,name=gateid" json:"gateid,omitempty"`
	Session uint64 `protobuf:"varint,8,opt,name=session" json:"session,omitempty"`
}

func (m *EsReLogin) Reset()                    { *m = EsReLogin{} }
func (m *EsReLogin) String() string            { return proto.CompactTextString(m) }
func (*EsReLogin) ProtoMessage()               {}
func (*EsReLogin) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{6} }

func (m *EsReLogin) GetUserid() uint64 {
	if m != nil {
		return m.Userid
	}
	return 0
}

func (m *EsReLogin) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *EsReLogin) GetIsAdult() bool {
	if m != nil {
		return m.IsAdult
	}
	return false
}

func (m *EsReLogin) GetIP() string {
	if m != nil {
		return m.IP
	}
	return ""
}

func (m *EsReLogin) GetGateid() uint32 {
	if m != nil {
		return m.Gateid
	}
	return 0
}

func (m *EsReLogin) GetSession() uint64 {
	if m != nil {
		return m.Session
	}
	return 0
}

type LsEsReqLogin struct {
	Userid   uint64            `protobuf:"varint,2,opt,name=userid" json:"userid,omitempty"`
	Time     int64             `protobuf:"varint,3,opt,name=time" json:"time,omitempty"`
	IP       string            `protobuf:"bytes,5,opt,name=IP" json:"IP,omitempty"`
	GateId   uint32            `protobuf:"varint,10,opt,name=gateId" json:"gateId,omitempty"`
	Session  uint64            `protobuf:"varint,11,opt,name=session" json:"session,omitempty"`
	AuthInfo *gamedef.AuthInfo `protobuf:"bytes,12,opt,name=authInfo" json:"authInfo,omitempty"`
}

func (m *LsEsReqLogin) Reset()                    { *m = LsEsReqLogin{} }
func (m *LsEsReqLogin) String() string            { return proto.CompactTextString(m) }
func (*LsEsReqLogin) ProtoMessage()               {}
func (*LsEsReqLogin) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{7} }

func (m *LsEsReqLogin) GetUserid() uint64 {
	if m != nil {
		return m.Userid
	}
	return 0
}

func (m *LsEsReqLogin) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *LsEsReqLogin) GetIP() string {
	if m != nil {
		return m.IP
	}
	return ""
}

func (m *LsEsReqLogin) GetGateId() uint32 {
	if m != nil {
		return m.GateId
	}
	return 0
}

func (m *LsEsReqLogin) GetSession() uint64 {
	if m != nil {
		return m.Session
	}
	return 0
}

func (m *LsEsReqLogin) GetAuthInfo() *gamedef.AuthInfo {
	if m != nil {
		return m.AuthInfo
	}
	return nil
}

type LsEsRespLogin struct {
	Userid    uint64                `protobuf:"varint,2,opt,name=userid" json:"userid,omitempty"`
	ErrCode   LsEsRespLogin_ErrCode `protobuf:"varint,3,opt,name=errCode,enum=smsg.LsEsRespLogin_ErrCode" json:"errCode,omitempty"`
	UserBrief *gamedef.UserBrief    `protobuf:"bytes,4,opt,name=userBrief" json:"userBrief,omitempty"`
}

func (m *LsEsRespLogin) Reset()                    { *m = LsEsRespLogin{} }
func (m *LsEsRespLogin) String() string            { return proto.CompactTextString(m) }
func (*LsEsRespLogin) ProtoMessage()               {}
func (*LsEsRespLogin) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{8} }

func (m *LsEsRespLogin) GetUserid() uint64 {
	if m != nil {
		return m.Userid
	}
	return 0
}

func (m *LsEsRespLogin) GetErrCode() LsEsRespLogin_ErrCode {
	if m != nil {
		return m.ErrCode
	}
	return LsEsRespLogin_None
}

func (m *LsEsRespLogin) GetUserBrief() *gamedef.UserBrief {
	if m != nil {
		return m.UserBrief
	}
	return nil
}

// lobby->entity
type LsEsLogout struct {
	Userid uint64 `protobuf:"varint,1,opt,name=userid" json:"userid,omitempty"`
	Time   int64  `protobuf:"varint,2,opt,name=time" json:"time,omitempty"`
}

func (m *LsEsLogout) Reset()                    { *m = LsEsLogout{} }
func (m *LsEsLogout) String() string            { return proto.CompactTextString(m) }
func (*LsEsLogout) ProtoMessage()               {}
func (*LsEsLogout) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{9} }

func (m *LsEsLogout) GetUserid() uint64 {
	if m != nil {
		return m.Userid
	}
	return 0
}

func (m *LsEsLogout) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

// lobby->...
type UserConnect struct {
	Userid  uint64 `protobuf:"varint,1,opt,name=userid" json:"userid,omitempty"`
	Gateid  uint32 `protobuf:"varint,2,opt,name=gateid" json:"gateid,omitempty"`
	Session uint64 `protobuf:"varint,3,opt,name=session" json:"session,omitempty"`
}

func (m *UserConnect) Reset()                    { *m = UserConnect{} }
func (m *UserConnect) String() string            { return proto.CompactTextString(m) }
func (*UserConnect) ProtoMessage()               {}
func (*UserConnect) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{10} }

func (m *UserConnect) GetUserid() uint64 {
	if m != nil {
		return m.Userid
	}
	return 0
}

func (m *UserConnect) GetGateid() uint32 {
	if m != nil {
		return m.Gateid
	}
	return 0
}

func (m *UserConnect) GetSession() uint64 {
	if m != nil {
		return m.Session
	}
	return 0
}

// lobby->...
type UserDisconnect struct {
	Userid uint64 `protobuf:"varint,1,opt,name=userid" json:"userid,omitempty"`
}

func (m *UserDisconnect) Reset()                    { *m = UserDisconnect{} }
func (m *UserDisconnect) String() string            { return proto.CompactTextString(m) }
func (*UserDisconnect) ProtoMessage()               {}
func (*UserDisconnect) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{11} }

func (m *UserDisconnect) GetUserid() uint64 {
	if m != nil {
		return m.Userid
	}
	return 0
}

// Lobby->gate
type LoGaNtfCloseSession struct {
	Session uint64                     `protobuf:"varint,1,opt,name=session" json:"session,omitempty"`
	Reason  gameconf.KickUserOutReason `protobuf:"varint,2,opt,name=reason,enum=gameconf.KickUserOutReason" json:"reason,omitempty"`
	Msg     string                     `protobuf:"bytes,3,opt,name=msg" json:"msg,omitempty"`
}

func (m *LoGaNtfCloseSession) Reset()                    { *m = LoGaNtfCloseSession{} }
func (m *LoGaNtfCloseSession) String() string            { return proto.CompactTextString(m) }
func (*LoGaNtfCloseSession) ProtoMessage()               {}
func (*LoGaNtfCloseSession) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{12} }

func (m *LoGaNtfCloseSession) GetSession() uint64 {
	if m != nil {
		return m.Session
	}
	return 0
}

func (m *LoGaNtfCloseSession) GetReason() gameconf.KickUserOutReason {
	if m != nil {
		return m.Reason
	}
	return gameconf.KickUserOutReason_KUOInvalid
}

func (m *LoGaNtfCloseSession) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

// gate->lobby
type NoticeSessionClosed struct {
	Userid  uint64 `protobuf:"varint,1,opt,name=userid" json:"userid,omitempty"`
	Session uint64 `protobuf:"varint,2,opt,name=session" json:"session,omitempty"`
}

func (m *NoticeSessionClosed) Reset()                    { *m = NoticeSessionClosed{} }
func (m *NoticeSessionClosed) String() string            { return proto.CompactTextString(m) }
func (*NoticeSessionClosed) ProtoMessage()               {}
func (*NoticeSessionClosed) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{13} }

func (m *NoticeSessionClosed) GetUserid() uint64 {
	if m != nil {
		return m.Userid
	}
	return 0
}

func (m *NoticeSessionClosed) GetSession() uint64 {
	if m != nil {
		return m.Session
	}
	return 0
}

// lobby->gate
type BindSessionToServer struct {
	Session uint64 `protobuf:"varint,1,opt,name=session" json:"session,omitempty"`
	SvrType uint32 `protobuf:"varint,2,opt,name=svrType" json:"svrType,omitempty"`
	Svrid   uint32 `protobuf:"varint,3,opt,name=svrid" json:"svrid,omitempty"`
	Uuid    string `protobuf:"bytes,4,opt,name=uuid" json:"uuid,omitempty"`
}

func (m *BindSessionToServer) Reset()                    { *m = BindSessionToServer{} }
func (m *BindSessionToServer) String() string            { return proto.CompactTextString(m) }
func (*BindSessionToServer) ProtoMessage()               {}
func (*BindSessionToServer) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{14} }

func (m *BindSessionToServer) GetSession() uint64 {
	if m != nil {
		return m.Session
	}
	return 0
}

func (m *BindSessionToServer) GetSvrType() uint32 {
	if m != nil {
		return m.SvrType
	}
	return 0
}

func (m *BindSessionToServer) GetSvrid() uint32 {
	if m != nil {
		return m.Svrid
	}
	return 0
}

func (m *BindSessionToServer) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

type ReqUserGameInfo struct {
	Userid uint64 `protobuf:"varint,2,opt,name=userid" json:"userid,omitempty"`
}

func (m *ReqUserGameInfo) Reset()                    { *m = ReqUserGameInfo{} }
func (m *ReqUserGameInfo) String() string            { return proto.CompactTextString(m) }
func (*ReqUserGameInfo) ProtoMessage()               {}
func (*ReqUserGameInfo) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{15} }

func (m *ReqUserGameInfo) GetUserid() uint64 {
	if m != nil {
		return m.Userid
	}
	return 0
}

type RespUserGameInfo struct {
	Userid   uint64               `protobuf:"varint,2,opt,name=userid" json:"userid,omitempty"`
	Svrid    uint32               `protobuf:"varint,3,opt,name=svrid" json:"svrid,omitempty"`
	GameMode gameconf.GameModeTyp `protobuf:"varint,4,opt,name=gameMode,enum=gameconf.GameModeTyp" json:"gameMode,omitempty"`
	GameUUID string               `protobuf:"bytes,5,opt,name=gameUUID" json:"gameUUID,omitempty"`
}

func (m *RespUserGameInfo) Reset()                    { *m = RespUserGameInfo{} }
func (m *RespUserGameInfo) String() string            { return proto.CompactTextString(m) }
func (*RespUserGameInfo) ProtoMessage()               {}
func (*RespUserGameInfo) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{16} }

func (m *RespUserGameInfo) GetUserid() uint64 {
	if m != nil {
		return m.Userid
	}
	return 0
}

func (m *RespUserGameInfo) GetSvrid() uint32 {
	if m != nil {
		return m.Svrid
	}
	return 0
}

func (m *RespUserGameInfo) GetGameMode() gameconf.GameModeTyp {
	if m != nil {
		return m.GameMode
	}
	return gameconf.GameModeTyp_MGTInvalid
}

func (m *RespUserGameInfo) GetGameUUID() string {
	if m != nil {
		return m.GameUUID
	}
	return ""
}

type SSChannelBroadcast struct {
	Channel    gameconf.ChatChannelTyp `protobuf:"varint,1,opt,name=channel,enum=gameconf.ChatChannelTyp" json:"channel,omitempty"`
	MsgId      uint32                  `protobuf:"varint,2,opt,name=msgId" json:"msgId,omitempty"`
	LogicMsg   []byte                  `protobuf:"bytes,3,opt,name=logicMsg,proto3" json:"logicMsg,omitempty"`
	IgnoreUser uint64                  `protobuf:"varint,4,opt,name=ignoreUser" json:"ignoreUser,omitempty"`
	VersionGE  string                  `protobuf:"bytes,5,opt,name=versionGE" json:"versionGE,omitempty"`
}

func (m *SSChannelBroadcast) Reset()                    { *m = SSChannelBroadcast{} }
func (m *SSChannelBroadcast) String() string            { return proto.CompactTextString(m) }
func (*SSChannelBroadcast) ProtoMessage()               {}
func (*SSChannelBroadcast) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{17} }

func (m *SSChannelBroadcast) GetChannel() gameconf.ChatChannelTyp {
	if m != nil {
		return m.Channel
	}
	return gameconf.ChatChannelTyp_ChatCTInvalid
}

func (m *SSChannelBroadcast) GetMsgId() uint32 {
	if m != nil {
		return m.MsgId
	}
	return 0
}

func (m *SSChannelBroadcast) GetLogicMsg() []byte {
	if m != nil {
		return m.LogicMsg
	}
	return nil
}

func (m *SSChannelBroadcast) GetIgnoreUser() uint64 {
	if m != nil {
		return m.IgnoreUser
	}
	return 0
}

func (m *SSChannelBroadcast) GetVersionGE() string {
	if m != nil {
		return m.VersionGE
	}
	return ""
}

type SSBroadcast struct {
	Users    []uint64 `protobuf:"varint,1,rep,packed,name=users" json:"users,omitempty"`
	LogicMsg []byte   `protobuf:"bytes,2,opt,name=logicMsg,proto3" json:"logicMsg,omitempty"`
}

func (m *SSBroadcast) Reset()                    { *m = SSBroadcast{} }
func (m *SSBroadcast) String() string            { return proto.CompactTextString(m) }
func (*SSBroadcast) ProtoMessage()               {}
func (*SSBroadcast) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{18} }

func (m *SSBroadcast) GetUsers() []uint64 {
	if m != nil {
		return m.Users
	}
	return nil
}

func (m *SSBroadcast) GetLogicMsg() []byte {
	if m != nil {
		return m.LogicMsg
	}
	return nil
}

type RouteMessageWithUserID struct {
	UserID uint64 `protobuf:"varint,1,opt,name=userID" json:"userID,omitempty"`
	MsgID  uint32 `protobuf:"varint,2,opt,name=msgID" json:"msgID,omitempty"`
	Data   []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *RouteMessageWithUserID) Reset()                    { *m = RouteMessageWithUserID{} }
func (m *RouteMessageWithUserID) String() string            { return proto.CompactTextString(m) }
func (*RouteMessageWithUserID) ProtoMessage()               {}
func (*RouteMessageWithUserID) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{19} }

func (m *RouteMessageWithUserID) GetUserID() uint64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *RouteMessageWithUserID) GetMsgID() uint32 {
	if m != nil {
		return m.MsgID
	}
	return 0
}

func (m *RouteMessageWithUserID) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*ReqAuth)(nil), "smsg.ReqAuth")
	proto.RegisterType((*RespAuth)(nil), "smsg.RespAuth")
	proto.RegisterType((*BroadUserLogin)(nil), "smsg.BroadUserLogin")
	proto.RegisterType((*TokenData)(nil), "smsg.TokenData")
	proto.RegisterType((*GtLsReqLogin)(nil), "smsg.GtLsReqLogin")
	proto.RegisterType((*GtLsRespLogin)(nil), "smsg.GtLsRespLogin")
	proto.RegisterType((*EsReLogin)(nil), "smsg.EsReLogin")
	proto.RegisterType((*LsEsReqLogin)(nil), "smsg.LsEsReqLogin")
	proto.RegisterType((*LsEsRespLogin)(nil), "smsg.LsEsRespLogin")
	proto.RegisterType((*LsEsLogout)(nil), "smsg.LsEsLogout")
	proto.RegisterType((*UserConnect)(nil), "smsg.UserConnect")
	proto.RegisterType((*UserDisconnect)(nil), "smsg.UserDisconnect")
	proto.RegisterType((*LoGaNtfCloseSession)(nil), "smsg.LoGaNtfCloseSession")
	proto.RegisterType((*NoticeSessionClosed)(nil), "smsg.NoticeSessionClosed")
	proto.RegisterType((*BindSessionToServer)(nil), "smsg.BindSessionToServer")
	proto.RegisterType((*ReqUserGameInfo)(nil), "smsg.ReqUserGameInfo")
	proto.RegisterType((*RespUserGameInfo)(nil), "smsg.RespUserGameInfo")
	proto.RegisterType((*SSChannelBroadcast)(nil), "smsg.SSChannelBroadcast")
	proto.RegisterType((*SSBroadcast)(nil), "smsg.SSBroadcast")
	proto.RegisterType((*RouteMessageWithUserID)(nil), "smsg.RouteMessageWithUserID")
	proto.RegisterEnum("smsg.RespAuth_ErrCode", RespAuth_ErrCode_name, RespAuth_ErrCode_value)
	proto.RegisterEnum("smsg.GtLsRespLogin_ErrCode", GtLsRespLogin_ErrCode_name, GtLsRespLogin_ErrCode_value)
	proto.RegisterEnum("smsg.LsEsRespLogin_ErrCode", LsEsRespLogin_ErrCode_name, LsEsRespLogin_ErrCode_value)
}

func init() { proto.RegisterFile("smsg/gate_msg.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 1242 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x56, 0x4d, 0x6f, 0x1b, 0x37,
	0x13, 0x7e, 0x77, 0x25, 0x59, 0xda, 0xf1, 0xc7, 0xab, 0xd0, 0x8e, 0xbb, 0x75, 0x8b, 0xc2, 0xd8,
	0x4b, 0x5d, 0x14, 0x91, 0x53, 0x07, 0xfd, 0xb8, 0x15, 0xb6, 0xa5, 0x08, 0x8b, 0xca, 0x4e, 0x40,
	0xd9, 0x0d, 0xd0, 0x4b, 0xc0, 0xec, 0x52, 0x2b, 0xc2, 0xd2, 0x52, 0x21, 0xb9, 0x6a, 0x72, 0xea,
	0xa5, 0x3d, 0xf4, 0xd4, 0x43, 0x7f, 0x46, 0xaf, 0x3d, 0xf4, 0x5f, 0xf4, 0x77, 0xf4, 0x5f, 0x14,
	0xfc, 0x58, 0x49, 0x9b, 0x58, 0x4e, 0x7a, 0x58, 0x80, 0xc3, 0x19, 0xf2, 0x19, 0x3e, 0xf3, 0x0c,
	0x97, 0xb0, 0x2b, 0xa7, 0x32, 0x3b, 0xce, 0x88, 0xa2, 0xcf, 0xa7, 0x32, 0xeb, 0xcc, 0x04, 0x57,
	0x1c, 0xd5, 0xf5, 0xe4, 0xc1, 0xe7, 0x92, 0xe4, 0x59, 0xc1, 0xe5, 0x98, 0x74, 0x12, 0x3e, 0x3d,
	0x96, 0x99, 0x7c, 0x3e, 0xa6, 0x82, 0xbf, 0x3a, 0x36, 0x41, 0xc7, 0x29, 0x1d, 0xe9, 0xcf, 0x2e,
	0x39, 0xf8, 0xea, 0xee, 0xe0, 0x8c, 0x4c, 0x69, 0xc2, 0xf3, 0x91, 0x19, 0x3c, 0x57, 0xaf, 0x67,
	0xd4, 0xae, 0x8b, 0x7e, 0xf6, 0xa0, 0x89, 0xe9, 0xcb, 0xd3, 0x42, 0x8d, 0xd1, 0x3e, 0x6c, 0x28,
	0x96, 0xdc, 0x50, 0x15, 0xfa, 0x87, 0xde, 0x51, 0x80, 0x9d, 0x85, 0xbe, 0x86, 0x60, 0xc2, 0x33,
	0x96, 0x5f, 0xbd, 0x9e, 0xd1, 0xb0, 0x76, 0xe8, 0x1d, 0xed, 0x9c, 0x7c, 0xd8, 0x29, 0x77, 0xec,
	0x9c, 0x26, 0x09, 0x2f, 0x72, 0x35, 0x70, 0x11, 0x78, 0x19, 0x8b, 0x76, 0xc0, 0x67, 0xb3, 0xb0,
	0x6e, 0x36, 0xf3, 0xd9, 0x0c, 0x85, 0xd0, 0x9c, 0x53, 0x21, 0x19, 0xcf, 0xc3, 0x86, 0x99, 0x2c,
	0xcd, 0xe8, 0xd7, 0x1a, 0xb4, 0x30, 0x95, 0x33, 0x93, 0xc7, 0x43, 0x68, 0x52, 0x21, 0xce, 0x79,
	0x4a, 0x43, 0xcf, 0xa0, 0xed, 0x77, 0x34, 0x21, 0x9d, 0x32, 0xa0, 0xd3, 0xb3, 0x5e, 0x5c, 0x86,
	0xe9, 0xcc, 0x0b, 0x49, 0x05, 0x4b, 0x43, 0x38, 0xf4, 0x8e, 0xea, 0xd8, 0x59, 0x1a, 0x90, 0xd8,
	0xf4, 0xc2, 0x4d, 0x0b, 0xe8, 0x4c, 0xf4, 0x00, 0x5a, 0xa4, 0x50, 0xe3, 0x38, 0x1f, 0xf1, 0x70,
	0xeb, 0xd0, 0x3b, 0xda, 0x3c, 0xb9, 0x67, 0x8e, 0xa4, 0x19, 0x3d, 0x75, 0x0e, 0xbc, 0x08, 0x89,
	0xfe, 0xf1, 0xa0, 0xe9, 0x50, 0xd1, 0x36, 0x04, 0x3d, 0x21, 0xae, 0xf3, 0x9b, 0x9c, 0xff, 0xd8,
	0xfe, 0x1f, 0xda, 0x83, 0x76, 0x4f, 0x88, 0x2b, 0x43, 0x55, 0x9c, 0xcf, 0xc9, 0x84, 0xa5, 0x6d,
	0xcf, 0xcd, 0x3e, 0xe6, 0x22, 0xa1, 0x98, 0x92, 0xc9, 0x25, 0x99, 0xd2, 0xb6, 0x8f, 0x3e, 0x80,
	0xdd, 0x9e, 0x10, 0xbd, 0x57, 0x4a, 0x10, 0xbd, 0x6d, 0x19, 0x5e, 0x43, 0xf7, 0x60, 0xbb, 0x27,
	0x84, 0xa3, 0xf2, 0x8c, 0xe4, 0xed, 0x3a, 0x3a, 0x80, 0x7d, 0x8d, 0x28, 0x28, 0x51, 0xd4, 0x39,
	0x1e, 0x13, 0x36, 0xa1, 0x69, 0xbb, 0x81, 0x42, 0xd8, 0xeb, 0x09, 0x31, 0xe0, 0x24, 0xad, 0x7a,
	0x36, 0xd0, 0x7d, 0xb8, 0xd7, 0x13, 0xe2, 0x92, 0xab, 0x38, 0x7f, 0x36, 0x66, 0x8a, 0x0e, 0x98,
	0x54, 0xed, 0x26, 0x42, 0xb0, 0x63, 0xa7, 0x9f, 0xcc, 0x68, 0x7e, 0xc5, 0xa6, 0xb4, 0xdd, 0x42,
	0xfb, 0x80, 0x7a, 0x42, 0x7c, 0x6f, 0x2b, 0x70, 0xc9, 0xd5, 0x05, 0x51, 0xc9, 0xb8, 0x1d, 0x44,
	0x47, 0xb0, 0x73, 0x26, 0x38, 0x49, 0xaf, 0x25, 0x15, 0xa6, 0xaa, 0x2b, 0xf4, 0x7a, 0xab, 0xf4,
	0x46, 0x7f, 0xfb, 0x10, 0x5c, 0xf1, 0x1b, 0x9a, 0x77, 0x89, 0x22, 0x9a, 0x6c, 0x97, 0x8d, 0x09,
	0x0b, 0x70, 0x69, 0xa2, 0x4f, 0x00, 0x62, 0x59, 0xd2, 0x60, 0xc4, 0xd5, 0xc2, 0x2b, 0x33, 0x28,
	0x82, 0xad, 0x58, 0x9e, 0xb1, 0x3c, 0xbd, 0xe0, 0x2f, 0xd8, 0xc4, 0x6a, 0xac, 0x85, 0x2b, 0x73,
	0x7a, 0x0f, 0x9d, 0x50, 0xdc, 0x35, 0x2a, 0xd4, 0x9a, 0x6a, 0xe0, 0x95, 0x19, 0x8d, 0x1e, 0xcb,
	0x7e, 0x41, 0xa5, 0x32, 0xda, 0x6a, 0xe1, 0xd2, 0xb4, 0x9e, 0xd3, 0xb4, 0x98, 0xa8, 0x70, 0xa3,
	0xf4, 0x18, 0x13, 0xb5, 0xa1, 0xf6, 0x34, 0x53, 0x61, 0xd3, 0x64, 0xab, 0x87, 0xe8, 0x04, 0xf6,
	0x96, 0x79, 0x0d, 0xa9, 0x1a, 0x16, 0x49, 0x42, 0xa5, 0x0c, 0x5b, 0x66, 0xe1, 0xad, 0x3e, 0xbd,
	0xbf, 0x23, 0xd1, 0xa8, 0x2f, 0xc0, 0xa5, 0xa9, 0x3d, 0x9a, 0xa9, 0xd3, 0x8c, 0x1a, 0xf9, 0x35,
	0x70, 0x69, 0x6a, 0x46, 0x65, 0x9e, 0x92, 0xb8, 0x6b, 0xc4, 0x17, 0x60, 0x67, 0x45, 0x3f, 0xc1,
	0x56, 0x5f, 0x0d, 0x24, 0xa6, 0x2f, 0xdf, 0x64, 0xde, 0x7f, 0x53, 0xd8, 0x92, 0x4a, 0x83, 0x59,
	0x33, 0x8e, 0xd2, 0xd4, 0x3d, 0x17, 0x3f, 0x35, 0x07, 0x0d, 0xb0, 0x1f, 0x3f, 0xad, 0x08, 0x1d,
	0xde, 0x2d, 0xf4, 0x5f, 0x7c, 0xd8, 0xb6, 0x19, 0xc8, 0x99, 0x4d, 0xe1, 0xcb, 0x65, 0x37, 0xfa,
	0xa6, 0x1b, 0x3f, 0xb2, 0xdd, 0x58, 0x89, 0x7a, 0xbb, 0x25, 0x1f, 0x40, 0x4b, 0xc3, 0xdc, 0x8a,
	0xdb, 0x77, 0x0e, 0xbc, 0x08, 0x41, 0x0f, 0x21, 0xd0, 0x47, 0x3b, 0x13, 0x8c, 0x8e, 0x0c, 0x59,
	0x9b, 0x27, 0x68, 0x11, 0x7f, 0x5d, 0x7a, 0xf0, 0x32, 0x08, 0x3d, 0x82, 0x40, 0x52, 0x31, 0xa7,
	0xe2, 0x7c, 0x94, 0xb9, 0x16, 0xbe, 0xbf, 0x58, 0x31, 0xb4, 0x1e, 0x9e, 0x8f, 0x58, 0x86, 0x97,
	0x71, 0xd1, 0xa7, 0x6b, 0xdb, 0xd8, 0x9a, 0xc3, 0xd7, 0x52, 0xd1, 0x69, 0xdb, 0x8b, 0x7e, 0xf7,
	0x20, 0xe8, 0x49, 0x4c, 0xef, 0x2e, 0x03, 0x82, 0xba, 0x62, 0x53, 0x2b, 0xd8, 0x1a, 0x36, 0x63,
	0x5d, 0x1a, 0xe6, 0xe4, 0x56, 0xb7, 0x72, 0x73, 0xa6, 0x2b, 0x4d, 0x63, 0x51, 0x9a, 0x7d, 0xd8,
	0xd0, 0x17, 0x3f, 0x4b, 0x8d, 0x02, 0xb7, 0xb1, 0xb3, 0x56, 0x8b, 0xdb, 0xaa, 0x14, 0x37, 0xfa,
	0xc3, 0x83, 0xad, 0x81, 0xec, 0xbd, 0x5b, 0x1f, 0xb7, 0x25, 0xb6, 0x06, 0x3e, 0xb6, 0x97, 0xa6,
	0x83, 0x8f, 0x2b, 0xf0, 0x9b, 0x55, 0x6d, 0xfd, 0xc7, 0x4b, 0xf3, 0x4f, 0x0f, 0xb6, 0x6d, 0xb6,
	0xa5, 0x96, 0xd6, 0xa5, 0xbb, 0xa2, 0xb1, 0xda, 0xaa, 0xc6, 0x2a, 0xab, 0xdf, 0xd6, 0x58, 0x45,
	0x34, 0xf5, 0xf7, 0x10, 0x4d, 0x14, 0x2d, 0xeb, 0xdf, 0x82, 0xfa, 0x25, 0xcf, 0xe9, 0xa2, 0xf4,
	0x4e, 0x09, 0x5e, 0xf4, 0x0d, 0x80, 0xc6, 0x1d, 0xf0, 0x8c, 0x17, 0x6a, 0xdd, 0xdd, 0xb7, 0x60,
	0xd8, 0x5f, 0x32, 0x1c, 0x3d, 0x83, 0x4d, 0x8d, 0x7a, 0xce, 0xf3, 0x9c, 0x26, 0xeb, 0x97, 0x2e,
	0xeb, 0xee, 0xaf, 0xab, 0x7b, 0xb5, 0xa9, 0xf5, 0x95, 0xac, 0x37, 0xee, 0x32, 0x99, 0xdc, 0xbd,
	0x77, 0x34, 0x87, 0xdd, 0x01, 0xef, 0x93, 0x4b, 0x35, 0x3a, 0x9f, 0x70, 0x49, 0x87, 0xae, 0x72,
	0x2b, 0x5b, 0x7b, 0xd5, 0x9a, 0x3e, 0x82, 0x0d, 0x41, 0x89, 0xe4, 0xf9, 0xa2, 0xbb, 0x17, 0x7f,
	0xf6, 0xef, 0x58, 0x72, 0xa3, 0x61, 0x9f, 0x14, 0x0a, 0x9b, 0x10, 0xec, 0x42, 0xf5, 0xc5, 0x39,
	0x95, 0x99, 0xc9, 0x32, 0xc0, 0x7a, 0x18, 0xf5, 0x61, 0xf7, 0x92, 0x2b, 0x96, 0x94, 0x88, 0x06,
	0x3d, 0x5d, 0x4b, 0xc1, 0x4a, 0x3e, 0x7e, 0xf5, 0xa8, 0x12, 0x76, 0xf5, 0xad, 0xef, 0xb6, 0xb9,
	0xe2, 0xb6, 0x93, 0xef, 0x38, 0x80, 0xf6, 0xcc, 0x85, 0xf9, 0x2b, 0x58, 0x3a, 0x4b, 0x13, 0xed,
	0x41, 0x43, 0xce, 0x35, 0x76, 0xcd, 0xcc, 0x5b, 0x43, 0x17, 0xae, 0x28, 0x58, 0xea, 0x9e, 0x25,
	0x66, 0x1c, 0x7d, 0x06, 0xff, 0xc7, 0xf4, 0xa5, 0x3e, 0x6b, 0x79, 0x35, 0xad, 0x93, 0x6a, 0xf4,
	0x9b, 0x07, 0x6d, 0x2d, 0xc9, 0xf7, 0x09, 0x5e, 0x93, 0xc1, 0x17, 0xf6, 0x6a, 0xbc, 0xd0, 0x72,
	0xaf, 0x1b, 0xd2, 0xef, 0x2f, 0x49, 0xef, 0x3b, 0x8f, 0x7e, 0x4a, 0x2d, 0xc2, 0xd0, 0x81, 0x5d,
	0x72, 0x7d, 0x1d, 0x77, 0x5d, 0x07, 0x2f, 0xec, 0xe8, 0x2f, 0x0f, 0xd0, 0x70, 0x78, 0x3e, 0x26,
	0x79, 0x4e, 0x27, 0xe6, 0xcf, 0x9d, 0x10, 0xa9, 0x7f, 0x65, 0xcd, 0xc4, 0xce, 0xb9, 0x57, 0x54,
	0xb8, 0x04, 0x39, 0x1f, 0x13, 0xe5, 0x16, 0x68, 0x9c, 0x32, 0x50, 0xe7, 0x3b, 0x95, 0x59, 0x5c,
	0x0a, 0xd3, 0x1a, 0x1a, 0x5c, 0xbf, 0xe9, 0x92, 0x0b, 0x57, 0xf2, 0x2d, 0xbc, 0xb0, 0xf5, 0x6f,
	0x99, 0x65, 0x39, 0x17, 0x54, 0xf3, 0x61, 0x4e, 0x53, 0xc7, 0x2b, 0x33, 0xe8, 0x63, 0x08, 0xdc,
	0x1b, 0xaf, 0xdf, 0x73, 0x99, 0x2f, 0x27, 0xa2, 0x6f, 0x61, 0x73, 0x38, 0x5c, 0xa6, 0xbc, 0x07,
	0x0d, 0x4d, 0x9c, 0x0c, 0xbd, 0xc3, 0xda, 0x51, 0x1d, 0x5b, 0xa3, 0x02, 0xef, 0x57, 0xe1, 0xa3,
	0x1f, 0x60, 0x1f, 0xf3, 0x42, 0xd1, 0x0b, 0x2a, 0x25, 0xc9, 0xe8, 0x33, 0xa6, 0xc6, 0xf6, 0x4d,
	0x50, 0x96, 0x24, 0xee, 0xae, 0x2a, 0x2f, 0xee, 0x96, 0x47, 0xec, 0xae, 0x1e, 0xb1, 0xab, 0x45,
	0x91, 0x12, 0x45, 0xdc, 0xf1, 0xcc, 0xf8, 0xc5, 0x86, 0x79, 0x21, 0x3f, 0xfa, 0x37, 0x00, 0x00,
	0xff, 0xff, 0x20, 0x4a, 0xc1, 0xf6, 0xa3, 0x0b, 0x00, 0x00,
}
