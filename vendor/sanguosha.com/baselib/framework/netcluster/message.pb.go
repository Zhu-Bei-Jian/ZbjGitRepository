// Code generated by protoc-gen-go. DO NOT EDIT.
// source: netcluster/message.proto

/*
Package netcluster is a generated protocol buffer package.

It is generated from these files:
	netcluster/message.proto

It has these top-level messages:
	Master_PublishServerStatus
	Slave_ReportLoadLevel
	Master_PublishLoadLevel
	Slave_ReqShiftFixMaster
	Slave_RepShiftFixMaster
	Slave_ReqVerifyConfigFile
	Master_ReqVerifyConfigFile
	Slave_RepVerifyConfigFile
	Slave_UptConfigMd5
	SS_CmdPrepareCloseServer
	SM_ReqPrepareCloseMyself
*/
package netcluster

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Master_PublishServerStatus struct {
	ServerId    uint32 `protobuf:"varint,1,opt,name=ServerId" json:"ServerId,omitempty"`
	ServerType  uint32 `protobuf:"varint,2,opt,name=ServerType" json:"ServerType,omitempty"`
	IsConnected bool   `protobuf:"varint,3,opt,name=IsConnected" json:"IsConnected,omitempty"`
	IsWorking   bool   `protobuf:"varint,4,opt,name=IsWorking" json:"IsWorking,omitempty"`
}

func (m *Master_PublishServerStatus) Reset()                    { *m = Master_PublishServerStatus{} }
func (m *Master_PublishServerStatus) String() string            { return proto.CompactTextString(m) }
func (*Master_PublishServerStatus) ProtoMessage()               {}
func (*Master_PublishServerStatus) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Master_PublishServerStatus) GetServerId() uint32 {
	if m != nil {
		return m.ServerId
	}
	return 0
}

func (m *Master_PublishServerStatus) GetServerType() uint32 {
	if m != nil {
		return m.ServerType
	}
	return 0
}

func (m *Master_PublishServerStatus) GetIsConnected() bool {
	if m != nil {
		return m.IsConnected
	}
	return false
}

func (m *Master_PublishServerStatus) GetIsWorking() bool {
	if m != nil {
		return m.IsWorking
	}
	return false
}

type Slave_ReportLoadLevel struct {
	IsFix     bool   `protobuf:"varint,1,opt,name=isFix" json:"isFix,omitempty"`
	AServerID uint32 `protobuf:"varint,2,opt,name=AServerID" json:"AServerID,omitempty"`
	BServerID uint32 `protobuf:"varint,3,opt,name=BServerID" json:"BServerID,omitempty"`
}

func (m *Slave_ReportLoadLevel) Reset()                    { *m = Slave_ReportLoadLevel{} }
func (m *Slave_ReportLoadLevel) String() string            { return proto.CompactTextString(m) }
func (*Slave_ReportLoadLevel) ProtoMessage()               {}
func (*Slave_ReportLoadLevel) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Slave_ReportLoadLevel) GetIsFix() bool {
	if m != nil {
		return m.IsFix
	}
	return false
}

func (m *Slave_ReportLoadLevel) GetAServerID() uint32 {
	if m != nil {
		return m.AServerID
	}
	return 0
}

func (m *Slave_ReportLoadLevel) GetBServerID() uint32 {
	if m != nil {
		return m.BServerID
	}
	return 0
}

type Master_PublishLoadLevel struct {
	LoadLevel uint32 `protobuf:"varint,1,opt,name=LoadLevel" json:"LoadLevel,omitempty"`
}

func (m *Master_PublishLoadLevel) Reset()                    { *m = Master_PublishLoadLevel{} }
func (m *Master_PublishLoadLevel) String() string            { return proto.CompactTextString(m) }
func (*Master_PublishLoadLevel) ProtoMessage()               {}
func (*Master_PublishLoadLevel) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Master_PublishLoadLevel) GetLoadLevel() uint32 {
	if m != nil {
		return m.LoadLevel
	}
	return 0
}

type Slave_ReqShiftFixMaster struct {
	MasterID  uint32 `protobuf:"varint,1,opt,name=MasterID" json:"MasterID,omitempty"`
	AServerID uint32 `protobuf:"varint,2,opt,name=AServerID" json:"AServerID,omitempty"`
	BServerID uint32 `protobuf:"varint,3,opt,name=BServerID" json:"BServerID,omitempty"`
}

func (m *Slave_ReqShiftFixMaster) Reset()                    { *m = Slave_ReqShiftFixMaster{} }
func (m *Slave_ReqShiftFixMaster) String() string            { return proto.CompactTextString(m) }
func (*Slave_ReqShiftFixMaster) ProtoMessage()               {}
func (*Slave_ReqShiftFixMaster) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Slave_ReqShiftFixMaster) GetMasterID() uint32 {
	if m != nil {
		return m.MasterID
	}
	return 0
}

func (m *Slave_ReqShiftFixMaster) GetAServerID() uint32 {
	if m != nil {
		return m.AServerID
	}
	return 0
}

func (m *Slave_ReqShiftFixMaster) GetBServerID() uint32 {
	if m != nil {
		return m.BServerID
	}
	return 0
}

type Slave_RepShiftFixMaster struct {
	MasterID  uint32 `protobuf:"varint,1,opt,name=MasterID" json:"MasterID,omitempty"`
	AServerID uint32 `protobuf:"varint,2,opt,name=AServerID" json:"AServerID,omitempty"`
	BServerID uint32 `protobuf:"varint,3,opt,name=BServerID" json:"BServerID,omitempty"`
}

func (m *Slave_RepShiftFixMaster) Reset()                    { *m = Slave_RepShiftFixMaster{} }
func (m *Slave_RepShiftFixMaster) String() string            { return proto.CompactTextString(m) }
func (*Slave_RepShiftFixMaster) ProtoMessage()               {}
func (*Slave_RepShiftFixMaster) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Slave_RepShiftFixMaster) GetMasterID() uint32 {
	if m != nil {
		return m.MasterID
	}
	return 0
}

func (m *Slave_RepShiftFixMaster) GetAServerID() uint32 {
	if m != nil {
		return m.AServerID
	}
	return 0
}

func (m *Slave_RepShiftFixMaster) GetBServerID() uint32 {
	if m != nil {
		return m.BServerID
	}
	return 0
}

type Slave_ReqVerifyConfigFile struct {
	FileMd5 string `protobuf:"bytes,1,opt,name=FileMd5" json:"FileMd5,omitempty"`
}

func (m *Slave_ReqVerifyConfigFile) Reset()                    { *m = Slave_ReqVerifyConfigFile{} }
func (m *Slave_ReqVerifyConfigFile) String() string            { return proto.CompactTextString(m) }
func (*Slave_ReqVerifyConfigFile) ProtoMessage()               {}
func (*Slave_ReqVerifyConfigFile) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Slave_ReqVerifyConfigFile) GetFileMd5() string {
	if m != nil {
		return m.FileMd5
	}
	return ""
}

type Master_ReqVerifyConfigFile struct {
	FileMd5       string `protobuf:"bytes,1,opt,name=FileMd5" json:"FileMd5,omitempty"`
	Time          int64  `protobuf:"varint,2,opt,name=Time" json:"Time,omitempty"`
	ReqServerId   uint32 `protobuf:"varint,3,opt,name=ReqServerId" json:"ReqServerId,omitempty"`
	ReqServerType uint32 `protobuf:"varint,4,opt,name=ReqServerType" json:"ReqServerType,omitempty"`
}

func (m *Master_ReqVerifyConfigFile) Reset()                    { *m = Master_ReqVerifyConfigFile{} }
func (m *Master_ReqVerifyConfigFile) String() string            { return proto.CompactTextString(m) }
func (*Master_ReqVerifyConfigFile) ProtoMessage()               {}
func (*Master_ReqVerifyConfigFile) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *Master_ReqVerifyConfigFile) GetFileMd5() string {
	if m != nil {
		return m.FileMd5
	}
	return ""
}

func (m *Master_ReqVerifyConfigFile) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *Master_ReqVerifyConfigFile) GetReqServerId() uint32 {
	if m != nil {
		return m.ReqServerId
	}
	return 0
}

func (m *Master_ReqVerifyConfigFile) GetReqServerType() uint32 {
	if m != nil {
		return m.ReqServerType
	}
	return 0
}

type Slave_RepVerifyConfigFile struct {
	IsSucc        bool   `protobuf:"varint,1,opt,name=IsSucc" json:"IsSucc,omitempty"`
	Time          int64  `protobuf:"varint,2,opt,name=Time" json:"Time,omitempty"`
	ReqServerId   uint32 `protobuf:"varint,3,opt,name=ReqServerId" json:"ReqServerId,omitempty"`
	ReqServerType uint32 `protobuf:"varint,4,opt,name=ReqServerType" json:"ReqServerType,omitempty"`
}

func (m *Slave_RepVerifyConfigFile) Reset()                    { *m = Slave_RepVerifyConfigFile{} }
func (m *Slave_RepVerifyConfigFile) String() string            { return proto.CompactTextString(m) }
func (*Slave_RepVerifyConfigFile) ProtoMessage()               {}
func (*Slave_RepVerifyConfigFile) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *Slave_RepVerifyConfigFile) GetIsSucc() bool {
	if m != nil {
		return m.IsSucc
	}
	return false
}

func (m *Slave_RepVerifyConfigFile) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *Slave_RepVerifyConfigFile) GetReqServerId() uint32 {
	if m != nil {
		return m.ReqServerId
	}
	return 0
}

func (m *Slave_RepVerifyConfigFile) GetReqServerType() uint32 {
	if m != nil {
		return m.ReqServerType
	}
	return 0
}

type Slave_UptConfigMd5 struct {
	FileMd5 string `protobuf:"bytes,1,opt,name=FileMd5" json:"FileMd5,omitempty"`
}

func (m *Slave_UptConfigMd5) Reset()                    { *m = Slave_UptConfigMd5{} }
func (m *Slave_UptConfigMd5) String() string            { return proto.CompactTextString(m) }
func (*Slave_UptConfigMd5) ProtoMessage()               {}
func (*Slave_UptConfigMd5) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *Slave_UptConfigMd5) GetFileMd5() string {
	if m != nil {
		return m.FileMd5
	}
	return ""
}

// gm命令slave准备停止服务(slave->slave)
type SS_CmdPrepareCloseServer struct {
}

func (m *SS_CmdPrepareCloseServer) Reset()                    { *m = SS_CmdPrepareCloseServer{} }
func (m *SS_CmdPrepareCloseServer) String() string            { return proto.CompactTextString(m) }
func (*SS_CmdPrepareCloseServer) ProtoMessage()               {}
func (*SS_CmdPrepareCloseServer) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

// 我要准备关闭了 (slave->master)
type SM_ReqPrepareCloseMyself struct {
}

func (m *SM_ReqPrepareCloseMyself) Reset()                    { *m = SM_ReqPrepareCloseMyself{} }
func (m *SM_ReqPrepareCloseMyself) String() string            { return proto.CompactTextString(m) }
func (*SM_ReqPrepareCloseMyself) ProtoMessage()               {}
func (*SM_ReqPrepareCloseMyself) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func init() {
	proto.RegisterType((*Master_PublishServerStatus)(nil), "netcluster.Master_PublishServerStatus")
	proto.RegisterType((*Slave_ReportLoadLevel)(nil), "netcluster.Slave_ReportLoadLevel")
	proto.RegisterType((*Master_PublishLoadLevel)(nil), "netcluster.Master_PublishLoadLevel")
	proto.RegisterType((*Slave_ReqShiftFixMaster)(nil), "netcluster.Slave_ReqShiftFixMaster")
	proto.RegisterType((*Slave_RepShiftFixMaster)(nil), "netcluster.Slave_RepShiftFixMaster")
	proto.RegisterType((*Slave_ReqVerifyConfigFile)(nil), "netcluster.Slave_ReqVerifyConfigFile")
	proto.RegisterType((*Master_ReqVerifyConfigFile)(nil), "netcluster.Master_ReqVerifyConfigFile")
	proto.RegisterType((*Slave_RepVerifyConfigFile)(nil), "netcluster.Slave_RepVerifyConfigFile")
	proto.RegisterType((*Slave_UptConfigMd5)(nil), "netcluster.Slave_UptConfigMd5")
	proto.RegisterType((*SS_CmdPrepareCloseServer)(nil), "netcluster.SS_CmdPrepareCloseServer")
	proto.RegisterType((*SM_ReqPrepareCloseMyself)(nil), "netcluster.SM_ReqPrepareCloseMyself")
}

func init() { proto.RegisterFile("netcluster/message.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 409 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x53, 0x4d, 0xab, 0xd3, 0x40,
	0x14, 0x25, 0xb6, 0x3e, 0xdb, 0x2b, 0x6f, 0x33, 0xa8, 0x2f, 0x96, 0x22, 0x25, 0xb8, 0xe8, 0xaa,
	0x2e, 0xa4, 0xb8, 0xd6, 0x94, 0x42, 0xa0, 0x81, 0x92, 0x54, 0x5d, 0x96, 0x34, 0xb9, 0x69, 0x07,
	0xd3, 0x4c, 0x3a, 0x33, 0x29, 0xed, 0xaf, 0x10, 0x5c, 0xf9, 0x73, 0x65, 0x66, 0xf2, 0x55, 0xc4,
	0x85, 0x88, 0x6f, 0x95, 0x7b, 0xce, 0x49, 0xe6, 0x9e, 0x39, 0x9c, 0x80, 0x9d, 0xa3, 0x8c, 0xb3,
	0x52, 0x48, 0xe4, 0xef, 0x8e, 0x28, 0x44, 0xb4, 0xc7, 0x59, 0xc1, 0x99, 0x64, 0x04, 0x5a, 0xc5,
	0xf9, 0x69, 0xc1, 0xc8, 0x8f, 0xd4, 0xb8, 0x5d, 0x97, 0xbb, 0x8c, 0x8a, 0x43, 0x88, 0xfc, 0x8c,
	0x3c, 0x94, 0x91, 0x2c, 0x05, 0x19, 0xc1, 0xc0, 0x60, 0x2f, 0xb1, 0xad, 0x89, 0x35, 0xbd, 0x0f,
	0x1a, 0x4c, 0xde, 0x00, 0x98, 0x79, 0x73, 0x2d, 0xd0, 0x7e, 0xa2, 0xd5, 0x0e, 0x43, 0x26, 0xf0,
	0xdc, 0x13, 0x2e, 0xcb, 0x73, 0x8c, 0x25, 0x26, 0x76, 0x6f, 0x62, 0x4d, 0x07, 0x41, 0x97, 0x22,
	0x63, 0x18, 0x7a, 0xe2, 0x2b, 0xe3, 0xdf, 0x68, 0xbe, 0xb7, 0xfb, 0x5a, 0x6f, 0x09, 0x87, 0xc2,
	0xcb, 0x30, 0x8b, 0xce, 0xb8, 0x0d, 0xb0, 0x60, 0x5c, 0xae, 0x58, 0x94, 0xac, 0xf0, 0x8c, 0x19,
	0x79, 0x01, 0x4f, 0xa9, 0x58, 0xd2, 0x8b, 0x76, 0x34, 0x08, 0x0c, 0x50, 0x87, 0x7d, 0xac, 0xbc,
	0x2d, 0x2a, 0x37, 0x2d, 0xa1, 0xd4, 0x4f, 0x8d, 0xda, 0x33, 0x6a, 0x43, 0x38, 0x1f, 0xe0, 0xe1,
	0x36, 0x84, 0x76, 0xd9, 0x18, 0x86, 0x0d, 0xa8, 0x22, 0x68, 0x09, 0xe7, 0x04, 0x0f, 0xb5, 0xc7,
	0x53, 0x78, 0xa0, 0xa9, 0x5c, 0xd2, 0x8b, 0x39, 0x49, 0x45, 0x67, 0x26, 0x6f, 0x51, 0x47, 0x57,
	0xe3, 0x7f, 0xf2, 0xda, 0x59, 0x59, 0x3c, 0xd2, 0xca, 0x39, 0xbc, 0x6e, 0x6e, 0xf9, 0x05, 0x39,
	0x4d, 0xaf, 0x2e, 0xcb, 0x53, 0xba, 0x5f, 0xd2, 0x0c, 0x89, 0x0d, 0xcf, 0xd4, 0xd3, 0x4f, 0xe6,
	0x7a, 0xe7, 0x30, 0xa8, 0xa1, 0xf3, 0xa3, 0xed, 0xd6, 0x5f, 0x7d, 0x48, 0x08, 0xf4, 0x37, 0xf4,
	0x68, 0x3a, 0xd5, 0x0b, 0xf4, 0xac, 0xda, 0xa4, 0x32, 0xae, 0xcb, 0x68, 0x3c, 0x76, 0x29, 0xf2,
	0x16, 0xee, 0x1b, 0xa8, 0x2b, 0xd9, 0xd7, 0xef, 0xdc, 0x92, 0xce, 0x77, 0xab, 0xbd, 0x4c, 0xf1,
	0x9b, 0xa7, 0x57, 0x70, 0xe7, 0x89, 0xb0, 0x8c, 0xe3, 0xaa, 0x5b, 0x15, 0xfa, 0xaf, 0x8e, 0x66,
	0x40, 0x8c, 0xa1, 0xcf, 0x85, 0x34, 0x56, 0x54, 0x06, 0x7f, 0x8e, 0x75, 0x04, 0x76, 0x18, 0x6e,
	0xdd, 0x63, 0xb2, 0xe6, 0x58, 0x44, 0x1c, 0xdd, 0x8c, 0x09, 0x34, 0xe7, 0x69, 0xcd, 0x57, 0x69,
	0x77, 0x35, 0xff, 0x2a, 0x30, 0x4b, 0x77, 0x77, 0xfa, 0xef, 0x7f, 0xff, 0x2b, 0x00, 0x00, 0xff,
	0xff, 0x7a, 0xc1, 0x6f, 0x4b, 0x19, 0x04, 0x00, 0x00,
}
