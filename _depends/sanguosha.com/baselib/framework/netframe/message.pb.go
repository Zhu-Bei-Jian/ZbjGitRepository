// Code generated by protoc-gen-go. DO NOT EDIT.
// source: netframe/message.proto

/*
Package netframe is a generated protocol buffer package.

It is generated from these files:
	netframe/message.proto

It has these top-level messages:
	Server_Extend
	Server_ReqHeartBeat
	Server_RespHeartBeat
	Server_ReqRegister
	Server_RespRegister
	Server_ReportUnRegister
	Client_ReqHeartBeat
	Client_RespHeartBeat
*/
package netframe

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// extend message
type Server_Extend struct {
	ServerId  uint32 `protobuf:"varint,1,opt,name=ServerId" json:"ServerId,omitempty"`
	SessionId uint64 `protobuf:"varint,2,opt,name=SessionId" json:"SessionId,omitempty"`
	SeqId     int64  `protobuf:"varint,3,opt,name=SeqId" json:"SeqId,omitempty"`
	UserId    uint64 `protobuf:"varint,4,opt,name=UserId" json:"UserId,omitempty"`
	ExtParam  int64  `protobuf:"varint,5,opt,name=ExtParam" json:"ExtParam,omitempty"`
}

func (m *Server_Extend) Reset()                    { *m = Server_Extend{} }
func (m *Server_Extend) String() string            { return proto.CompactTextString(m) }
func (*Server_Extend) ProtoMessage()               {}
func (*Server_Extend) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Server_Extend) GetServerId() uint32 {
	if m != nil {
		return m.ServerId
	}
	return 0
}

func (m *Server_Extend) GetSessionId() uint64 {
	if m != nil {
		return m.SessionId
	}
	return 0
}

func (m *Server_Extend) GetSeqId() int64 {
	if m != nil {
		return m.SeqId
	}
	return 0
}

func (m *Server_Extend) GetUserId() uint64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *Server_Extend) GetExtParam() int64 {
	if m != nil {
		return m.ExtParam
	}
	return 0
}

// heart
type Server_ReqHeartBeat struct {
	TimeStamp int64 `protobuf:"varint,1,opt,name=TimeStamp" json:"TimeStamp,omitempty"`
}

func (m *Server_ReqHeartBeat) Reset()                    { *m = Server_ReqHeartBeat{} }
func (m *Server_ReqHeartBeat) String() string            { return proto.CompactTextString(m) }
func (*Server_ReqHeartBeat) ProtoMessage()               {}
func (*Server_ReqHeartBeat) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Server_ReqHeartBeat) GetTimeStamp() int64 {
	if m != nil {
		return m.TimeStamp
	}
	return 0
}

type Server_RespHeartBeat struct {
	TimeStamp int64 `protobuf:"varint,1,opt,name=TimeStamp" json:"TimeStamp,omitempty"`
}

func (m *Server_RespHeartBeat) Reset()                    { *m = Server_RespHeartBeat{} }
func (m *Server_RespHeartBeat) String() string            { return proto.CompactTextString(m) }
func (*Server_RespHeartBeat) ProtoMessage()               {}
func (*Server_RespHeartBeat) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Server_RespHeartBeat) GetTimeStamp() int64 {
	if m != nil {
		return m.TimeStamp
	}
	return 0
}

// client->server 注册
type Server_ReqRegister struct {
	ClientType      uint32 `protobuf:"varint,1,opt,name=ClientType" json:"ClientType,omitempty"`
	ClientId        uint32 `protobuf:"varint,2,opt,name=ClientId" json:"ClientId,omitempty"`
	ClientStartTime int64  `protobuf:"varint,3,opt,name=ClientStartTime" json:"ClientStartTime,omitempty"`
}

func (m *Server_ReqRegister) Reset()                    { *m = Server_ReqRegister{} }
func (m *Server_ReqRegister) String() string            { return proto.CompactTextString(m) }
func (*Server_ReqRegister) ProtoMessage()               {}
func (*Server_ReqRegister) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Server_ReqRegister) GetClientType() uint32 {
	if m != nil {
		return m.ClientType
	}
	return 0
}

func (m *Server_ReqRegister) GetClientId() uint32 {
	if m != nil {
		return m.ClientId
	}
	return 0
}

func (m *Server_ReqRegister) GetClientStartTime() int64 {
	if m != nil {
		return m.ClientStartTime
	}
	return 0
}

// server->client
type Server_RespRegister struct {
	ServerType      uint32 `protobuf:"varint,1,opt,name=ServerType" json:"ServerType,omitempty"`
	ServerId        uint32 `protobuf:"varint,2,opt,name=ServerId" json:"ServerId,omitempty"`
	ServerStartTime int64  `protobuf:"varint,3,opt,name=ServerStartTime" json:"ServerStartTime,omitempty"`
}

func (m *Server_RespRegister) Reset()                    { *m = Server_RespRegister{} }
func (m *Server_RespRegister) String() string            { return proto.CompactTextString(m) }
func (*Server_RespRegister) ProtoMessage()               {}
func (*Server_RespRegister) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Server_RespRegister) GetServerType() uint32 {
	if m != nil {
		return m.ServerType
	}
	return 0
}

func (m *Server_RespRegister) GetServerId() uint32 {
	if m != nil {
		return m.ServerId
	}
	return 0
}

func (m *Server_RespRegister) GetServerStartTime() int64 {
	if m != nil {
		return m.ServerStartTime
	}
	return 0
}

// client->server 取消注册
type Server_ReportUnRegister struct {
	ServerStartTime int64 `protobuf:"varint,1,opt,name=ServerStartTime" json:"ServerStartTime,omitempty"`
}

func (m *Server_ReportUnRegister) Reset()                    { *m = Server_ReportUnRegister{} }
func (m *Server_ReportUnRegister) String() string            { return proto.CompactTextString(m) }
func (*Server_ReportUnRegister) ProtoMessage()               {}
func (*Server_ReportUnRegister) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Server_ReportUnRegister) GetServerStartTime() int64 {
	if m != nil {
		return m.ServerStartTime
	}
	return 0
}

type Client_ReqHeartBeat struct {
	TimeStamp int64 `protobuf:"varint,1,opt,name=timeStamp" json:"timeStamp,omitempty"`
}

func (m *Client_ReqHeartBeat) Reset()                    { *m = Client_ReqHeartBeat{} }
func (m *Client_ReqHeartBeat) String() string            { return proto.CompactTextString(m) }
func (*Client_ReqHeartBeat) ProtoMessage()               {}
func (*Client_ReqHeartBeat) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *Client_ReqHeartBeat) GetTimeStamp() int64 {
	if m != nil {
		return m.TimeStamp
	}
	return 0
}

type Client_RespHeartBeat struct {
	TimeStamp int64 `protobuf:"varint,1,opt,name=timeStamp" json:"timeStamp,omitempty"`
}

func (m *Client_RespHeartBeat) Reset()                    { *m = Client_RespHeartBeat{} }
func (m *Client_RespHeartBeat) String() string            { return proto.CompactTextString(m) }
func (*Client_RespHeartBeat) ProtoMessage()               {}
func (*Client_RespHeartBeat) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *Client_RespHeartBeat) GetTimeStamp() int64 {
	if m != nil {
		return m.TimeStamp
	}
	return 0
}

func init() {
	proto.RegisterType((*Server_Extend)(nil), "netframe.Server_Extend")
	proto.RegisterType((*Server_ReqHeartBeat)(nil), "netframe.Server_ReqHeartBeat")
	proto.RegisterType((*Server_RespHeartBeat)(nil), "netframe.Server_RespHeartBeat")
	proto.RegisterType((*Server_ReqRegister)(nil), "netframe.Server_ReqRegister")
	proto.RegisterType((*Server_RespRegister)(nil), "netframe.Server_RespRegister")
	proto.RegisterType((*Server_ReportUnRegister)(nil), "netframe.Server_ReportUnRegister")
	proto.RegisterType((*Client_ReqHeartBeat)(nil), "netframe.Client_ReqHeartBeat")
	proto.RegisterType((*Client_RespHeartBeat)(nil), "netframe.Client_RespHeartBeat")
}

func init() { proto.RegisterFile("netframe/message.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 319 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0xcf, 0x4a, 0xf3, 0x40,
	0x14, 0xc5, 0x99, 0xfe, 0xa3, 0xdf, 0x85, 0x52, 0x98, 0x96, 0x7e, 0x41, 0x44, 0x42, 0x56, 0x59,
	0xe9, 0x22, 0x3e, 0x81, 0xa5, 0x60, 0x76, 0x32, 0x69, 0xd7, 0x32, 0x92, 0x6b, 0x09, 0x98, 0x64,
	0x3a, 0x73, 0x91, 0xaa, 0x8f, 0xe1, 0x0b, 0x4b, 0x32, 0x71, 0x12, 0xd3, 0x0a, 0xee, 0x72, 0x7e,
	0x70, 0xee, 0xb9, 0x73, 0x4f, 0x60, 0x55, 0x20, 0x3d, 0x6b, 0x99, 0xe3, 0x4d, 0x8e, 0xc6, 0xc8,
	0x3d, 0x5e, 0x2b, 0x5d, 0x52, 0xc9, 0xa7, 0xdf, 0x3c, 0xf8, 0x64, 0x30, 0x4b, 0x50, 0xbf, 0xa2,
	0x7e, 0xdc, 0x1c, 0x09, 0x8b, 0x94, 0x5f, 0xc0, 0xd4, 0x82, 0x38, 0xf5, 0x98, 0xcf, 0xc2, 0x99,
	0x70, 0x9a, 0x5f, 0xc2, 0xbf, 0x04, 0x8d, 0xc9, 0xca, 0x22, 0x4e, 0xbd, 0x81, 0xcf, 0xc2, 0x91,
	0x68, 0x01, 0x5f, 0xc2, 0x38, 0xc1, 0x43, 0x9c, 0x7a, 0x43, 0x9f, 0x85, 0x43, 0x61, 0x05, 0x5f,
	0xc1, 0x64, 0x67, 0xea, 0x69, 0xa3, 0xda, 0xd0, 0xa8, 0x2a, 0x67, 0x73, 0xa4, 0x07, 0xa9, 0x65,
	0xee, 0x8d, 0x6b, 0x83, 0xd3, 0x41, 0x04, 0x8b, 0x66, 0x29, 0x81, 0x87, 0x7b, 0x94, 0x9a, 0xee,
	0x50, 0x52, 0x15, 0xbf, 0xcd, 0x72, 0x4c, 0x48, 0xe6, 0xaa, 0xde, 0x6d, 0x28, 0x5a, 0x10, 0xdc,
	0xc2, 0xd2, 0x99, 0x8c, 0xfa, 0xab, 0xeb, 0x1d, 0x78, 0x1b, 0x25, 0x70, 0x9f, 0x19, 0x42, 0xcd,
	0xaf, 0x00, 0xd6, 0x2f, 0x19, 0x16, 0xb4, 0x7d, 0x53, 0xd8, 0x9c, 0xa1, 0x43, 0xaa, 0xe5, 0xad,
	0x6a, 0xee, 0x30, 0x13, 0x4e, 0xf3, 0x10, 0xe6, 0xf6, 0x3b, 0x21, 0xa9, 0xa9, 0x4a, 0x6a, 0x0e,
	0xd2, 0xc7, 0xc1, 0x47, 0xe7, 0x99, 0x46, 0x75, 0xc3, 0x2d, 0xee, 0x86, 0xb7, 0xe4, 0x47, 0x43,
	0x83, 0x5e, 0x43, 0x21, 0xcc, 0xed, 0xf7, 0x49, 0x78, 0x0f, 0x07, 0x6b, 0xf8, 0xef, 0xc2, 0x55,
	0xa9, 0x69, 0x57, 0xb8, 0x05, 0xce, 0x0c, 0x61, 0xe7, 0x87, 0x44, 0xb0, 0xb0, 0x8f, 0x3a, 0x29,
	0x8a, 0xfa, 0x27, 0xa7, 0x6e, 0x51, 0xce, 0xd4, 0x2b, 0xea, 0x77, 0xd7, 0xd3, 0xa4, 0xfe, 0x75,
	0xa3, 0xaf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x56, 0x97, 0x7d, 0x86, 0xd4, 0x02, 0x00, 0x00,
}
