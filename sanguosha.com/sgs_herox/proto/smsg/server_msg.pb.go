// Code generated by protoc-gen-go. DO NOT EDIT.
// source: smsg/server_msg.proto

package smsg

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import gameconf "sanguosha.com/sgs_herox/proto/gameconf"
import gamedef "sanguosha.com/sgs_herox/proto/def"
import db "sanguosha.com/sgs_herox/proto/db"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ReqUserData_Type int32

const (
	ReqUserData_All  ReqUserData_Type = 0
	ReqUserData_Info ReqUserData_Type = 1
)

var ReqUserData_Type_name = map[int32]string{
	0: "All",
	1: "Info",
}
var ReqUserData_Type_value = map[string]int32{
	"All":  0,
	"Info": 1,
}

func (x ReqUserData_Type) String() string {
	return proto.EnumName(ReqUserData_Type_name, int32(x))
}
func (ReqUserData_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor3, []int{7, 0} }

type RespUserData_ErrCode int32

const (
	RespUserData_ErrUnknow RespUserData_ErrCode = 0
)

var RespUserData_ErrCode_name = map[int32]string{
	0: "ErrUnknow",
}
var RespUserData_ErrCode_value = map[string]int32{
	"ErrUnknow": 0,
}

func (x RespUserData_ErrCode) String() string {
	return proto.EnumName(RespUserData_ErrCode_name, int32(x))
}
func (RespUserData_ErrCode) EnumDescriptor() ([]byte, []int) { return fileDescriptor3, []int{9, 0} }

type PuAcRespUserSummary_ErrCode int32

const (
	PuAcRespUserSummary_Succ      PuAcRespUserSummary_ErrCode = 0
	PuAcRespUserSummary_ErrSystem PuAcRespUserSummary_ErrCode = 1
)

var PuAcRespUserSummary_ErrCode_name = map[int32]string{
	0: "Succ",
	1: "ErrSystem",
}
var PuAcRespUserSummary_ErrCode_value = map[string]int32{
	"Succ":      0,
	"ErrSystem": 1,
}

func (x PuAcRespUserSummary_ErrCode) String() string {
	return proto.EnumName(PuAcRespUserSummary_ErrCode_name, int32(x))
}
func (PuAcRespUserSummary_ErrCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor3, []int{11, 0}
}

type PuAcReqQueryUserID_QueryType int32

const (
	PuAcReqQueryUserID_Invalid      PuAcReqQueryUserID_QueryType = 0
	PuAcReqQueryUserID_ByNickName   PuAcReqQueryUserID_QueryType = 1
	PuAcReqQueryUserID_ByAccount    PuAcReqQueryUserID_QueryType = 2
	PuAcReqQueryUserID_LikeNickName PuAcReqQueryUserID_QueryType = 3
	PuAcReqQueryUserID_ByUnionId    PuAcReqQueryUserID_QueryType = 4
)

var PuAcReqQueryUserID_QueryType_name = map[int32]string{
	0: "Invalid",
	1: "ByNickName",
	2: "ByAccount",
	3: "LikeNickName",
	4: "ByUnionId",
}
var PuAcReqQueryUserID_QueryType_value = map[string]int32{
	"Invalid":      0,
	"ByNickName":   1,
	"ByAccount":    2,
	"LikeNickName": 3,
	"ByUnionId":    4,
}

func (x PuAcReqQueryUserID_QueryType) String() string {
	return proto.EnumName(PuAcReqQueryUserID_QueryType_name, int32(x))
}
func (PuAcReqQueryUserID_QueryType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor3, []int{12, 0}
}

type PuAcRespQueryUserID_ErrCode int32

const (
	PuAcRespQueryUserID_Succ         PuAcRespQueryUserID_ErrCode = 0
	PuAcRespQueryUserID_ErrSytem     PuAcRespQueryUserID_ErrCode = 1
	PuAcRespQueryUserID_ErrQueryType PuAcRespQueryUserID_ErrCode = 2
)

var PuAcRespQueryUserID_ErrCode_name = map[int32]string{
	0: "Succ",
	1: "ErrSytem",
	2: "ErrQueryType",
}
var PuAcRespQueryUserID_ErrCode_value = map[string]int32{
	"Succ":         0,
	"ErrSytem":     1,
	"ErrQueryType": 2,
}

func (x PuAcRespQueryUserID_ErrCode) String() string {
	return proto.EnumName(PuAcRespQueryUserID_ErrCode_name, int32(x))
}
func (PuAcRespQueryUserID_ErrCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor3, []int{13, 0}
}

type RespMatch_ErrCode int32

const (
	RespMatch_Invalid      RespMatch_ErrCode = 0
	RespMatch_Gaming       RespMatch_ErrCode = 1
	RespMatch_Matching     RespMatch_ErrCode = 2
	RespMatch_JoinMatchErr RespMatch_ErrCode = 3
	RespMatch_CreateGaming RespMatch_ErrCode = 4
	RespMatch_NoGameServer RespMatch_ErrCode = 5
	RespMatch_LoadFull     RespMatch_ErrCode = 6
)

var RespMatch_ErrCode_name = map[int32]string{
	0: "Invalid",
	1: "Gaming",
	2: "Matching",
	3: "JoinMatchErr",
	4: "CreateGaming",
	5: "NoGameServer",
	6: "LoadFull",
}
var RespMatch_ErrCode_value = map[string]int32{
	"Invalid":      0,
	"Gaming":       1,
	"Matching":     2,
	"JoinMatchErr": 3,
	"CreateGaming": 4,
	"NoGameServer": 5,
	"LoadFull":     6,
}

func (x RespMatch_ErrCode) String() string {
	return proto.EnumName(RespMatch_ErrCode_name, int32(x))
}
func (RespMatch_ErrCode) EnumDescriptor() ([]byte, []int) { return fileDescriptor3, []int{18, 0} }

type LoGaRespNewPVPGame_ErrCode int32

const (
	LoGaRespNewPVPGame_None                LoGaRespNewPVPGame_ErrCode = 0
	LoGaRespNewPVPGame_ErrCreateGameFailed LoGaRespNewPVPGame_ErrCode = 1
)

var LoGaRespNewPVPGame_ErrCode_name = map[int32]string{
	0: "None",
	1: "ErrCreateGameFailed",
}
var LoGaRespNewPVPGame_ErrCode_value = map[string]int32{
	"None":                0,
	"ErrCreateGameFailed": 1,
}

func (x LoGaRespNewPVPGame_ErrCode) String() string {
	return proto.EnumName(LoGaRespNewPVPGame_ErrCode_name, int32(x))
}
func (LoGaRespNewPVPGame_ErrCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor3, []int{21, 0}
}

type LoGaRespLookGame_ErrCode int32

const (
	LoGaRespLookGame_None              LoGaRespLookGame_ErrCode = 0
	LoGaRespLookGame_ErrLookGameFailed LoGaRespLookGame_ErrCode = 1
)

var LoGaRespLookGame_ErrCode_name = map[int32]string{
	0: "None",
	1: "ErrLookGameFailed",
}
var LoGaRespLookGame_ErrCode_value = map[string]int32{
	"None":              0,
	"ErrLookGameFailed": 1,
}

func (x LoGaRespLookGame_ErrCode) String() string {
	return proto.EnumName(LoGaRespLookGame_ErrCode_name, int32(x))
}
func (LoGaRespLookGame_ErrCode) EnumDescriptor() ([]byte, []int) { return fileDescriptor3, []int{23, 0} }

type LoGaRespUserQuit_ErrCode int32

const (
	LoGaRespUserQuit_None          LoGaRespUserQuit_ErrCode = 0
	LoGaRespUserQuit_ErrQuitFailed LoGaRespUserQuit_ErrCode = 1
)

var LoGaRespUserQuit_ErrCode_name = map[int32]string{
	0: "None",
	1: "ErrQuitFailed",
}
var LoGaRespUserQuit_ErrCode_value = map[string]int32{
	"None":          0,
	"ErrQuitFailed": 1,
}

func (x LoGaRespUserQuit_ErrCode) String() string {
	return proto.EnumName(LoGaRespUserQuit_ErrCode_name, int32(x))
}
func (LoGaRespUserQuit_ErrCode) EnumDescriptor() ([]byte, []int) { return fileDescriptor3, []int{25, 0} }

type NtfGameStateChange_State int32

const (
	NtfGameStateChange_Init  NtfGameStateChange_State = 0
	NtfGameStateChange_Start NtfGameStateChange_State = 1
	NtfGameStateChange_End   NtfGameStateChange_State = 2
)

var NtfGameStateChange_State_name = map[int32]string{
	0: "Init",
	1: "Start",
	2: "End",
}
var NtfGameStateChange_State_value = map[string]int32{
	"Init":  0,
	"Start": 1,
	"End":   2,
}

func (x NtfGameStateChange_State) String() string {
	return proto.EnumName(NtfGameStateChange_State_name, int32(x))
}
func (NtfGameStateChange_State) EnumDescriptor() ([]byte, []int) { return fileDescriptor3, []int{29, 0} }

type SyncGMCommand_CommandType int32

const (
	SyncGMCommand_CloseChat SyncGMCommand_CommandType = 0
	SyncGMCommand_OpenChat  SyncGMCommand_CommandType = 1
	SyncGMCommand_Common    SyncGMCommand_CommandType = 99
)

var SyncGMCommand_CommandType_name = map[int32]string{
	0:  "CloseChat",
	1:  "OpenChat",
	99: "Common",
}
var SyncGMCommand_CommandType_value = map[string]int32{
	"CloseChat": 0,
	"OpenChat":  1,
	"Common":    99,
}

func (x SyncGMCommand_CommandType) String() string {
	return proto.EnumName(SyncGMCommand_CommandType_name, int32(x))
}
func (SyncGMCommand_CommandType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor3, []int{32, 0}
}

type SyncServerInfo struct {
	Keys   []string `protobuf:"bytes,1,rep,name=keys" json:"keys,omitempty"`
	Values []string `protobuf:"bytes,2,rep,name=values" json:"values,omitempty"`
}

func (m *SyncServerInfo) Reset()                    { *m = SyncServerInfo{} }
func (m *SyncServerInfo) String() string            { return proto.CompactTextString(m) }
func (*SyncServerInfo) ProtoMessage()               {}
func (*SyncServerInfo) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

func (m *SyncServerInfo) GetKeys() []string {
	if m != nil {
		return m.Keys
	}
	return nil
}

func (m *SyncServerInfo) GetValues() []string {
	if m != nil {
		return m.Values
	}
	return nil
}

type SyncServerVersion struct {
	Id  uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Ver uint32 `protobuf:"varint,2,opt,name=ver" json:"ver,omitempty"`
}

func (m *SyncServerVersion) Reset()                    { *m = SyncServerVersion{} }
func (m *SyncServerVersion) String() string            { return proto.CompactTextString(m) }
func (*SyncServerVersion) ProtoMessage()               {}
func (*SyncServerVersion) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{1} }

func (m *SyncServerVersion) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *SyncServerVersion) GetVer() uint32 {
	if m != nil {
		return m.Ver
	}
	return 0
}

type SyncServerOpenInfo struct {
	TimeOpen     int64    `protobuf:"varint,1,opt,name=timeOpen" json:"timeOpen,omitempty"`
	TimeClose    int64    `protobuf:"varint,2,opt,name=timeClose" json:"timeClose,omitempty"`
	InnerIp      []string `protobuf:"bytes,3,rep,name=innerIp" json:"innerIp,omitempty"`
	GateLoad     int32    `protobuf:"varint,4,opt,name=gateLoad" json:"gateLoad,omitempty"`
	GateLoadAuth int32    `protobuf:"varint,5,opt,name=gateLoadAuth" json:"gateLoadAuth,omitempty"`
}

func (m *SyncServerOpenInfo) Reset()                    { *m = SyncServerOpenInfo{} }
func (m *SyncServerOpenInfo) String() string            { return proto.CompactTextString(m) }
func (*SyncServerOpenInfo) ProtoMessage()               {}
func (*SyncServerOpenInfo) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{2} }

func (m *SyncServerOpenInfo) GetTimeOpen() int64 {
	if m != nil {
		return m.TimeOpen
	}
	return 0
}

func (m *SyncServerOpenInfo) GetTimeClose() int64 {
	if m != nil {
		return m.TimeClose
	}
	return 0
}

func (m *SyncServerOpenInfo) GetInnerIp() []string {
	if m != nil {
		return m.InnerIp
	}
	return nil
}

func (m *SyncServerOpenInfo) GetGateLoad() int32 {
	if m != nil {
		return m.GateLoad
	}
	return 0
}

func (m *SyncServerOpenInfo) GetGateLoadAuth() int32 {
	if m != nil {
		return m.GateLoadAuth
	}
	return 0
}

type ReqResponseTest struct {
}

func (m *ReqResponseTest) Reset()                    { *m = ReqResponseTest{} }
func (m *ReqResponseTest) String() string            { return proto.CompactTextString(m) }
func (*ReqResponseTest) ProtoMessage()               {}
func (*ReqResponseTest) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{3} }

type RespResponseTest struct {
}

func (m *RespResponseTest) Reset()                    { *m = RespResponseTest{} }
func (m *RespResponseTest) String() string            { return proto.CompactTextString(m) }
func (*RespResponseTest) ProtoMessage()               {}
func (*RespResponseTest) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{4} }

type ReqUserSyncDB struct {
	Userid   uint64 `protobuf:"varint,2,opt,name=userid" json:"userid,omitempty"`
	SyncType int32  `protobuf:"varint,3,opt,name=syncType" json:"syncType,omitempty"`
}

func (m *ReqUserSyncDB) Reset()                    { *m = ReqUserSyncDB{} }
func (m *ReqUserSyncDB) String() string            { return proto.CompactTextString(m) }
func (*ReqUserSyncDB) ProtoMessage()               {}
func (*ReqUserSyncDB) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{5} }

func (m *ReqUserSyncDB) GetUserid() uint64 {
	if m != nil {
		return m.Userid
	}
	return 0
}

func (m *ReqUserSyncDB) GetSyncType() int32 {
	if m != nil {
		return m.SyncType
	}
	return 0
}

type RespUserSyncDB struct {
	ErrCode uint32 `protobuf:"varint,2,opt,name=errCode" json:"errCode,omitempty"`
	Userid  uint64 `protobuf:"varint,3,opt,name=userid" json:"userid,omitempty"`
	Data    string `protobuf:"bytes,4,opt,name=data" json:"data,omitempty"`
}

func (m *RespUserSyncDB) Reset()                    { *m = RespUserSyncDB{} }
func (m *RespUserSyncDB) String() string            { return proto.CompactTextString(m) }
func (*RespUserSyncDB) ProtoMessage()               {}
func (*RespUserSyncDB) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{6} }

func (m *RespUserSyncDB) GetErrCode() uint32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *RespUserSyncDB) GetUserid() uint64 {
	if m != nil {
		return m.Userid
	}
	return 0
}

func (m *RespUserSyncDB) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

// ...->entity
type ReqUserData struct {
	Userid uint64           `protobuf:"varint,2,opt,name=userid" json:"userid,omitempty"`
	Type   ReqUserData_Type `protobuf:"varint,3,opt,name=type,enum=smsg.ReqUserData_Type" json:"type,omitempty"`
}

func (m *ReqUserData) Reset()                    { *m = ReqUserData{} }
func (m *ReqUserData) String() string            { return proto.CompactTextString(m) }
func (*ReqUserData) ProtoMessage()               {}
func (*ReqUserData) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{7} }

func (m *ReqUserData) GetUserid() uint64 {
	if m != nil {
		return m.Userid
	}
	return 0
}

func (m *ReqUserData) GetType() ReqUserData_Type {
	if m != nil {
		return m.Type
	}
	return ReqUserData_All
}

type SyncReqMyData struct {
	Userid  uint64 `protobuf:"varint,1,opt,name=userid" json:"userid,omitempty"`
	Gateid  uint32 `protobuf:"varint,2,opt,name=gateid" json:"gateid,omitempty"`
	Session uint64 `protobuf:"varint,3,opt,name=session" json:"session,omitempty"`
}

func (m *SyncReqMyData) Reset()                    { *m = SyncReqMyData{} }
func (m *SyncReqMyData) String() string            { return proto.CompactTextString(m) }
func (*SyncReqMyData) ProtoMessage()               {}
func (*SyncReqMyData) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{8} }

func (m *SyncReqMyData) GetUserid() uint64 {
	if m != nil {
		return m.Userid
	}
	return 0
}

func (m *SyncReqMyData) GetGateid() uint32 {
	if m != nil {
		return m.Gateid
	}
	return 0
}

func (m *SyncReqMyData) GetSession() uint64 {
	if m != nil {
		return m.Session
	}
	return 0
}

type RespUserData struct {
	Nickname  string             `protobuf:"bytes,2,opt,name=nickname" json:"nickname,omitempty"`
	Money     int64              `protobuf:"varint,4,opt,name=money" json:"money,omitempty"`
	Level     int32              `protobuf:"varint,5,opt,name=level" json:"level,omitempty"`
	Star      int32              `protobuf:"varint,6,opt,name=star" json:"star,omitempty"`
	ELOScore  int32              `protobuf:"varint,7,opt,name=ELOScore" json:"ELOScore,omitempty"`
	Icon      int32              `protobuf:"varint,8,opt,name=icon" json:"icon,omitempty"`
	IconEdge  int32              `protobuf:"varint,9,opt,name=iconEdge" json:"iconEdge,omitempty"`
	Sex       int32              `protobuf:"varint,10,opt,name=sex" json:"sex,omitempty"`
	VipLevel  int32              `protobuf:"varint,11,opt,name=vipLevel" json:"vipLevel,omitempty"`
	Showid    uint64             `protobuf:"varint,12,opt,name=showid" json:"showid,omitempty"`
	GmLevel   int32              `protobuf:"varint,13,opt,name=gmLevel" json:"gmLevel,omitempty"`
	Power     int32              `protobuf:"varint,15,opt,name=power" json:"power,omitempty"`
	CardGroup *gamedef.CardGroup `protobuf:"bytes,16,opt,name=cardGroup" json:"cardGroup,omitempty"`
}

func (m *RespUserData) Reset()                    { *m = RespUserData{} }
func (m *RespUserData) String() string            { return proto.CompactTextString(m) }
func (*RespUserData) ProtoMessage()               {}
func (*RespUserData) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{9} }

func (m *RespUserData) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

func (m *RespUserData) GetMoney() int64 {
	if m != nil {
		return m.Money
	}
	return 0
}

func (m *RespUserData) GetLevel() int32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *RespUserData) GetStar() int32 {
	if m != nil {
		return m.Star
	}
	return 0
}

func (m *RespUserData) GetELOScore() int32 {
	if m != nil {
		return m.ELOScore
	}
	return 0
}

func (m *RespUserData) GetIcon() int32 {
	if m != nil {
		return m.Icon
	}
	return 0
}

func (m *RespUserData) GetIconEdge() int32 {
	if m != nil {
		return m.IconEdge
	}
	return 0
}

func (m *RespUserData) GetSex() int32 {
	if m != nil {
		return m.Sex
	}
	return 0
}

func (m *RespUserData) GetVipLevel() int32 {
	if m != nil {
		return m.VipLevel
	}
	return 0
}

func (m *RespUserData) GetShowid() uint64 {
	if m != nil {
		return m.Showid
	}
	return 0
}

func (m *RespUserData) GetGmLevel() int32 {
	if m != nil {
		return m.GmLevel
	}
	return 0
}

func (m *RespUserData) GetPower() int32 {
	if m != nil {
		return m.Power
	}
	return 0
}

func (m *RespUserData) GetCardGroup() *gamedef.CardGroup {
	if m != nil {
		return m.CardGroup
	}
	return nil
}

type PuAcReqUserSummary struct {
	Userid  uint64   `protobuf:"varint,2,opt,name=userid" json:"userid,omitempty"`
	Userids []uint64 `protobuf:"varint,3,rep,packed,name=userids" json:"userids,omitempty"`
}

func (m *PuAcReqUserSummary) Reset()                    { *m = PuAcReqUserSummary{} }
func (m *PuAcReqUserSummary) String() string            { return proto.CompactTextString(m) }
func (*PuAcReqUserSummary) ProtoMessage()               {}
func (*PuAcReqUserSummary) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{10} }

func (m *PuAcReqUserSummary) GetUserid() uint64 {
	if m != nil {
		return m.Userid
	}
	return 0
}

func (m *PuAcReqUserSummary) GetUserids() []uint64 {
	if m != nil {
		return m.Userids
	}
	return nil
}

type PuAcRespUserSummary struct {
	ErrCode   PuAcRespUserSummary_ErrCode     `protobuf:"varint,2,opt,name=errCode,enum=smsg.PuAcRespUserSummary_ErrCode" json:"errCode,omitempty"`
	Summaries map[uint64]*gamedef.UserSummary `protobuf:"bytes,4,rep,name=summaries" json:"summaries,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *PuAcRespUserSummary) Reset()                    { *m = PuAcRespUserSummary{} }
func (m *PuAcRespUserSummary) String() string            { return proto.CompactTextString(m) }
func (*PuAcRespUserSummary) ProtoMessage()               {}
func (*PuAcRespUserSummary) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{11} }

func (m *PuAcRespUserSummary) GetErrCode() PuAcRespUserSummary_ErrCode {
	if m != nil {
		return m.ErrCode
	}
	return PuAcRespUserSummary_Succ
}

func (m *PuAcRespUserSummary) GetSummaries() map[uint64]*gamedef.UserSummary {
	if m != nil {
		return m.Summaries
	}
	return nil
}

type PuAcReqQueryUserID struct {
	Userid      uint64                       `protobuf:"varint,2,opt,name=userid" json:"userid,omitempty"`
	QueryType   PuAcReqQueryUserID_QueryType `protobuf:"varint,3,opt,name=queryType,enum=smsg.PuAcReqQueryUserID_QueryType" json:"queryType,omitempty"`
	ParamInt    uint64                       `protobuf:"varint,4,opt,name=paramInt" json:"paramInt,omitempty"`
	ParamStr    string                       `protobuf:"bytes,5,opt,name=paramStr" json:"paramStr,omitempty"`
	AccountType gameconf.AccountLoginTyp     `protobuf:"varint,6,opt,name=accountType,enum=gameconf.AccountLoginTyp" json:"accountType,omitempty"`
}

func (m *PuAcReqQueryUserID) Reset()                    { *m = PuAcReqQueryUserID{} }
func (m *PuAcReqQueryUserID) String() string            { return proto.CompactTextString(m) }
func (*PuAcReqQueryUserID) ProtoMessage()               {}
func (*PuAcReqQueryUserID) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{12} }

func (m *PuAcReqQueryUserID) GetUserid() uint64 {
	if m != nil {
		return m.Userid
	}
	return 0
}

func (m *PuAcReqQueryUserID) GetQueryType() PuAcReqQueryUserID_QueryType {
	if m != nil {
		return m.QueryType
	}
	return PuAcReqQueryUserID_Invalid
}

func (m *PuAcReqQueryUserID) GetParamInt() uint64 {
	if m != nil {
		return m.ParamInt
	}
	return 0
}

func (m *PuAcReqQueryUserID) GetParamStr() string {
	if m != nil {
		return m.ParamStr
	}
	return ""
}

func (m *PuAcReqQueryUserID) GetAccountType() gameconf.AccountLoginTyp {
	if m != nil {
		return m.AccountType
	}
	return gameconf.AccountLoginTyp_ALTInvalid
}

type PuAcRespQueryUserID struct {
	ErrCode PuAcRespQueryUserID_ErrCode `protobuf:"varint,2,opt,name=errCode,enum=smsg.PuAcRespQueryUserID_ErrCode" json:"errCode,omitempty"`
	UserIds []uint64                    `protobuf:"varint,3,rep,packed,name=userIds" json:"userIds,omitempty"`
}

func (m *PuAcRespQueryUserID) Reset()                    { *m = PuAcRespQueryUserID{} }
func (m *PuAcRespQueryUserID) String() string            { return proto.CompactTextString(m) }
func (*PuAcRespQueryUserID) ProtoMessage()               {}
func (*PuAcRespQueryUserID) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{13} }

func (m *PuAcRespQueryUserID) GetErrCode() PuAcRespQueryUserID_ErrCode {
	if m != nil {
		return m.ErrCode
	}
	return PuAcRespQueryUserID_Succ
}

func (m *PuAcRespQueryUserID) GetUserIds() []uint64 {
	if m != nil {
		return m.UserIds
	}
	return nil
}

type AcEnReqCacheUserSummary struct {
	Userid uint64 `protobuf:"varint,2,opt,name=userid" json:"userid,omitempty"`
}

func (m *AcEnReqCacheUserSummary) Reset()                    { *m = AcEnReqCacheUserSummary{} }
func (m *AcEnReqCacheUserSummary) String() string            { return proto.CompactTextString(m) }
func (*AcEnReqCacheUserSummary) ProtoMessage()               {}
func (*AcEnReqCacheUserSummary) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{14} }

func (m *AcEnReqCacheUserSummary) GetUserid() uint64 {
	if m != nil {
		return m.Userid
	}
	return 0
}

type AcEnRespCacheUserSummary struct {
	Userid  uint64               `protobuf:"varint,2,opt,name=userid" json:"userid,omitempty"`
	ErrCode uint32               `protobuf:"varint,3,opt,name=errCode" json:"errCode,omitempty"`
	Summary *gamedef.UserSummary `protobuf:"bytes,4,opt,name=summary" json:"summary,omitempty"`
}

func (m *AcEnRespCacheUserSummary) Reset()                    { *m = AcEnRespCacheUserSummary{} }
func (m *AcEnRespCacheUserSummary) String() string            { return proto.CompactTextString(m) }
func (*AcEnRespCacheUserSummary) ProtoMessage()               {}
func (*AcEnRespCacheUserSummary) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{15} }

func (m *AcEnRespCacheUserSummary) GetUserid() uint64 {
	if m != nil {
		return m.Userid
	}
	return 0
}

func (m *AcEnRespCacheUserSummary) GetErrCode() uint32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *AcEnRespCacheUserSummary) GetSummary() *gamedef.UserSummary {
	if m != nil {
		return m.Summary
	}
	return nil
}

type ReqGameTest struct {
	Userid uint64  `protobuf:"varint,2,opt,name=userid" json:"userid,omitempty"`
	Total  int32   `protobuf:"varint,3,opt,name=total" json:"total,omitempty"`
	Tick   int32   `protobuf:"varint,4,opt,name=tick" json:"tick,omitempty"`
	Each   int32   `protobuf:"varint,5,opt,name=each" json:"each,omitempty"`
	Mode   []int32 `protobuf:"varint,6,rep,packed,name=mode" json:"mode,omitempty"`
	Arg    string  `protobuf:"bytes,7,opt,name=arg" json:"arg,omitempty"`
}

func (m *ReqGameTest) Reset()                    { *m = ReqGameTest{} }
func (m *ReqGameTest) String() string            { return proto.CompactTextString(m) }
func (*ReqGameTest) ProtoMessage()               {}
func (*ReqGameTest) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{16} }

func (m *ReqGameTest) GetUserid() uint64 {
	if m != nil {
		return m.Userid
	}
	return 0
}

func (m *ReqGameTest) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *ReqGameTest) GetTick() int32 {
	if m != nil {
		return m.Tick
	}
	return 0
}

func (m *ReqGameTest) GetEach() int32 {
	if m != nil {
		return m.Each
	}
	return 0
}

func (m *ReqGameTest) GetMode() []int32 {
	if m != nil {
		return m.Mode
	}
	return nil
}

func (m *ReqGameTest) GetArg() string {
	if m != nil {
		return m.Arg
	}
	return ""
}

type ReqMatch struct {
	Userid     uint64             `protobuf:"varint,2,opt,name=userid" json:"userid,omitempty"`
	ModeID     int32              `protobuf:"varint,3,opt,name=modeID" json:"modeID,omitempty"`
	MatchScore int32              `protobuf:"varint,5,opt,name=matchScore" json:"matchScore,omitempty"`
	TestInfo   string             `protobuf:"bytes,6,opt,name=testInfo" json:"testInfo,omitempty"`
	UserBrief  *gamedef.UserBrief `protobuf:"bytes,10,opt,name=userBrief" json:"userBrief,omitempty"`
}

func (m *ReqMatch) Reset()                    { *m = ReqMatch{} }
func (m *ReqMatch) String() string            { return proto.CompactTextString(m) }
func (*ReqMatch) ProtoMessage()               {}
func (*ReqMatch) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{17} }

func (m *ReqMatch) GetUserid() uint64 {
	if m != nil {
		return m.Userid
	}
	return 0
}

func (m *ReqMatch) GetModeID() int32 {
	if m != nil {
		return m.ModeID
	}
	return 0
}

func (m *ReqMatch) GetMatchScore() int32 {
	if m != nil {
		return m.MatchScore
	}
	return 0
}

func (m *ReqMatch) GetTestInfo() string {
	if m != nil {
		return m.TestInfo
	}
	return ""
}

func (m *ReqMatch) GetUserBrief() *gamedef.UserBrief {
	if m != nil {
		return m.UserBrief
	}
	return nil
}

type RespMatch struct {
	Userid  uint64            `protobuf:"varint,2,opt,name=userid" json:"userid,omitempty"`
	Result  int32             `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	ErrCode RespMatch_ErrCode `protobuf:"varint,4,opt,name=errCode,enum=smsg.RespMatch_ErrCode" json:"errCode,omitempty"`
}

func (m *RespMatch) Reset()                    { *m = RespMatch{} }
func (m *RespMatch) String() string            { return proto.CompactTextString(m) }
func (*RespMatch) ProtoMessage()               {}
func (*RespMatch) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{18} }

func (m *RespMatch) GetUserid() uint64 {
	if m != nil {
		return m.Userid
	}
	return 0
}

func (m *RespMatch) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

func (m *RespMatch) GetErrCode() RespMatch_ErrCode {
	if m != nil {
		return m.ErrCode
	}
	return RespMatch_Invalid
}

type ReqCancelMatch struct {
	Userid uint64 `protobuf:"varint,2,opt,name=userid" json:"userid,omitempty"`
}

func (m *ReqCancelMatch) Reset()                    { *m = ReqCancelMatch{} }
func (m *ReqCancelMatch) String() string            { return proto.CompactTextString(m) }
func (*ReqCancelMatch) ProtoMessage()               {}
func (*ReqCancelMatch) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{19} }

func (m *ReqCancelMatch) GetUserid() uint64 {
	if m != nil {
		return m.Userid
	}
	return 0
}

type LoGaReqNewGame struct {
	GameUUID    string                     `protobuf:"bytes,2,opt,name=gameUUID" json:"gameUUID,omitempty"`
	Users       []*LoGaReqNewGame_UserInfo `protobuf:"bytes,4,rep,name=users" json:"users,omitempty"`
	AiSvrID     uint32                     `protobuf:"varint,5,opt,name=aiSvrID" json:"aiSvrID,omitempty"`
	Lookers     []*LoGaReqNewGame_UserInfo `protobuf:"bytes,6,rep,name=lookers" json:"lookers,omitempty"`
	RoomNO      uint32                     `protobuf:"varint,14,opt,name=roomNO" json:"roomNO,omitempty"`
	RoomId      uint32                     `protobuf:"varint,15,opt,name=roomId" json:"roomId,omitempty"`
	RoomSetting *gamedef.RoomSetting       `protobuf:"bytes,16,opt,name=roomSetting" json:"roomSetting,omitempty"`
	VoiceId     string                     `protobuf:"bytes,17,opt,name=voiceId" json:"voiceId,omitempty"`
}

func (m *LoGaReqNewGame) Reset()                    { *m = LoGaReqNewGame{} }
func (m *LoGaReqNewGame) String() string            { return proto.CompactTextString(m) }
func (*LoGaReqNewGame) ProtoMessage()               {}
func (*LoGaReqNewGame) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{20} }

func (m *LoGaReqNewGame) GetGameUUID() string {
	if m != nil {
		return m.GameUUID
	}
	return ""
}

func (m *LoGaReqNewGame) GetUsers() []*LoGaReqNewGame_UserInfo {
	if m != nil {
		return m.Users
	}
	return nil
}

func (m *LoGaReqNewGame) GetAiSvrID() uint32 {
	if m != nil {
		return m.AiSvrID
	}
	return 0
}

func (m *LoGaReqNewGame) GetLookers() []*LoGaReqNewGame_UserInfo {
	if m != nil {
		return m.Lookers
	}
	return nil
}

func (m *LoGaReqNewGame) GetRoomNO() uint32 {
	if m != nil {
		return m.RoomNO
	}
	return 0
}

func (m *LoGaReqNewGame) GetRoomId() uint32 {
	if m != nil {
		return m.RoomId
	}
	return 0
}

func (m *LoGaReqNewGame) GetRoomSetting() *gamedef.RoomSetting {
	if m != nil {
		return m.RoomSetting
	}
	return nil
}

func (m *LoGaReqNewGame) GetVoiceId() string {
	if m != nil {
		return m.VoiceId
	}
	return ""
}

type LoGaReqNewGame_UserInfo struct {
	UserId    uint64             `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	GateId    uint32             `protobuf:"varint,2,opt,name=gateId" json:"gateId,omitempty"`
	Session   uint64             `protobuf:"varint,3,opt,name=session" json:"session,omitempty"`
	SeatId    int32              `protobuf:"varint,4,opt,name=seatId" json:"seatId,omitempty"`
	IsRobot   bool               `protobuf:"varint,12,opt,name=isRobot" json:"isRobot,omitempty"`
	UserBrief *gamedef.UserBrief `protobuf:"bytes,13,opt,name=userBrief" json:"userBrief,omitempty"`
}

func (m *LoGaReqNewGame_UserInfo) Reset()                    { *m = LoGaReqNewGame_UserInfo{} }
func (m *LoGaReqNewGame_UserInfo) String() string            { return proto.CompactTextString(m) }
func (*LoGaReqNewGame_UserInfo) ProtoMessage()               {}
func (*LoGaReqNewGame_UserInfo) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{20, 0} }

func (m *LoGaReqNewGame_UserInfo) GetUserId() uint64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *LoGaReqNewGame_UserInfo) GetGateId() uint32 {
	if m != nil {
		return m.GateId
	}
	return 0
}

func (m *LoGaReqNewGame_UserInfo) GetSession() uint64 {
	if m != nil {
		return m.Session
	}
	return 0
}

func (m *LoGaReqNewGame_UserInfo) GetSeatId() int32 {
	if m != nil {
		return m.SeatId
	}
	return 0
}

func (m *LoGaReqNewGame_UserInfo) GetIsRobot() bool {
	if m != nil {
		return m.IsRobot
	}
	return false
}

func (m *LoGaReqNewGame_UserInfo) GetUserBrief() *gamedef.UserBrief {
	if m != nil {
		return m.UserBrief
	}
	return nil
}

type LoGaRespNewPVPGame struct {
	GameUUID string                     `protobuf:"bytes,2,opt,name=gameUUID" json:"gameUUID,omitempty"`
	ErrCode  LoGaRespNewPVPGame_ErrCode `protobuf:"varint,3,opt,name=errCode,enum=smsg.LoGaRespNewPVPGame_ErrCode" json:"errCode,omitempty"`
}

func (m *LoGaRespNewPVPGame) Reset()                    { *m = LoGaRespNewPVPGame{} }
func (m *LoGaRespNewPVPGame) String() string            { return proto.CompactTextString(m) }
func (*LoGaRespNewPVPGame) ProtoMessage()               {}
func (*LoGaRespNewPVPGame) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{21} }

func (m *LoGaRespNewPVPGame) GetGameUUID() string {
	if m != nil {
		return m.GameUUID
	}
	return ""
}

func (m *LoGaRespNewPVPGame) GetErrCode() LoGaRespNewPVPGame_ErrCode {
	if m != nil {
		return m.ErrCode
	}
	return LoGaRespNewPVPGame_None
}

type LoGaReqLookGame struct {
	GameUUID string                    `protobuf:"bytes,2,opt,name=gameUUID" json:"gameUUID,omitempty"`
	Looker   *LoGaReqLookGame_UserInfo `protobuf:"bytes,3,opt,name=looker" json:"looker,omitempty"`
	RoomNO   uint32                    `protobuf:"varint,4,opt,name=roomNO" json:"roomNO,omitempty"`
	RoomId   uint32                    `protobuf:"varint,5,opt,name=roomId" json:"roomId,omitempty"`
}

func (m *LoGaReqLookGame) Reset()                    { *m = LoGaReqLookGame{} }
func (m *LoGaReqLookGame) String() string            { return proto.CompactTextString(m) }
func (*LoGaReqLookGame) ProtoMessage()               {}
func (*LoGaReqLookGame) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{22} }

func (m *LoGaReqLookGame) GetGameUUID() string {
	if m != nil {
		return m.GameUUID
	}
	return ""
}

func (m *LoGaReqLookGame) GetLooker() *LoGaReqLookGame_UserInfo {
	if m != nil {
		return m.Looker
	}
	return nil
}

func (m *LoGaReqLookGame) GetRoomNO() uint32 {
	if m != nil {
		return m.RoomNO
	}
	return 0
}

func (m *LoGaReqLookGame) GetRoomId() uint32 {
	if m != nil {
		return m.RoomId
	}
	return 0
}

type LoGaReqLookGame_UserInfo struct {
	UserId    uint64             `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	GateId    uint32             `protobuf:"varint,2,opt,name=gateId" json:"gateId,omitempty"`
	Session   uint64             `protobuf:"varint,3,opt,name=session" json:"session,omitempty"`
	SeatId    int32              `protobuf:"varint,4,opt,name=seatId" json:"seatId,omitempty"`
	IsRobot   bool               `protobuf:"varint,12,opt,name=isRobot" json:"isRobot,omitempty"`
	UserBrief *gamedef.UserBrief `protobuf:"bytes,13,opt,name=userBrief" json:"userBrief,omitempty"`
}

func (m *LoGaReqLookGame_UserInfo) Reset()                    { *m = LoGaReqLookGame_UserInfo{} }
func (m *LoGaReqLookGame_UserInfo) String() string            { return proto.CompactTextString(m) }
func (*LoGaReqLookGame_UserInfo) ProtoMessage()               {}
func (*LoGaReqLookGame_UserInfo) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{22, 0} }

func (m *LoGaReqLookGame_UserInfo) GetUserId() uint64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *LoGaReqLookGame_UserInfo) GetGateId() uint32 {
	if m != nil {
		return m.GateId
	}
	return 0
}

func (m *LoGaReqLookGame_UserInfo) GetSession() uint64 {
	if m != nil {
		return m.Session
	}
	return 0
}

func (m *LoGaReqLookGame_UserInfo) GetSeatId() int32 {
	if m != nil {
		return m.SeatId
	}
	return 0
}

func (m *LoGaReqLookGame_UserInfo) GetIsRobot() bool {
	if m != nil {
		return m.IsRobot
	}
	return false
}

func (m *LoGaReqLookGame_UserInfo) GetUserBrief() *gamedef.UserBrief {
	if m != nil {
		return m.UserBrief
	}
	return nil
}

type LoGaRespLookGame struct {
	GameUUID string                   `protobuf:"bytes,2,opt,name=gameUUID" json:"gameUUID,omitempty"`
	ErrCode  LoGaRespLookGame_ErrCode `protobuf:"varint,3,opt,name=errCode,enum=smsg.LoGaRespLookGame_ErrCode" json:"errCode,omitempty"`
}

func (m *LoGaRespLookGame) Reset()                    { *m = LoGaRespLookGame{} }
func (m *LoGaRespLookGame) String() string            { return proto.CompactTextString(m) }
func (*LoGaRespLookGame) ProtoMessage()               {}
func (*LoGaRespLookGame) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{23} }

func (m *LoGaRespLookGame) GetGameUUID() string {
	if m != nil {
		return m.GameUUID
	}
	return ""
}

func (m *LoGaRespLookGame) GetErrCode() LoGaRespLookGame_ErrCode {
	if m != nil {
		return m.ErrCode
	}
	return LoGaRespLookGame_None
}

type LoGaReqUserQuit struct {
	Userid uint64 `protobuf:"varint,2,opt,name=userid" json:"userid,omitempty"`
}

func (m *LoGaReqUserQuit) Reset()                    { *m = LoGaReqUserQuit{} }
func (m *LoGaReqUserQuit) String() string            { return proto.CompactTextString(m) }
func (*LoGaReqUserQuit) ProtoMessage()               {}
func (*LoGaReqUserQuit) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{24} }

func (m *LoGaReqUserQuit) GetUserid() uint64 {
	if m != nil {
		return m.Userid
	}
	return 0
}

type LoGaRespUserQuit struct {
	Userid  uint64                   `protobuf:"varint,2,opt,name=userid" json:"userid,omitempty"`
	ErrCode LoGaRespUserQuit_ErrCode `protobuf:"varint,3,opt,name=errCode,enum=smsg.LoGaRespUserQuit_ErrCode" json:"errCode,omitempty"`
}

func (m *LoGaRespUserQuit) Reset()                    { *m = LoGaRespUserQuit{} }
func (m *LoGaRespUserQuit) String() string            { return proto.CompactTextString(m) }
func (*LoGaRespUserQuit) ProtoMessage()               {}
func (*LoGaRespUserQuit) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{25} }

func (m *LoGaRespUserQuit) GetUserid() uint64 {
	if m != nil {
		return m.Userid
	}
	return 0
}

func (m *LoGaRespUserQuit) GetErrCode() LoGaRespUserQuit_ErrCode {
	if m != nil {
		return m.ErrCode
	}
	return LoGaRespUserQuit_None
}

// 跑马灯消息
type ServerNotice struct {
	AppID     uint32   `protobuf:"varint,1,opt,name=appID" json:"appID,omitempty"`
	UserID    uint64   `protobuf:"varint,2,opt,name=userID" json:"userID,omitempty"`
	NoticeID  int32    `protobuf:"varint,3,opt,name=noticeID" json:"noticeID,omitempty"`
	Msg       string   `protobuf:"bytes,4,opt,name=msg" json:"msg,omitempty"`
	Data      []string `protobuf:"bytes,5,rep,name=data" json:"data,omitempty"`
	ChannelID int32    `protobuf:"varint,6,opt,name=channelID" json:"channelID,omitempty"`
}

func (m *ServerNotice) Reset()                    { *m = ServerNotice{} }
func (m *ServerNotice) String() string            { return proto.CompactTextString(m) }
func (*ServerNotice) ProtoMessage()               {}
func (*ServerNotice) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{26} }

func (m *ServerNotice) GetAppID() uint32 {
	if m != nil {
		return m.AppID
	}
	return 0
}

func (m *ServerNotice) GetUserID() uint64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *ServerNotice) GetNoticeID() int32 {
	if m != nil {
		return m.NoticeID
	}
	return 0
}

func (m *ServerNotice) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *ServerNotice) GetData() []string {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ServerNotice) GetChannelID() int32 {
	if m != nil {
		return m.ChannelID
	}
	return 0
}

type ReqGameRemove struct {
	Seqid   int64    `protobuf:"varint,1,opt,name=seqid" json:"seqid,omitempty"`
	GameIDs []string `protobuf:"bytes,2,rep,name=gameIDs" json:"gameIDs,omitempty"`
}

func (m *ReqGameRemove) Reset()                    { *m = ReqGameRemove{} }
func (m *ReqGameRemove) String() string            { return proto.CompactTextString(m) }
func (*ReqGameRemove) ProtoMessage()               {}
func (*ReqGameRemove) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{27} }

func (m *ReqGameRemove) GetSeqid() int64 {
	if m != nil {
		return m.Seqid
	}
	return 0
}

func (m *ReqGameRemove) GetGameIDs() []string {
	if m != nil {
		return m.GameIDs
	}
	return nil
}

type RespGameRemove struct {
	Seqid   int64    `protobuf:"varint,1,opt,name=seqid" json:"seqid,omitempty"`
	ErrCode uint32   `protobuf:"varint,2,opt,name=errCode" json:"errCode,omitempty"`
	GameIDs []string `protobuf:"bytes,3,rep,name=gameIDs" json:"gameIDs,omitempty"`
}

func (m *RespGameRemove) Reset()                    { *m = RespGameRemove{} }
func (m *RespGameRemove) String() string            { return proto.CompactTextString(m) }
func (*RespGameRemove) ProtoMessage()               {}
func (*RespGameRemove) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{28} }

func (m *RespGameRemove) GetSeqid() int64 {
	if m != nil {
		return m.Seqid
	}
	return 0
}

func (m *RespGameRemove) GetErrCode() uint32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *RespGameRemove) GetGameIDs() []string {
	if m != nil {
		return m.GameIDs
	}
	return nil
}

// 游戏服向大厅请求改变游戏进程
type NtfGameStateChange struct {
	State    NtfGameStateChange_State `protobuf:"varint,1,opt,name=state,enum=smsg.NtfGameStateChange_State" json:"state,omitempty"`
	GameUUID string                   `protobuf:"bytes,2,opt,name=gameUUID" json:"gameUUID,omitempty"`
}

func (m *NtfGameStateChange) Reset()                    { *m = NtfGameStateChange{} }
func (m *NtfGameStateChange) String() string            { return proto.CompactTextString(m) }
func (*NtfGameStateChange) ProtoMessage()               {}
func (*NtfGameStateChange) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{29} }

func (m *NtfGameStateChange) GetState() NtfGameStateChange_State {
	if m != nil {
		return m.State
	}
	return NtfGameStateChange_Init
}

func (m *NtfGameStateChange) GetGameUUID() string {
	if m != nil {
		return m.GameUUID
	}
	return ""
}

type AdAllReqPingServer struct {
	Seqid int64 `protobuf:"varint,1,opt,name=seqid" json:"seqid,omitempty"`
}

func (m *AdAllReqPingServer) Reset()                    { *m = AdAllReqPingServer{} }
func (m *AdAllReqPingServer) String() string            { return proto.CompactTextString(m) }
func (*AdAllReqPingServer) ProtoMessage()               {}
func (*AdAllReqPingServer) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{30} }

func (m *AdAllReqPingServer) GetSeqid() int64 {
	if m != nil {
		return m.Seqid
	}
	return 0
}

type AdAllRespPingServer struct {
	Seqid int64 `protobuf:"varint,1,opt,name=seqid" json:"seqid,omitempty"`
}

func (m *AdAllRespPingServer) Reset()                    { *m = AdAllRespPingServer{} }
func (m *AdAllRespPingServer) String() string            { return proto.CompactTextString(m) }
func (*AdAllRespPingServer) ProtoMessage()               {}
func (*AdAllRespPingServer) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{31} }

func (m *AdAllRespPingServer) GetSeqid() int64 {
	if m != nil {
		return m.Seqid
	}
	return 0
}

// 同步gm命令
type SyncGMCommand struct {
	CommandType  SyncGMCommand_CommandType `protobuf:"varint,1,opt,name=commandType,enum=smsg.SyncGMCommand_CommandType" json:"commandType,omitempty"`
	TargetUserID uint64                    `protobuf:"varint,2,opt,name=targetUserID" json:"targetUserID,omitempty"`
	Param0       int64                     `protobuf:"varint,3,opt,name=param0" json:"param0,omitempty"`
	SParam       string                    `protobuf:"bytes,4,opt,name=sParam" json:"sParam,omitempty"`
}

func (m *SyncGMCommand) Reset()                    { *m = SyncGMCommand{} }
func (m *SyncGMCommand) String() string            { return proto.CompactTextString(m) }
func (*SyncGMCommand) ProtoMessage()               {}
func (*SyncGMCommand) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{32} }

func (m *SyncGMCommand) GetCommandType() SyncGMCommand_CommandType {
	if m != nil {
		return m.CommandType
	}
	return SyncGMCommand_CloseChat
}

func (m *SyncGMCommand) GetTargetUserID() uint64 {
	if m != nil {
		return m.TargetUserID
	}
	return 0
}

func (m *SyncGMCommand) GetParam0() int64 {
	if m != nil {
		return m.Param0
	}
	return 0
}

func (m *SyncGMCommand) GetSParam() string {
	if m != nil {
		return m.SParam
	}
	return ""
}

type RemoteGMCommand struct {
	Userid  uint64 `protobuf:"varint,1,opt,name=userid" json:"userid,omitempty"`
	Gmid    uint64 `protobuf:"varint,2,opt,name=gmid" json:"gmid,omitempty"`
	Command string `protobuf:"bytes,3,opt,name=command" json:"command,omitempty"`
}

func (m *RemoteGMCommand) Reset()                    { *m = RemoteGMCommand{} }
func (m *RemoteGMCommand) String() string            { return proto.CompactTextString(m) }
func (*RemoteGMCommand) ProtoMessage()               {}
func (*RemoteGMCommand) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{33} }

func (m *RemoteGMCommand) GetUserid() uint64 {
	if m != nil {
		return m.Userid
	}
	return 0
}

func (m *RemoteGMCommand) GetGmid() uint64 {
	if m != nil {
		return m.Gmid
	}
	return 0
}

func (m *RemoteGMCommand) GetCommand() string {
	if m != nil {
		return m.Command
	}
	return ""
}

// game->entity
type GsEsGameOver struct {
	Userid        uint64               `protobuf:"varint,2,opt,name=userid" json:"userid,omitempty"`
	IsException   bool                 `protobuf:"varint,3,opt,name=isException" json:"isException,omitempty"`
	Level         int32                `protobuf:"varint,4,opt,name=level" json:"level,omitempty"`
	Exp           int32                `protobuf:"varint,5,opt,name=exp" json:"exp,omitempty"`
	GameModeType  gameconf.GameModeTyp `protobuf:"varint,10,opt,name=gameModeType,enum=gameconf.GameModeTyp" json:"gameModeType,omitempty"`
	GameId        string               `protobuf:"bytes,13,opt,name=gameId" json:"gameId,omitempty"`
	GameStartTime int64                `protobuf:"varint,14,opt,name=gameStartTime" json:"gameStartTime,omitempty"`
	GameEndTime   int64                `protobuf:"varint,15,opt,name=gameEndTime" json:"gameEndTime,omitempty"`
	RoundCount    int32                `protobuf:"varint,16,opt,name=roundCount" json:"roundCount,omitempty"`
	Word          string               `protobuf:"bytes,17,opt,name=word" json:"word,omitempty"`
	WordId        int32                `protobuf:"varint,18,opt,name=wordId" json:"wordId,omitempty"`
	WinLoseType   gameconf.WinLoseTyp  `protobuf:"varint,20,opt,name=winLoseType,enum=gameconf.WinLoseTyp" json:"winLoseType,omitempty"`
	RoleType      gameconf.RoleTyp     `protobuf:"varint,21,opt,name=roleType,enum=gameconf.RoleTyp" json:"roleType,omitempty"`
	SeatId        int32                `protobuf:"varint,22,opt,name=seatId" json:"seatId,omitempty"`
	IsEscape      bool                 `protobuf:"varint,23,opt,name=isEscape" json:"isEscape,omitempty"`
	Score         []*db.Score          `protobuf:"bytes,31,rep,name=score" json:"score,omitempty"`
}

func (m *GsEsGameOver) Reset()                    { *m = GsEsGameOver{} }
func (m *GsEsGameOver) String() string            { return proto.CompactTextString(m) }
func (*GsEsGameOver) ProtoMessage()               {}
func (*GsEsGameOver) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{34} }

func (m *GsEsGameOver) GetUserid() uint64 {
	if m != nil {
		return m.Userid
	}
	return 0
}

func (m *GsEsGameOver) GetIsException() bool {
	if m != nil {
		return m.IsException
	}
	return false
}

func (m *GsEsGameOver) GetLevel() int32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *GsEsGameOver) GetExp() int32 {
	if m != nil {
		return m.Exp
	}
	return 0
}

func (m *GsEsGameOver) GetGameModeType() gameconf.GameModeTyp {
	if m != nil {
		return m.GameModeType
	}
	return gameconf.GameModeTyp_MGTInvalid
}

func (m *GsEsGameOver) GetGameId() string {
	if m != nil {
		return m.GameId
	}
	return ""
}

func (m *GsEsGameOver) GetGameStartTime() int64 {
	if m != nil {
		return m.GameStartTime
	}
	return 0
}

func (m *GsEsGameOver) GetGameEndTime() int64 {
	if m != nil {
		return m.GameEndTime
	}
	return 0
}

func (m *GsEsGameOver) GetRoundCount() int32 {
	if m != nil {
		return m.RoundCount
	}
	return 0
}

func (m *GsEsGameOver) GetWord() string {
	if m != nil {
		return m.Word
	}
	return ""
}

func (m *GsEsGameOver) GetWordId() int32 {
	if m != nil {
		return m.WordId
	}
	return 0
}

func (m *GsEsGameOver) GetWinLoseType() gameconf.WinLoseTyp {
	if m != nil {
		return m.WinLoseType
	}
	return gameconf.WinLoseTyp_WLTInvalid
}

func (m *GsEsGameOver) GetRoleType() gameconf.RoleTyp {
	if m != nil {
		return m.RoleType
	}
	return gameconf.RoleTyp_RTInvalid
}

func (m *GsEsGameOver) GetSeatId() int32 {
	if m != nil {
		return m.SeatId
	}
	return 0
}

func (m *GsEsGameOver) GetIsEscape() bool {
	if m != nil {
		return m.IsEscape
	}
	return false
}

func (m *GsEsGameOver) GetScore() []*db.Score {
	if m != nil {
		return m.Score
	}
	return nil
}

// Entity到Lobby消息，目的是发送消息给目的在线玩家
type EnLoRawMessage struct {
	UserID uint64 `protobuf:"varint,1,opt,name=userID" json:"userID,omitempty"`
	MsgId  uint32 `protobuf:"varint,2,opt,name=msgId" json:"msgId,omitempty"`
	Data   []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *EnLoRawMessage) Reset()                    { *m = EnLoRawMessage{} }
func (m *EnLoRawMessage) String() string            { return proto.CompactTextString(m) }
func (*EnLoRawMessage) ProtoMessage()               {}
func (*EnLoRawMessage) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{35} }

func (m *EnLoRawMessage) GetUserID() uint64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *EnLoRawMessage) GetMsgId() uint32 {
	if m != nil {
		return m.MsgId
	}
	return 0
}

func (m *EnLoRawMessage) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type EsAllNtfUserBrief struct {
	Userid    uint64             `protobuf:"varint,1,opt,name=userid" json:"userid,omitempty"`
	UserBrief *gamedef.UserBrief `protobuf:"bytes,2,opt,name=UserBrief" json:"UserBrief,omitempty"`
}

func (m *EsAllNtfUserBrief) Reset()                    { *m = EsAllNtfUserBrief{} }
func (m *EsAllNtfUserBrief) String() string            { return proto.CompactTextString(m) }
func (*EsAllNtfUserBrief) ProtoMessage()               {}
func (*EsAllNtfUserBrief) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{36} }

func (m *EsAllNtfUserBrief) GetUserid() uint64 {
	if m != nil {
		return m.Userid
	}
	return 0
}

func (m *EsAllNtfUserBrief) GetUserBrief() *gamedef.UserBrief {
	if m != nil {
		return m.UserBrief
	}
	return nil
}

// 单播通知玩家
type SSNoticeUser struct {
	UserId   uint64 `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	MsgId    uint32 `protobuf:"varint,2,opt,name=msgId" json:"msgId,omitempty"`
	LogicMsg []byte `protobuf:"bytes,3,opt,name=logicMsg,proto3" json:"logicMsg,omitempty"`
}

func (m *SSNoticeUser) Reset()                    { *m = SSNoticeUser{} }
func (m *SSNoticeUser) String() string            { return proto.CompactTextString(m) }
func (*SSNoticeUser) ProtoMessage()               {}
func (*SSNoticeUser) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{37} }

func (m *SSNoticeUser) GetUserId() uint64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *SSNoticeUser) GetMsgId() uint32 {
	if m != nil {
		return m.MsgId
	}
	return 0
}

func (m *SSNoticeUser) GetLogicMsg() []byte {
	if m != nil {
		return m.LogicMsg
	}
	return nil
}

// gm命令
type EnAcGMCommand struct {
	Userid uint64 `protobuf:"varint,2,opt,name=userid" json:"userid,omitempty"`
	Cmd    string `protobuf:"bytes,3,opt,name=cmd" json:"cmd,omitempty"`
}

func (m *EnAcGMCommand) Reset()                    { *m = EnAcGMCommand{} }
func (m *EnAcGMCommand) String() string            { return proto.CompactTextString(m) }
func (*EnAcGMCommand) ProtoMessage()               {}
func (*EnAcGMCommand) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{38} }

func (m *EnAcGMCommand) GetUserid() uint64 {
	if m != nil {
		return m.Userid
	}
	return 0
}

func (m *EnAcGMCommand) GetCmd() string {
	if m != nil {
		return m.Cmd
	}
	return ""
}

func init() {
	proto.RegisterType((*SyncServerInfo)(nil), "smsg.SyncServerInfo")
	proto.RegisterType((*SyncServerVersion)(nil), "smsg.SyncServerVersion")
	proto.RegisterType((*SyncServerOpenInfo)(nil), "smsg.SyncServerOpenInfo")
	proto.RegisterType((*ReqResponseTest)(nil), "smsg.ReqResponseTest")
	proto.RegisterType((*RespResponseTest)(nil), "smsg.RespResponseTest")
	proto.RegisterType((*ReqUserSyncDB)(nil), "smsg.ReqUserSyncDB")
	proto.RegisterType((*RespUserSyncDB)(nil), "smsg.RespUserSyncDB")
	proto.RegisterType((*ReqUserData)(nil), "smsg.ReqUserData")
	proto.RegisterType((*SyncReqMyData)(nil), "smsg.SyncReqMyData")
	proto.RegisterType((*RespUserData)(nil), "smsg.RespUserData")
	proto.RegisterType((*PuAcReqUserSummary)(nil), "smsg.PuAcReqUserSummary")
	proto.RegisterType((*PuAcRespUserSummary)(nil), "smsg.PuAcRespUserSummary")
	proto.RegisterType((*PuAcReqQueryUserID)(nil), "smsg.PuAcReqQueryUserID")
	proto.RegisterType((*PuAcRespQueryUserID)(nil), "smsg.PuAcRespQueryUserID")
	proto.RegisterType((*AcEnReqCacheUserSummary)(nil), "smsg.AcEnReqCacheUserSummary")
	proto.RegisterType((*AcEnRespCacheUserSummary)(nil), "smsg.AcEnRespCacheUserSummary")
	proto.RegisterType((*ReqGameTest)(nil), "smsg.ReqGameTest")
	proto.RegisterType((*ReqMatch)(nil), "smsg.ReqMatch")
	proto.RegisterType((*RespMatch)(nil), "smsg.RespMatch")
	proto.RegisterType((*ReqCancelMatch)(nil), "smsg.ReqCancelMatch")
	proto.RegisterType((*LoGaReqNewGame)(nil), "smsg.LoGaReqNewGame")
	proto.RegisterType((*LoGaReqNewGame_UserInfo)(nil), "smsg.LoGaReqNewGame.UserInfo")
	proto.RegisterType((*LoGaRespNewPVPGame)(nil), "smsg.LoGaRespNewPVPGame")
	proto.RegisterType((*LoGaReqLookGame)(nil), "smsg.LoGaReqLookGame")
	proto.RegisterType((*LoGaReqLookGame_UserInfo)(nil), "smsg.LoGaReqLookGame.UserInfo")
	proto.RegisterType((*LoGaRespLookGame)(nil), "smsg.LoGaRespLookGame")
	proto.RegisterType((*LoGaReqUserQuit)(nil), "smsg.LoGaReqUserQuit")
	proto.RegisterType((*LoGaRespUserQuit)(nil), "smsg.LoGaRespUserQuit")
	proto.RegisterType((*ServerNotice)(nil), "smsg.ServerNotice")
	proto.RegisterType((*ReqGameRemove)(nil), "smsg.ReqGameRemove")
	proto.RegisterType((*RespGameRemove)(nil), "smsg.RespGameRemove")
	proto.RegisterType((*NtfGameStateChange)(nil), "smsg.NtfGameStateChange")
	proto.RegisterType((*AdAllReqPingServer)(nil), "smsg.AdAllReqPingServer")
	proto.RegisterType((*AdAllRespPingServer)(nil), "smsg.AdAllRespPingServer")
	proto.RegisterType((*SyncGMCommand)(nil), "smsg.SyncGMCommand")
	proto.RegisterType((*RemoteGMCommand)(nil), "smsg.RemoteGMCommand")
	proto.RegisterType((*GsEsGameOver)(nil), "smsg.GsEsGameOver")
	proto.RegisterType((*EnLoRawMessage)(nil), "smsg.EnLoRawMessage")
	proto.RegisterType((*EsAllNtfUserBrief)(nil), "smsg.EsAllNtfUserBrief")
	proto.RegisterType((*SSNoticeUser)(nil), "smsg.SSNoticeUser")
	proto.RegisterType((*EnAcGMCommand)(nil), "smsg.EnAcGMCommand")
	proto.RegisterEnum("smsg.ReqUserData_Type", ReqUserData_Type_name, ReqUserData_Type_value)
	proto.RegisterEnum("smsg.RespUserData_ErrCode", RespUserData_ErrCode_name, RespUserData_ErrCode_value)
	proto.RegisterEnum("smsg.PuAcRespUserSummary_ErrCode", PuAcRespUserSummary_ErrCode_name, PuAcRespUserSummary_ErrCode_value)
	proto.RegisterEnum("smsg.PuAcReqQueryUserID_QueryType", PuAcReqQueryUserID_QueryType_name, PuAcReqQueryUserID_QueryType_value)
	proto.RegisterEnum("smsg.PuAcRespQueryUserID_ErrCode", PuAcRespQueryUserID_ErrCode_name, PuAcRespQueryUserID_ErrCode_value)
	proto.RegisterEnum("smsg.RespMatch_ErrCode", RespMatch_ErrCode_name, RespMatch_ErrCode_value)
	proto.RegisterEnum("smsg.LoGaRespNewPVPGame_ErrCode", LoGaRespNewPVPGame_ErrCode_name, LoGaRespNewPVPGame_ErrCode_value)
	proto.RegisterEnum("smsg.LoGaRespLookGame_ErrCode", LoGaRespLookGame_ErrCode_name, LoGaRespLookGame_ErrCode_value)
	proto.RegisterEnum("smsg.LoGaRespUserQuit_ErrCode", LoGaRespUserQuit_ErrCode_name, LoGaRespUserQuit_ErrCode_value)
	proto.RegisterEnum("smsg.NtfGameStateChange_State", NtfGameStateChange_State_name, NtfGameStateChange_State_value)
	proto.RegisterEnum("smsg.SyncGMCommand_CommandType", SyncGMCommand_CommandType_name, SyncGMCommand_CommandType_value)
}

func init() { proto.RegisterFile("smsg/server_msg.proto", fileDescriptor3) }

var fileDescriptor3 = []byte{
	// 2244 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x58, 0x4f, 0x6f, 0x1c, 0x4b,
	0x11, 0xf7, 0xec, 0x1f, 0x7b, 0xb7, 0xd6, 0xeb, 0x8c, 0xe7, 0x39, 0xc9, 0x3c, 0x0b, 0x5e, 0xcc,
	0x08, 0x90, 0x5f, 0x1e, 0x6c, 0xf2, 0x1c, 0x08, 0xef, 0x0f, 0x12, 0x38, 0xeb, 0x8d, 0x35, 0xc8,
	0x71, 0x92, 0xde, 0x38, 0xef, 0x81, 0x84, 0xa2, 0xc9, 0x4c, 0x7b, 0x3d, 0xf2, 0xcc, 0xf4, 0x7a,
	0x7a, 0xd6, 0xce, 0x4a, 0x7c, 0x01, 0x24, 0xb8, 0x00, 0x27, 0xc4, 0x85, 0x1b, 0x1f, 0x81, 0x0b,
	0xdf, 0x81, 0x4f, 0xc0, 0x89, 0x2f, 0xc0, 0x8d, 0x23, 0xaa, 0xea, 0xe9, 0xf9, 0xf3, 0xec, 0x8d,
	0x7d, 0xe5, 0x60, 0xb9, 0x7e, 0xd5, 0x55, 0x35, 0xd5, 0x55, 0xd5, 0x5d, 0xd5, 0x0b, 0xb7, 0x65,
	0x2c, 0x27, 0x0f, 0x24, 0x4f, 0xcf, 0x79, 0xfa, 0x26, 0x96, 0x93, 0xc1, 0x34, 0x15, 0x99, 0xb0,
	0x5a, 0xc8, 0xde, 0x7c, 0x2c, 0xbd, 0x64, 0x32, 0x13, 0xf2, 0xc4, 0x1b, 0xf8, 0x22, 0x7e, 0x20,
	0x27, 0xf2, 0xcd, 0x09, 0x4f, 0xc5, 0xbb, 0x07, 0x24, 0xf4, 0x60, 0xe2, 0xc5, 0xdc, 0x17, 0xc9,
	0x31, 0x11, 0x6f, 0xb2, 0xf9, 0x94, 0x2b, 0xed, 0xcd, 0x4f, 0xde, 0xaf, 0x17, 0xf0, 0x63, 0xfc,
	0xcb, 0x85, 0x3f, 0xbe, 0x46, 0xf8, 0xed, 0x83, 0xe0, 0xad, 0x12, 0x75, 0x7e, 0x0a, 0x6b, 0xe3,
	0x79, 0xe2, 0x8f, 0xc9, 0x5b, 0x37, 0x39, 0x16, 0x96, 0x05, 0xad, 0x53, 0x3e, 0x97, 0xb6, 0xb1,
	0xd5, 0xdc, 0xee, 0x32, 0xa2, 0xad, 0x3b, 0xb0, 0x7c, 0xee, 0x45, 0x33, 0x2e, 0xed, 0x06, 0x71,
	0x73, 0xe4, 0xfc, 0x18, 0xd6, 0x4b, 0xed, 0xd7, 0x3c, 0x95, 0xa1, 0x48, 0xac, 0x35, 0x68, 0x84,
	0x81, 0x6d, 0x6c, 0x19, 0xdb, 0x7d, 0xd6, 0x08, 0x03, 0xcb, 0x84, 0xe6, 0x39, 0x4f, 0xed, 0x06,
	0x31, 0x90, 0x74, 0xfe, 0x66, 0x80, 0x55, 0xea, 0x3d, 0x9f, 0xf2, 0x84, 0xbe, 0xbc, 0x09, 0x9d,
	0x2c, 0x8c, 0x39, 0x62, 0x52, 0x6f, 0xb2, 0x02, 0x5b, 0xdf, 0x82, 0x2e, 0xd2, 0xc3, 0x48, 0x48,
	0x4e, 0xa6, 0x9a, 0xac, 0x64, 0x58, 0x36, 0xac, 0x84, 0x49, 0xc2, 0x53, 0x77, 0x6a, 0x37, 0xc9,
	0x41, 0x0d, 0xd1, 0xe6, 0xc4, 0xcb, 0xf8, 0x81, 0xf0, 0x02, 0xbb, 0xb5, 0x65, 0x6c, 0xb7, 0x59,
	0x81, 0x2d, 0x07, 0x56, 0x35, 0xbd, 0x3b, 0xcb, 0x4e, 0xec, 0x36, 0xad, 0xd7, 0x78, 0xce, 0x3a,
	0xdc, 0x62, 0xfc, 0x8c, 0x71, 0x39, 0x15, 0x89, 0xe4, 0xaf, 0xb8, 0xcc, 0x1c, 0x0b, 0x4c, 0xc4,
	0x35, 0xde, 0x10, 0xfa, 0x8c, 0x9f, 0x1d, 0x49, 0x9e, 0xe2, 0xbe, 0xf6, 0x9e, 0x60, 0xc4, 0x66,
	0x92, 0xa7, 0x61, 0x40, 0xce, 0xb6, 0x58, 0x8e, 0xd0, 0x1f, 0x39, 0x4f, 0xfc, 0x57, 0xf3, 0x29,
	0xb7, 0x9b, 0xca, 0x1f, 0x8d, 0x9d, 0xd7, 0xb0, 0x86, 0x46, 0x2b, 0x56, 0x6c, 0x58, 0xe1, 0x69,
	0x3a, 0x14, 0x01, 0xcf, 0xc3, 0xa7, 0x61, 0xc5, 0x7e, 0xb3, 0x66, 0xdf, 0x82, 0x56, 0xe0, 0x65,
	0x1e, 0xed, 0xb5, 0xcb, 0x88, 0x76, 0x22, 0xe8, 0xe5, 0xce, 0xed, 0x79, 0x99, 0xb7, 0xd0, 0xb5,
	0xfb, 0xd0, 0xca, 0xb4, 0x5b, 0x6b, 0x3b, 0x77, 0x06, 0x58, 0xaf, 0x83, 0x8a, 0xe2, 0x00, 0x9d,
	0x64, 0x24, 0xe3, 0x7c, 0x08, 0x2d, 0x44, 0xd6, 0x0a, 0x34, 0x77, 0xa3, 0xc8, 0x5c, 0xb2, 0x3a,
	0xd0, 0xc2, 0x1c, 0x9a, 0x86, 0xf3, 0x4b, 0xe8, 0xa3, 0xf7, 0x8c, 0x9f, 0x3d, 0x9b, 0x7f, 0xe3,
	0x7b, 0x46, 0xed, 0x7b, 0x77, 0x60, 0x19, 0x43, 0x9d, 0xfb, 0xd1, 0x67, 0x39, 0xc2, 0x4d, 0x4b,
	0x2e, 0xb1, 0x94, 0xf2, 0xbd, 0x69, 0xe8, 0xfc, 0xb7, 0x01, 0xab, 0x3a, 0x42, 0x64, 0x7a, 0x13,
	0x3a, 0x49, 0xe8, 0x9f, 0x26, 0x5e, 0xac, 0x02, 0xd4, 0x65, 0x05, 0xb6, 0x36, 0xa0, 0x1d, 0x8b,
	0x84, 0xcf, 0x29, 0x14, 0x4d, 0xa6, 0x00, 0x72, 0x23, 0x7e, 0xce, 0xa3, 0x3c, 0xd9, 0x0a, 0x60,
	0xd4, 0x64, 0xe6, 0xa5, 0xf6, 0x32, 0x31, 0x89, 0x46, 0xdb, 0xa3, 0x83, 0xe7, 0x63, 0x5f, 0xa4,
	0xdc, 0x5e, 0x51, 0x99, 0xd2, 0x18, 0xe5, 0x43, 0x5f, 0x24, 0x76, 0x47, 0xc9, 0x23, 0x8d, 0xf2,
	0xf8, 0x7f, 0x14, 0x4c, 0xb8, 0xdd, 0x55, 0xf2, 0x1a, 0xe3, 0x11, 0x90, 0xfc, 0x9d, 0x0d, 0xc4,
	0x46, 0x12, 0xa5, 0xcf, 0xc3, 0xe9, 0x01, 0xb9, 0xd2, 0x53, 0xd2, 0x1a, 0x63, 0x60, 0xe4, 0x89,
	0xb8, 0x08, 0x03, 0x7b, 0x55, 0x05, 0x4c, 0x21, 0x0c, 0xcc, 0x24, 0x56, 0x2a, 0x7d, 0x52, 0xd1,
	0x10, 0x77, 0x35, 0x15, 0x17, 0x3c, 0xb5, 0x6f, 0xa9, 0x5d, 0x11, 0xb0, 0x1e, 0x42, 0xd7, 0xf7,
	0xd2, 0x60, 0x3f, 0x15, 0xb3, 0xa9, 0x6d, 0x6e, 0x19, 0xdb, 0xbd, 0x1d, 0x6b, 0x80, 0x17, 0x0b,
	0xde, 0x14, 0x43, 0xbd, 0xc2, 0x4a, 0x21, 0xc7, 0x86, 0x95, 0x51, 0x5e, 0x60, 0x7d, 0xe8, 0x8e,
	0xd2, 0xf4, 0x28, 0x39, 0x4d, 0xc4, 0x85, 0xb9, 0xe4, 0x3c, 0x05, 0xeb, 0xc5, 0x6c, 0xd7, 0xd7,
	0x45, 0x3e, 0x8b, 0x63, 0x2f, 0x9d, 0x2f, 0x2c, 0x25, 0x1b, 0x56, 0x14, 0x25, 0xe9, 0x3c, 0xb6,
	0x98, 0x86, 0xce, 0x1f, 0x1a, 0xf0, 0x81, 0x32, 0x94, 0x17, 0x7a, 0x6e, 0xe9, 0xcb, 0x7a, 0xa5,
	0xaf, 0xed, 0x7c, 0x47, 0xd5, 0xdf, 0x15, 0xb2, 0x83, 0xdc, 0xc5, 0xf2, 0x30, 0x3c, 0x85, 0xae,
	0xa4, 0xb5, 0x90, 0x4b, 0xbb, 0xb5, 0xd5, 0xdc, 0xee, 0xed, 0x6c, 0x2f, 0x56, 0x1f, 0x6b, 0xd1,
	0x51, 0x92, 0xa5, 0x73, 0x56, 0xaa, 0x6e, 0x32, 0x58, 0xab, 0x2f, 0x62, 0xe2, 0x4e, 0xf9, 0x3c,
	0x2f, 0x5c, 0x24, 0xad, 0xfb, 0xd0, 0xa6, 0xcb, 0x8f, 0xdc, 0xec, 0xed, 0x6c, 0x14, 0x01, 0xad,
	0x7c, 0x82, 0x29, 0x91, 0x2f, 0x1a, 0x9f, 0x19, 0x8e, 0x53, 0x86, 0xb4, 0x03, 0xad, 0xf1, 0xcc,
	0xf7, 0xcd, 0xa5, 0x3c, 0xb8, 0xe3, 0xb9, 0xcc, 0x78, 0x6c, 0x1a, 0xce, 0x3f, 0x1a, 0x45, 0x74,
	0x5f, 0xce, 0x78, 0x3a, 0x47, 0x53, 0xee, 0xde, 0xc2, 0xe8, 0xfe, 0x1c, 0xba, 0x67, 0x28, 0xf6,
	0xaa, 0x3c, 0xad, 0x4e, 0x75, 0xbb, 0x55, 0x23, 0x83, 0x97, 0x5a, 0x92, 0x95, 0x4a, 0x58, 0x7d,
	0x53, 0x2f, 0xf5, 0x62, 0x37, 0xc9, 0xe8, 0x78, 0xb4, 0x58, 0x81, 0x8b, 0xb5, 0x71, 0x96, 0xd2,
	0x21, 0xe9, 0xb2, 0x02, 0x5b, 0x5f, 0x42, 0xcf, 0xf3, 0x7d, 0x31, 0x4b, 0x32, 0xfa, 0xf6, 0x32,
	0x7d, 0xfb, 0xc3, 0x81, 0xee, 0x5a, 0x83, 0x5d, 0xb5, 0x78, 0x20, 0x26, 0x61, 0xf2, 0x6a, 0x3e,
	0x65, 0x55, 0x69, 0xe7, 0x6b, 0xe8, 0x16, 0xce, 0x58, 0x3d, 0x58, 0x71, 0x93, 0x73, 0x2f, 0x0a,
	0x03, 0x73, 0xc9, 0x5a, 0x03, 0x78, 0x32, 0x3f, 0x0c, 0xfd, 0xd3, 0x43, 0x2f, 0xe6, 0xa6, 0x81,
	0xe1, 0x79, 0x32, 0xcf, 0x6d, 0x99, 0x0d, 0xcb, 0x84, 0xd5, 0x83, 0xf0, 0x94, 0x17, 0x02, 0x4d,
	0x25, 0x70, 0x94, 0x84, 0x22, 0x71, 0x03, 0xb3, 0xe5, 0xfc, 0xd5, 0x28, 0x8b, 0xaa, 0x1a, 0xc0,
	0xeb, 0x8a, 0xaa, 0x1a, 0xa7, 0x4b, 0x45, 0x95, 0xd7, 0xb0, 0x5b, 0xaf, 0x61, 0x37, 0x90, 0xce,
	0xa3, 0xab, 0x52, 0xba, 0x0a, 0x1d, 0x4a, 0x29, 0x65, 0x14, 0x5d, 0x1e, 0xa5, 0x69, 0xb1, 0x5d,
	0xb3, 0xe1, 0x7c, 0x0a, 0x77, 0x77, 0xfd, 0x51, 0xc2, 0xf8, 0xd9, 0xd0, 0xf3, 0x4f, 0xf8, 0x0d,
	0x4e, 0x91, 0xf3, 0x1b, 0xb0, 0x95, 0x8a, 0x9c, 0xde, 0x54, 0xa7, 0xda, 0x31, 0x9a, 0xf5, 0x8e,
	0x31, 0x80, 0x15, 0x55, 0xe9, 0xea, 0x46, 0x5c, 0x54, 0xba, 0x5a, 0xc8, 0xf9, 0xad, 0x41, 0x6d,
	0x63, 0xdf, 0x8b, 0xa9, 0xc5, 0x2d, 0xfc, 0xe2, 0x06, 0xb4, 0x33, 0x91, 0x79, 0x51, 0xde, 0xce,
	0x14, 0xc0, 0x1b, 0x32, 0x0b, 0xfd, 0xd3, 0xbc, 0xe7, 0x12, 0x8d, 0x3c, 0xee, 0xf9, 0xba, 0xcf,
	0x12, 0x8d, 0xbc, 0x18, 0x9d, 0x5d, 0xde, 0x6a, 0x22, 0x0f, 0x69, 0x3c, 0x74, 0x5e, 0x3a, 0xa1,
	0x4b, 0xb7, 0xcb, 0x90, 0xc4, 0x81, 0xa1, 0x83, 0x0d, 0xc5, 0xcb, 0xfc, 0x93, 0x85, 0x8e, 0xdc,
	0x81, 0x65, 0x54, 0x77, 0xf7, 0x72, 0x4f, 0x72, 0x64, 0x7d, 0x04, 0x10, 0xa3, 0xa2, 0xba, 0xca,
	0xd5, 0xc7, 0x2b, 0x1c, 0x1a, 0x3b, 0xb8, 0xcc, 0xb0, 0x7d, 0x51, 0x45, 0x77, 0x59, 0x81, 0xf1,
	0x0a, 0x45, 0xeb, 0x4f, 0xd2, 0x90, 0x1f, 0xd3, 0xf5, 0x5d, 0xbd, 0x42, 0x8f, 0xf4, 0x0a, 0x2b,
	0x85, 0x9c, 0x7f, 0x1b, 0xd0, 0xc5, 0x8c, 0x5d, 0xeb, 0x6b, 0xca, 0xe5, 0x2c, 0xca, 0xb4, 0xaf,
	0x0a, 0x59, 0x9f, 0x96, 0xe9, 0x6b, 0x51, 0xc5, 0xde, 0xd5, 0x6d, 0x38, 0xb7, 0x78, 0xa9, 0x4e,
	0x9d, 0xac, 0xac, 0xc6, 0xda, 0xa1, 0x02, 0x58, 0xde, 0xf7, 0xe2, 0x30, 0x99, 0x98, 0x06, 0x16,
	0x27, 0x69, 0x23, 0xa2, 0xf3, 0xf4, 0x0b, 0x11, 0x26, 0xc4, 0x19, 0xa5, 0xa9, 0xd9, 0x44, 0xce,
	0x30, 0xe5, 0x5e, 0xc6, 0x73, 0x8d, 0x16, 0x72, 0x0e, 0x05, 0xe6, 0x5e, 0xcd, 0x68, 0x66, 0x1b,
	0x6d, 0xe0, 0x54, 0xf4, 0x74, 0x16, 0x45, 0xe6, 0xb2, 0xb3, 0x8d, 0xb3, 0xca, 0xd9, 0xd0, 0x4b,
	0x7c, 0x1e, 0xbd, 0x77, 0xab, 0xce, 0x7f, 0x9a, 0xb0, 0x76, 0x20, 0xf6, 0x3d, 0xc6, 0xcf, 0x0e,
	0xf9, 0x05, 0x9a, 0x54, 0x43, 0x59, 0xcc, 0x8f, 0x8e, 0xdc, 0x3d, 0xdd, 0xb6, 0x35, 0xb6, 0x1e,
	0x41, 0x1b, 0x15, 0xf5, 0x3d, 0xfe, 0x6d, 0xb5, 0xff, 0xba, 0x01, 0x8a, 0x3c, 0xe6, 0x87, 0x29,
	0x59, 0xac, 0x7a, 0x2f, 0x1c, 0x9f, 0xa7, 0xee, 0x1e, 0xe5, 0xb7, 0xcf, 0x34, 0xb4, 0x7e, 0x02,
	0x2b, 0x91, 0x10, 0xa7, 0x68, 0x70, 0xf9, 0x26, 0x06, 0xb5, 0x34, 0x65, 0x48, 0x88, 0xf8, 0xf0,
	0xb9, 0xbd, 0xa6, 0xa6, 0x13, 0x85, 0x34, 0xdf, 0x0d, 0xa8, 0xd7, 0xe6, 0x7c, 0x37, 0xb0, 0x1e,
	0x43, 0x0f, 0xa9, 0x31, 0xcf, 0xb2, 0x30, 0x99, 0xe4, 0xed, 0xb6, 0x3c, 0x62, 0xac, 0x5c, 0x63,
	0x55, 0x41, 0x74, 0xfd, 0x5c, 0x84, 0x3e, 0x77, 0x03, 0x7b, 0x9d, 0x42, 0xa1, 0xe1, 0xe6, 0xdf,
	0x0d, 0xe8, 0x68, 0xbf, 0x74, 0x74, 0xdd, 0xda, 0x10, 0xe5, 0x16, 0x43, 0x94, 0x5b, 0x1b, 0xa2,
	0xdc, 0xf7, 0x0c, 0x51, 0x34, 0x5d, 0x70, 0x2f, 0x73, 0xf5, 0x3c, 0x9c, 0x23, 0x9a, 0xa1, 0x25,
	0x13, 0x6f, 0x45, 0x46, 0x63, 0x47, 0x87, 0x69, 0x58, 0x3f, 0x04, 0xfd, 0x9b, 0x1c, 0x82, 0x3f,
	0x1b, 0x60, 0xa9, 0x08, 0xcb, 0xe9, 0x21, 0xbf, 0x78, 0xf1, 0xfa, 0xc5, 0xb5, 0x79, 0xff, 0xa2,
	0x7e, 0x71, 0xad, 0xed, 0x6c, 0x55, 0x13, 0x55, 0x35, 0x73, 0xf9, 0x08, 0xfc, 0xa0, 0x76, 0x21,
	0x1f, 0x8a, 0x84, 0x9b, 0x4b, 0xd6, 0x5d, 0xf8, 0x00, 0x99, 0xba, 0xac, 0xf9, 0x53, 0x2f, 0x8c,
	0x78, 0x60, 0x1a, 0xce, 0x3f, 0x1b, 0x70, 0x2b, 0x4f, 0xff, 0x81, 0x10, 0xa7, 0xd7, 0x7a, 0xf6,
	0x18, 0x96, 0x55, 0x51, 0x90, 0x63, 0xbd, 0x9d, 0x8f, 0x6a, 0x15, 0xa4, 0x4d, 0x94, 0x25, 0x94,
	0x4b, 0x57, 0x2a, 0xa8, 0xb5, 0xa0, 0x82, 0xda, 0xd5, 0x0a, 0xfa, 0x7f, 0xce, 0xf7, 0x9f, 0x0c,
	0x30, 0x75, 0xa2, 0x6e, 0x14, 0xd3, 0xcf, 0xbe, 0x99, 0xed, 0x8f, 0xea, 0xd9, 0x2e, 0xa2, 0x7a,
	0x29, 0xd7, 0xf7, 0xaf, 0xca, 0xf5, 0x6d, 0x58, 0x1f, 0xa5, 0xa9, 0x56, 0x2a, 0x32, 0xfd, 0x71,
	0x91, 0x68, 0xf4, 0xfa, 0xe5, 0x2c, 0x5c, 0xd8, 0xc5, 0x9c, 0xdf, 0x55, 0x76, 0x70, 0x9d, 0xf0,
	0xb5, 0xde, 0x6b, 0x03, 0x97, 0xbd, 0xff, 0xfe, 0x55, 0xde, 0xaf, 0x43, 0x9f, 0x86, 0x85, 0x30,
	0x2b, 0x3c, 0xff, 0x8b, 0x01, 0xab, 0xea, 0xe6, 0x3d, 0x14, 0x59, 0xe8, 0xd3, 0x6b, 0xc6, 0x9b,
	0x4e, 0xdd, 0xbd, 0xfc, 0x5d, 0xad, 0x40, 0x51, 0x25, 0x7b, 0x55, 0x07, 0xdd, 0x3d, 0x7a, 0x17,
	0x91, 0x5e, 0xd1, 0x0c, 0x0b, 0x8c, 0xdd, 0x35, 0x96, 0x93, 0xfc, 0x81, 0x88, 0x64, 0xf1, 0x66,
	0x6c, 0xab, 0x17, 0x3f, 0xd2, 0xf8, 0xde, 0xf6, 0x4f, 0xbc, 0x24, 0xe1, 0x91, 0xbb, 0x97, 0x3f,
	0x8b, 0x4a, 0x86, 0xf3, 0x33, 0x7a, 0xee, 0x62, 0xac, 0x19, 0x8f, 0xc5, 0x39, 0xb9, 0x27, 0xf9,
	0x59, 0xfe, 0xc4, 0x6b, 0x32, 0x05, 0xe8, 0xc1, 0xe2, 0xc5, 0xdc, 0xdd, 0xd3, 0xbf, 0x1b, 0x68,
	0xe8, 0xfc, 0x4a, 0x3d, 0x75, 0x6f, 0x62, 0x61, 0xc1, 0x03, 0xb8, 0x62, 0xbb, 0x59, 0xb7, 0xfd,
	0x7b, 0x03, 0xac, 0xc3, 0xec, 0x98, 0x9a, 0x57, 0xe6, 0x65, 0x7c, 0x78, 0xe2, 0x25, 0x13, 0x6e,
	0xfd, 0x08, 0xda, 0x12, 0x21, 0x7d, 0xa0, 0x48, 0xd9, 0x65, 0xc1, 0x01, 0xd1, 0x4c, 0x09, 0xbf,
	0xaf, 0x88, 0x9d, 0xef, 0x41, 0x9b, 0x64, 0xd5, 0xe3, 0x37, 0xcc, 0xcc, 0x25, 0xab, 0x4b, 0xac,
	0x34, 0x33, 0x0d, 0x7c, 0x1a, 0x8f, 0x92, 0xc0, 0x6c, 0x38, 0xf7, 0xc1, 0xda, 0x0d, 0x76, 0xa3,
	0x88, 0xf1, 0xb3, 0x17, 0x61, 0x32, 0x51, 0x69, 0xbd, 0x7a, 0xbf, 0xce, 0x27, 0xf0, 0x41, 0x2e,
	0x2b, 0xa7, 0xd7, 0x0a, 0xff, 0xcb, 0x50, 0x4f, 0xed, 0xfd, 0x67, 0x43, 0x11, 0xc7, 0x5e, 0x12,
	0x58, 0xbb, 0xd0, 0xf3, 0x15, 0x49, 0xf3, 0xb9, 0xda, 0xe9, 0x3d, 0xb5, 0xd3, 0x9a, 0xe4, 0x60,
	0x58, 0x8a, 0xb1, 0xaa, 0x8e, 0xe5, 0xc0, 0x6a, 0xe6, 0xa5, 0x13, 0x9e, 0x1d, 0x55, 0x0b, 0xab,
	0xc6, 0xc3, 0xb2, 0xa3, 0x27, 0xc1, 0x43, 0x2a, 0xae, 0x26, 0xcb, 0x11, 0x5d, 0x35, 0x2f, 0x90,
	0xcc, 0xab, 0x2b, 0x47, 0xce, 0x63, 0xe8, 0x55, 0xbe, 0x87, 0xd3, 0x3b, 0xfd, 0x6c, 0x33, 0x3c,
	0xf1, 0x32, 0x35, 0x39, 0x3f, 0x9f, 0xf2, 0x84, 0x90, 0x81, 0x63, 0x0b, 0xca, 0x8a, 0xc4, 0xf4,
	0x9d, 0xaf, 0xe0, 0x16, 0x56, 0x47, 0xc6, 0xcb, 0x1d, 0x2e, 0xfa, 0x31, 0xc1, 0x82, 0xd6, 0x24,
	0x2e, 0x0e, 0x2a, 0xd1, 0x58, 0x22, 0xf9, 0xce, 0xc8, 0xcf, 0x2e, 0xd3, 0xd0, 0xf9, 0x63, 0x0b,
	0x56, 0xf7, 0xe5, 0x48, 0x62, 0xea, 0x9f, 0x9f, 0xab, 0xbb, 0xfa, 0xca, 0x93, 0xbe, 0x05, 0xbd,
	0x50, 0x8e, 0xde, 0xf9, 0x7c, 0x9a, 0xe9, 0xab, 0xb5, 0xc3, 0xaa, 0xac, 0xf2, 0x07, 0x85, 0x56,
	0xf5, 0x07, 0x05, 0x13, 0x9a, 0xfc, 0xdd, 0x34, 0x1f, 0x36, 0x91, 0xb4, 0x3e, 0x87, 0x55, 0x2c,
	0x9c, 0x67, 0x22, 0xe0, 0x94, 0x1b, 0xa0, 0xdc, 0xdc, 0x2e, 0xdf, 0x4e, 0xfb, 0xe5, 0x2a, 0xab,
	0x89, 0xaa, 0x3b, 0x3f, 0xc6, 0x3b, 0xbf, 0xaf, 0xc2, 0xaa, 0x90, 0xf5, 0x5d, 0xe8, 0x4f, 0x54,
	0xed, 0xa6, 0xd9, 0xab, 0x30, 0xe6, 0x34, 0xa9, 0x34, 0x59, 0x9d, 0x89, 0x5b, 0x40, 0xc6, 0x28,
	0x09, 0x48, 0xe6, 0x16, 0xc9, 0x54, 0x59, 0x38, 0x20, 0xa7, 0x62, 0x96, 0x04, 0x43, 0x7c, 0x6f,
	0xd1, 0xe4, 0xd2, 0x66, 0x15, 0x0e, 0xc6, 0xf6, 0x42, 0xa4, 0x7a, 0x3e, 0x21, 0x1a, 0x7d, 0xc2,
	0xff, 0x6e, 0x60, 0x5b, 0xaa, 0xab, 0x28, 0x84, 0x63, 0xd0, 0x45, 0x98, 0x1c, 0x08, 0xa9, 0x76,
	0xb9, 0x41, 0xbb, 0xdc, 0x28, 0x77, 0xf9, 0x55, 0xb1, 0xc8, 0xaa, 0x82, 0xd6, 0x0f, 0xa1, 0x93,
	0x8a, 0x48, 0x29, 0xdd, 0x26, 0xa5, 0xf5, 0x52, 0x89, 0xa9, 0x15, 0x56, 0x88, 0x54, 0x9a, 0xda,
	0x9d, 0x5a, 0x53, 0xdb, 0x84, 0x4e, 0x28, 0x47, 0xd2, 0xf7, 0xa6, 0xdc, 0xbe, 0x4b, 0xc9, 0x2a,
	0xb0, 0x75, 0x0f, 0xda, 0x92, 0x9e, 0x00, 0xf7, 0x68, 0x10, 0xec, 0x0e, 0x82, 0xb7, 0x03, 0x7a,
	0x01, 0x30, 0xc5, 0x77, 0x18, 0xac, 0x8d, 0x92, 0x03, 0xc1, 0xbc, 0x8b, 0x67, 0x5c, 0x4a, 0x6f,
	0xc2, 0x2b, 0xf7, 0xab, 0x51, 0xbb, 0x5f, 0x37, 0xa0, 0x1d, 0xcb, 0x49, 0xd1, 0x84, 0x15, 0x28,
	0xee, 0x51, 0xac, 0x92, 0xd5, 0xfc, 0xb7, 0xb7, 0x5f, 0xc3, 0xfa, 0x48, 0xee, 0x46, 0xd1, 0x61,
	0x76, 0x5c, 0x74, 0xce, 0x85, 0x45, 0xfc, 0x10, 0xba, 0x85, 0x50, 0xfe, 0xfb, 0xc2, 0x95, 0x8d,
	0xb7, 0x20, 0x9d, 0xaf, 0x61, 0x75, 0x3c, 0x56, 0x2d, 0x02, 0x99, 0x0b, 0xc7, 0x86, 0xab, 0x1d,
	0xde, 0x84, 0x4e, 0x24, 0x26, 0xa1, 0xff, 0x4c, 0x4e, 0x72, 0xa7, 0x0b, 0xec, 0x7c, 0x0e, 0xfd,
	0x51, 0xb2, 0xeb, 0x5f, 0x75, 0xf2, 0xea, 0x47, 0xc4, 0x84, 0xa6, 0x1f, 0xeb, 0x13, 0x86, 0xe4,
	0xdb, 0x65, 0xfa, 0x69, 0xf9, 0xd1, 0xff, 0x02, 0x00, 0x00, 0xff, 0xff, 0x12, 0x3b, 0x68, 0x53,
	0x09, 0x17, 0x00, 0x00,
}
