// Code generated by protoc-gen-go. DO NOT EDIT.
// source: gameproto/ai_msg.proto

/*
Package smsg is a generated protocol buffer package.

It is generated from these files:
	gameproto/ai_msg.proto

It has these top-level messages:
	SyncAIVersion
	GsAiReqGetNewRobot
	GsAiRespGetNewRobot
	GsAiNotifyRobotState
	GsAiNotifyDeleteRobot
	GsAiReqSetRobotLevel
	GsAiNotifyRobotSeat
	GsAiNotifyCmd
	AiResponseTest
	AiGsSpeak
	AiGsLogicMsgPack
*/
package smsg

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 机器人监控状态
type EmRobotState int32

const (
	EmRobotState_ROBOT_STATE_NONE    EmRobotState = 0
	EmRobotState_ROBOT_STATE_MONITOR EmRobotState = 1
	EmRobotState_ROBOT_STATE_TRUSTEE EmRobotState = 2
	EmRobotState_ROBOT_STATE_HELP    EmRobotState = 3
)

var EmRobotState_name = map[int32]string{
	0: "ROBOT_STATE_NONE",
	1: "ROBOT_STATE_MONITOR",
	2: "ROBOT_STATE_TRUSTEE",
	3: "ROBOT_STATE_HELP",
}
var EmRobotState_value = map[string]int32{
	"ROBOT_STATE_NONE":    0,
	"ROBOT_STATE_MONITOR": 1,
	"ROBOT_STATE_TRUSTEE": 2,
	"ROBOT_STATE_HELP":    3,
}

func (x EmRobotState) String() string {
	return proto.EnumName(EmRobotState_name, int32(x))
}
func (EmRobotState) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type GsAiRespGetNewRobotEmResult int32

const (
	GsAiRespGetNewRobot_RESULT_OK     GsAiRespGetNewRobotEmResult = 0
	GsAiRespGetNewRobot_RESULT_FAILED GsAiRespGetNewRobotEmResult = 1
)

var GsAiRespGetNewRobotEmResult_name = map[int32]string{
	0: "RESULT_OK",
	1: "RESULT_FAILED",
}
var GsAiRespGetNewRobotEmResult_value = map[string]int32{
	"RESULT_OK":     0,
	"RESULT_FAILED": 1,
}

func (x GsAiRespGetNewRobotEmResult) String() string {
	return proto.EnumName(GsAiRespGetNewRobotEmResult_name, int32(x))
}
func (GsAiRespGetNewRobotEmResult) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{2, 0}
}

type SyncAIVersion struct {
	Id  uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Ver uint32 `protobuf:"varint,2,opt,name=ver" json:"ver,omitempty"`
}

func (m *SyncAIVersion) Reset()                    { *m = SyncAIVersion{} }
func (m *SyncAIVersion) String() string            { return proto.CompactTextString(m) }
func (*SyncAIVersion) ProtoMessage()               {}
func (*SyncAIVersion) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *SyncAIVersion) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *SyncAIVersion) GetVer() uint32 {
	if m != nil {
		return m.Ver
	}
	return 0
}

// 去AI上创建AIRobot
type GsAiReqGetNewRobot struct {
	Seqid       int64        `protobuf:"varint,1,opt,name=seqid" json:"seqid,omitempty"`
	RobotID     uint64       `protobuf:"varint,2,opt,name=robotID" json:"robotID,omitempty"`
	RobotLevel  uint32       `protobuf:"varint,3,opt,name=robot_level,json=robotLevel" json:"robot_level,omitempty"`
	LabelModel  uint32       `protobuf:"varint,4,opt,name=label_model,json=labelModel" json:"label_model,omitempty"`
	TableID     uint64       `protobuf:"varint,5,opt,name=tableID" json:"tableID,omitempty"`
	IsGameStart bool         `protobuf:"varint,6,opt,name=is_game_start,json=isGameStart" json:"is_game_start,omitempty"`
	UserName    string       `protobuf:"bytes,7,opt,name=user_name,json=userName" json:"user_name,omitempty"`
	RobotState  EmRobotState `protobuf:"varint,8,opt,name=robot_state,json=robotState,enum=smsg.EmRobotState" json:"robot_state,omitempty"`
}

func (m *GsAiReqGetNewRobot) Reset()                    { *m = GsAiReqGetNewRobot{} }
func (m *GsAiReqGetNewRobot) String() string            { return proto.CompactTextString(m) }
func (*GsAiReqGetNewRobot) ProtoMessage()               {}
func (*GsAiReqGetNewRobot) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *GsAiReqGetNewRobot) GetSeqid() int64 {
	if m != nil {
		return m.Seqid
	}
	return 0
}

func (m *GsAiReqGetNewRobot) GetRobotID() uint64 {
	if m != nil {
		return m.RobotID
	}
	return 0
}

func (m *GsAiReqGetNewRobot) GetRobotLevel() uint32 {
	if m != nil {
		return m.RobotLevel
	}
	return 0
}

func (m *GsAiReqGetNewRobot) GetLabelModel() uint32 {
	if m != nil {
		return m.LabelModel
	}
	return 0
}

func (m *GsAiReqGetNewRobot) GetTableID() uint64 {
	if m != nil {
		return m.TableID
	}
	return 0
}

func (m *GsAiReqGetNewRobot) GetIsGameStart() bool {
	if m != nil {
		return m.IsGameStart
	}
	return false
}

func (m *GsAiReqGetNewRobot) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *GsAiReqGetNewRobot) GetRobotState() EmRobotState {
	if m != nil {
		return m.RobotState
	}
	return EmRobotState_ROBOT_STATE_NONE
}

type GsAiRespGetNewRobot struct {
	Seqid  int64                       `protobuf:"varint,1,opt,name=seqid" json:"seqid,omitempty"`
	Result GsAiRespGetNewRobotEmResult `protobuf:"varint,2,opt,name=result,enum=smsg.GsAiRespGetNewRobotEmResult" json:"result,omitempty"`
}

func (m *GsAiRespGetNewRobot) Reset()                    { *m = GsAiRespGetNewRobot{} }
func (m *GsAiRespGetNewRobot) String() string            { return proto.CompactTextString(m) }
func (*GsAiRespGetNewRobot) ProtoMessage()               {}
func (*GsAiRespGetNewRobot) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *GsAiRespGetNewRobot) GetSeqid() int64 {
	if m != nil {
		return m.Seqid
	}
	return 0
}

func (m *GsAiRespGetNewRobot) GetResult() GsAiRespGetNewRobotEmResult {
	if m != nil {
		return m.Result
	}
	return GsAiRespGetNewRobot_RESULT_OK
}

// todo gs通知ai服务器机器人状态+++++++++++++++++++++++++++++++++++++++++++++++++++++
type GsAiNotifyRobotState struct {
	RobotID    uint64       `protobuf:"varint,1,opt,name=robotID" json:"robotID,omitempty"`
	RobotState EmRobotState `protobuf:"varint,2,opt,name=robot_state,json=robotState,enum=smsg.EmRobotState" json:"robot_state,omitempty"`
}

func (m *GsAiNotifyRobotState) Reset()                    { *m = GsAiNotifyRobotState{} }
func (m *GsAiNotifyRobotState) String() string            { return proto.CompactTextString(m) }
func (*GsAiNotifyRobotState) ProtoMessage()               {}
func (*GsAiNotifyRobotState) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *GsAiNotifyRobotState) GetRobotID() uint64 {
	if m != nil {
		return m.RobotID
	}
	return 0
}

func (m *GsAiNotifyRobotState) GetRobotState() EmRobotState {
	if m != nil {
		return m.RobotState
	}
	return EmRobotState_ROBOT_STATE_NONE
}

// 删除机器人
type GsAiNotifyDeleteRobot struct {
	RobotID uint64 `protobuf:"varint,1,opt,name=robotID" json:"robotID,omitempty"`
}

func (m *GsAiNotifyDeleteRobot) Reset()                    { *m = GsAiNotifyDeleteRobot{} }
func (m *GsAiNotifyDeleteRobot) String() string            { return proto.CompactTextString(m) }
func (*GsAiNotifyDeleteRobot) ProtoMessage()               {}
func (*GsAiNotifyDeleteRobot) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *GsAiNotifyDeleteRobot) GetRobotID() uint64 {
	if m != nil {
		return m.RobotID
	}
	return 0
}

// todo 设置机器人等级++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
type GsAiReqSetRobotLevel struct {
	RobotID    uint64 `protobuf:"varint,1,opt,name=robotID" json:"robotID,omitempty"`
	RobotLevel uint32 `protobuf:"varint,2,opt,name=robot_level,json=robotLevel" json:"robot_level,omitempty"`
}

func (m *GsAiReqSetRobotLevel) Reset()                    { *m = GsAiReqSetRobotLevel{} }
func (m *GsAiReqSetRobotLevel) String() string            { return proto.CompactTextString(m) }
func (*GsAiReqSetRobotLevel) ProtoMessage()               {}
func (*GsAiReqSetRobotLevel) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *GsAiReqSetRobotLevel) GetRobotID() uint64 {
	if m != nil {
		return m.RobotID
	}
	return 0
}

func (m *GsAiReqSetRobotLevel) GetRobotLevel() uint32 {
	if m != nil {
		return m.RobotLevel
	}
	return 0
}

// 通知机器人座位
type GsAiNotifyRobotSeat struct {
	Seat []*GsAiNotifyRobotSeat_SeatData `protobuf:"bytes,1,rep,name=seat" json:"seat,omitempty"`
}

func (m *GsAiNotifyRobotSeat) Reset()                    { *m = GsAiNotifyRobotSeat{} }
func (m *GsAiNotifyRobotSeat) String() string            { return proto.CompactTextString(m) }
func (*GsAiNotifyRobotSeat) ProtoMessage()               {}
func (*GsAiNotifyRobotSeat) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *GsAiNotifyRobotSeat) GetSeat() []*GsAiNotifyRobotSeat_SeatData {
	if m != nil {
		return m.Seat
	}
	return nil
}

type GsAiNotifyRobotSeat_SeatData struct {
	RobotID uint64 `protobuf:"varint,1,opt,name=robotID" json:"robotID,omitempty"`
	SeatID  uint32 `protobuf:"varint,2,opt,name=seatID" json:"seatID,omitempty"`
}

func (m *GsAiNotifyRobotSeat_SeatData) Reset()                    { *m = GsAiNotifyRobotSeat_SeatData{} }
func (m *GsAiNotifyRobotSeat_SeatData) String() string            { return proto.CompactTextString(m) }
func (*GsAiNotifyRobotSeat_SeatData) ProtoMessage()               {}
func (*GsAiNotifyRobotSeat_SeatData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6, 0} }

func (m *GsAiNotifyRobotSeat_SeatData) GetRobotID() uint64 {
	if m != nil {
		return m.RobotID
	}
	return 0
}

func (m *GsAiNotifyRobotSeat_SeatData) GetSeatID() uint32 {
	if m != nil {
		return m.SeatID
	}
	return 0
}

// 通知AI命令
type GsAiNotifyCmd struct {
	Cmd string `protobuf:"bytes,1,opt,name=cmd" json:"cmd,omitempty"`
}

func (m *GsAiNotifyCmd) Reset()                    { *m = GsAiNotifyCmd{} }
func (m *GsAiNotifyCmd) String() string            { return proto.CompactTextString(m) }
func (*GsAiNotifyCmd) ProtoMessage()               {}
func (*GsAiNotifyCmd) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *GsAiNotifyCmd) GetCmd() string {
	if m != nil {
		return m.Cmd
	}
	return ""
}

type AiResponseTest struct {
	Seqid int64 `protobuf:"varint,1,opt,name=seqid" json:"seqid,omitempty"`
}

func (m *AiResponseTest) Reset()                    { *m = AiResponseTest{} }
func (m *AiResponseTest) String() string            { return proto.CompactTextString(m) }
func (*AiResponseTest) ProtoMessage()               {}
func (*AiResponseTest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *AiResponseTest) GetSeqid() int64 {
	if m != nil {
		return m.Seqid
	}
	return 0
}

// AI吐槽
type AiGsSpeak struct {
	Seqid      int64   `protobuf:"varint,1,opt,name=seqid" json:"seqid,omitempty"`
	SeatId     int32   `protobuf:"varint,2,opt,name=seat_id,json=seatId" json:"seat_id,omitempty"`
	ChatMsgId  int32   `protobuf:"varint,3,opt,name=chat_msg_id,json=chatMsgId" json:"chat_msg_id,omitempty"`
	SeatIdList []int32 `protobuf:"varint,4,rep,packed,name=seat_id_list,json=seatIdList" json:"seat_id_list,omitempty"`
}

func (m *AiGsSpeak) Reset()                    { *m = AiGsSpeak{} }
func (m *AiGsSpeak) String() string            { return proto.CompactTextString(m) }
func (*AiGsSpeak) ProtoMessage()               {}
func (*AiGsSpeak) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *AiGsSpeak) GetSeqid() int64 {
	if m != nil {
		return m.Seqid
	}
	return 0
}

func (m *AiGsSpeak) GetSeatId() int32 {
	if m != nil {
		return m.SeatId
	}
	return 0
}

func (m *AiGsSpeak) GetChatMsgId() int32 {
	if m != nil {
		return m.ChatMsgId
	}
	return 0
}

func (m *AiGsSpeak) GetSeatIdList() []int32 {
	if m != nil {
		return m.SeatIdList
	}
	return nil
}

// 一定不要用这个协议
// AI到GS(C++游戏服务器)的逻辑协议封包(因为AI托管的有可能是玩家)
type AiGsLogicMsgPack struct {
	RobotID  uint64 `protobuf:"varint,1,opt,name=robotID" json:"robotID,omitempty"`
	MsgId    uint32 `protobuf:"varint,2,opt,name=msg_id,json=msgId" json:"msg_id,omitempty"`
	Logicmsg []byte `protobuf:"bytes,3,opt,name=logicmsg,proto3" json:"logicmsg,omitempty"`
}

func (m *AiGsLogicMsgPack) Reset()                    { *m = AiGsLogicMsgPack{} }
func (m *AiGsLogicMsgPack) String() string            { return proto.CompactTextString(m) }
func (*AiGsLogicMsgPack) ProtoMessage()               {}
func (*AiGsLogicMsgPack) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *AiGsLogicMsgPack) GetRobotID() uint64 {
	if m != nil {
		return m.RobotID
	}
	return 0
}

func (m *AiGsLogicMsgPack) GetMsgId() uint32 {
	if m != nil {
		return m.MsgId
	}
	return 0
}

func (m *AiGsLogicMsgPack) GetLogicmsg() []byte {
	if m != nil {
		return m.Logicmsg
	}
	return nil
}

func init() {
	proto.RegisterType((*SyncAIVersion)(nil), "smsg.SyncAIVersion")
	proto.RegisterType((*GsAiReqGetNewRobot)(nil), "smsg.GsAiReqGetNewRobot")
	proto.RegisterType((*GsAiRespGetNewRobot)(nil), "smsg.GsAiRespGetNewRobot")
	proto.RegisterType((*GsAiNotifyRobotState)(nil), "smsg.GsAiNotifyRobotState")
	proto.RegisterType((*GsAiNotifyDeleteRobot)(nil), "smsg.GsAiNotifyDeleteRobot")
	proto.RegisterType((*GsAiReqSetRobotLevel)(nil), "smsg.GsAiReqSetRobotLevel")
	proto.RegisterType((*GsAiNotifyRobotSeat)(nil), "smsg.GsAiNotifyRobotSeat")
	proto.RegisterType((*GsAiNotifyRobotSeat_SeatData)(nil), "smsg.GsAiNotifyRobotSeat.SeatData")
	proto.RegisterType((*GsAiNotifyCmd)(nil), "smsg.GsAiNotifyCmd")
	proto.RegisterType((*AiResponseTest)(nil), "smsg.AiResponseTest")
	proto.RegisterType((*AiGsSpeak)(nil), "smsg.AiGsSpeak")
	proto.RegisterType((*AiGsLogicMsgPack)(nil), "smsg.AiGsLogicMsgPack")
	proto.RegisterEnum("smsg.EmRobotState", EmRobotState_name, EmRobotState_value)
	proto.RegisterEnum("smsg.GsAiRespGetNewRobotEmResult", GsAiRespGetNewRobotEmResult_name, GsAiRespGetNewRobotEmResult_value)
}

func init() { proto.RegisterFile("gameproto/ai_msg.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 649 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x54, 0x4b, 0x6f, 0xd3, 0x4a,
	0x14, 0xae, 0xed, 0x24, 0x4d, 0x4e, 0xea, 0xc8, 0x77, 0xfa, 0xb2, 0x7a, 0xa5, 0x7b, 0x8d, 0x17,
	0x28, 0x42, 0x28, 0xa8, 0xad, 0xc4, 0x02, 0xb1, 0x09, 0xc4, 0x84, 0x88, 0x3c, 0xca, 0xd8, 0x65,
	0x6b, 0x4d, 0x92, 0x83, 0xb1, 0x6a, 0xc7, 0xad, 0x67, 0x5a, 0x54, 0x89, 0x7f, 0xc0, 0x1a, 0x7e,
	0x2f, 0x9a, 0xb1, 0x43, 0x42, 0x44, 0x0a, 0x9b, 0x68, 0xce, 0x77, 0x1e, 0xdf, 0x77, 0x1e, 0x0e,
	0x1c, 0x45, 0x2c, 0xc5, 0xeb, 0x3c, 0x13, 0xd9, 0x33, 0x16, 0x87, 0x29, 0x8f, 0x3a, 0xca, 0x20,
	0x15, 0x9e, 0xf2, 0xc8, 0x3d, 0x05, 0xd3, 0xbf, 0x5f, 0xcc, 0xba, 0x83, 0x0f, 0x98, 0xf3, 0x38,
	0x5b, 0x90, 0x16, 0xe8, 0xf1, 0xdc, 0xd6, 0x1c, 0xad, 0x6d, 0x52, 0x3d, 0x9e, 0x13, 0x0b, 0x8c,
	0x3b, 0xcc, 0x6d, 0x5d, 0x01, 0xf2, 0xe9, 0x7e, 0xd7, 0x81, 0xf4, 0x79, 0x37, 0xa6, 0x78, 0xd3,
	0x47, 0x31, 0xc6, 0xcf, 0x34, 0x9b, 0x66, 0x82, 0x1c, 0x40, 0x95, 0xe3, 0x4d, 0x99, 0x6b, 0xd0,
	0xc2, 0x20, 0x36, 0xec, 0xe6, 0xd2, 0x3d, 0xe8, 0xa9, 0x12, 0x15, 0xba, 0x34, 0xc9, 0xff, 0xd0,
	0x54, 0xcf, 0x30, 0xc1, 0x3b, 0x4c, 0x6c, 0x43, 0x11, 0x80, 0x82, 0x86, 0x12, 0x91, 0x01, 0x09,
	0x9b, 0x62, 0x12, 0xa6, 0xd9, 0x1c, 0x13, 0xbb, 0x52, 0x04, 0x28, 0x68, 0x24, 0x11, 0x59, 0x5b,
	0xb0, 0x69, 0x82, 0x83, 0x9e, 0x5d, 0x2d, 0x6a, 0x97, 0x26, 0x71, 0xc1, 0x8c, 0x79, 0x28, 0x1b,
	0x0f, 0xb9, 0x60, 0xb9, 0xb0, 0x6b, 0x8e, 0xd6, 0xae, 0xd3, 0x66, 0xcc, 0xfb, 0x2c, 0x45, 0x5f,
	0x42, 0xe4, 0x5f, 0x68, 0xdc, 0x72, 0xcc, 0xc3, 0x05, 0x4b, 0xd1, 0xde, 0x75, 0xb4, 0x76, 0x83,
	0xd6, 0x25, 0x30, 0x66, 0x29, 0x92, 0xf3, 0xa5, 0x38, 0x2e, 0x98, 0x40, 0xbb, 0xee, 0x68, 0xed,
	0xd6, 0x19, 0xe9, 0xc8, 0x91, 0x75, 0x30, 0x55, 0x0d, 0xfb, 0xd2, 0x53, 0x0a, 0x56, 0x6f, 0xf7,
	0x9b, 0x06, 0xfb, 0xc5, 0x60, 0xf8, 0xf5, 0x9f, 0x27, 0xf3, 0x02, 0x6a, 0x39, 0xf2, 0xdb, 0x44,
	0xa8, 0xc1, 0xb4, 0xce, 0xdc, 0xa2, 0xfa, 0x6f, 0x0a, 0x48, 0x46, 0x15, 0x49, 0xcb, 0x0c, 0xf7,
	0x29, 0xd4, 0x97, 0x18, 0x31, 0xa1, 0x41, 0x3d, 0xff, 0x72, 0x18, 0x84, 0x93, 0x77, 0xd6, 0x0e,
	0xf9, 0x07, 0xcc, 0xd2, 0x7c, 0xd3, 0x1d, 0x0c, 0xbd, 0x9e, 0xa5, 0xb9, 0x08, 0x07, 0xb2, 0xea,
	0x38, 0x13, 0xf1, 0xc7, 0xfb, 0x95, 0xf6, 0xf5, 0xdd, 0x68, 0xbf, 0xee, 0x66, 0xa3, 0x7d, 0xfd,
	0xaf, 0xda, 0x3f, 0x85, 0xc3, 0x15, 0x4d, 0x0f, 0x13, 0x14, 0x58, 0xf4, 0xbf, 0x95, 0xc7, 0x7d,
	0x5f, 0x28, 0xa3, 0x78, 0xe3, 0xa3, 0xa0, 0xab, 0xd5, 0x6f, 0x57, 0xb6, 0x71, 0x35, 0xfa, 0xe6,
	0xd5, 0xb8, 0x5f, 0xcb, 0x25, 0xac, 0x77, 0x8b, 0x4c, 0x90, 0xe7, 0x50, 0xe1, 0xc8, 0x84, 0xad,
	0x39, 0x46, 0xbb, 0xb9, 0x3e, 0xec, 0x8d, 0xc0, 0x8e, 0xfc, 0xe9, 0x31, 0xc1, 0xa8, 0x8a, 0x3f,
	0x79, 0x09, 0xf5, 0x25, 0xf2, 0x80, 0xac, 0x23, 0xa8, 0xc9, 0xe8, 0xf2, 0xca, 0x4d, 0x5a, 0x5a,
	0xee, 0x23, 0x30, 0x57, 0x1c, 0xaf, 0x53, 0xf5, 0x39, 0xcd, 0xd2, 0xe2, 0x12, 0x1a, 0x54, 0x3e,
	0xdd, 0xc7, 0xd0, 0x2a, 0x36, 0x9e, 0x2d, 0x38, 0x06, 0xc8, 0xb7, 0xdc, 0x8b, 0xfb, 0x05, 0x1a,
	0xdd, 0xb8, 0xcf, 0xfd, 0x6b, 0x64, 0x57, 0x5b, 0x4e, 0xea, 0x18, 0x76, 0x25, 0x6f, 0x18, 0xcf,
	0x95, 0x8c, 0x6a, 0x29, 0x63, 0x4e, 0xfe, 0x83, 0xe6, 0xec, 0x13, 0x13, 0xf2, 0xeb, 0x97, 0x4e,
	0x43, 0x39, 0x1b, 0x12, 0x1a, 0xf1, 0x68, 0x30, 0x27, 0x0e, 0xec, 0x95, 0x89, 0x61, 0x12, 0x73,
	0x61, 0x57, 0x1c, 0xa3, 0x5d, 0xa5, 0x50, 0x64, 0x0f, 0x63, 0x2e, 0xdc, 0x10, 0x2c, 0xc9, 0x3e,
	0xcc, 0xa2, 0x78, 0x36, 0xe2, 0xd1, 0x05, 0x9b, 0x5d, 0x3d, 0x30, 0x8e, 0x43, 0xa8, 0x95, 0x54,
	0xc5, 0x38, 0xaa, 0xa9, 0xa2, 0x39, 0x81, 0x7a, 0x22, 0x0b, 0xa4, 0x3c, 0x52, 0x1a, 0xf6, 0xe8,
	0x4f, 0xfb, 0x49, 0x02, 0x7b, 0xeb, 0x97, 0x45, 0x0e, 0xc0, 0xa2, 0x93, 0x57, 0x93, 0x20, 0xf4,
	0x83, 0x6e, 0xe0, 0x85, 0xe3, 0xc9, 0xd8, 0xb3, 0x76, 0xc8, 0x31, 0xec, 0xaf, 0xa3, 0xa3, 0xc9,
	0x78, 0x10, 0x4c, 0xa8, 0xa5, 0x6d, 0x3a, 0x02, 0x7a, 0xe9, 0x07, 0x9e, 0x67, 0xe9, 0x9b, 0x75,
	0xde, 0x7a, 0xc3, 0x0b, 0xcb, 0x98, 0xd6, 0xd4, 0x7f, 0xe0, 0xf9, 0x8f, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x63, 0xaf, 0x71, 0x34, 0x1d, 0x05, 0x00, 0x00,
}
